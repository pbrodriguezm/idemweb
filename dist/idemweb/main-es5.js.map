{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/cursos/cursos.component.ts","webpack:///src/app/components/cursos/cursos.component.html","webpack:///src/app/components/cursos/online/online.component.ts","webpack:///src/app/components/cursos/online/online.component.html","webpack:///src/app/components/cursos/presencial/presencial.component.ts","webpack:///src/app/components/cursos/presencial/presencial.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/services/api/idemAlumnos.service.ts","webpack:///src/services/api/idemApartados.service.ts","webpack:///src/services/api/idemCargos.service.ts","webpack:///src/services/api/idemCategorias.service.ts","webpack:///src/services/api/idemCursos.service.ts","webpack:///src/services/api/idemDocentes.service.ts","webpack:///src/services/api/idemEstados.service.ts","webpack:///src/services/api/idemMatriculas.service.ts","webpack:///src/services/api/idemModulos.service.ts","webpack:///src/services/api/idemModulosComentarios.service.ts","webpack:///src/services/api/idemPagos.service.ts","webpack:///src/services/api/idemPermisos.service.ts","webpack:///src/services/api/idemPersonas.service.ts","webpack:///src/services/api/idemRelCursosModulos.service.ts","webpack:///src/services/api/idemUsuarios.service.ts","webpack:///src/services/api/introspection.service.ts","webpack:///src/services/api/itemTipocursos.service.ts","webpack:///src/services/configuration.ts","webpack:///src/services/encoder.ts","webpack:///src/services/variables.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","authService","dialog","title","authState","subscribe","user","loggedIn","dialogRef","open","afterClosed","result","console","log","selector","templateUrl","styleUrls","config","PROVIDER_ID","provider","provideConfig","AppModule","provide","useFactory","declarations","providers","bootstrap","CursosComponent","route","ademRelCursosModulosService","idemCursosService","paramMap","params","idcurso","get","cargarCurso","idemCursosGet","data","curso","modulos","idem_modulos","OnlineComponent","idemcursoList","index","cargarCursos","cantidad","arrayselect","length","push","PresencialComponent","profesores","mes","precios","items","cargarProfesores","cargarPrecios","idem_docentes","idem_curso_items","idtipoitem","fecha","Date","fechahora_inicio","getMonth","HomeComponent","interval","wrap","keyboard","pauseOnHover","RegisterComponent","logueado","signIn","loguear","valor","environment","production","bootstrapModule","err","error","IdemAlumnosService","httpClient","basePath","configuration","defaultHeaders","consumes","form","consume","dni","password","email","carrera","idestado","fecharegistro","prefer","observe","reportProgress","queryParameters","encoder","undefined","set","headers","String","httpHeaderAccepts","httpHeaderAcceptSelected","selectHeaderAccept","withCredentials","select","order","range","rangeUnit","offset","limit","idemAlumnos","httpContentTypeSelected","selectHeaderContentType","patch","post","IdemApartadosService","idapartado","nombre","classe","titulo","url","idemApartados","IdemCargosService","idcargo","idemCargos","IdemCategoriasService","idcategoria","idemCategorias","IdemCursosService","descripcion","descripcion2","imagen","costo","moneda","idtipocurso","fechahoraInicio","fechahoraFin","lugar","idemCursos","IdemDocentesService","tituloProfesional","idemDocentes","IdemEstadosService","ideestado","idemEstados","IdemMatriculasService","idmatricula","idemMatriculas","IdemModulosService","idmodulo","dniProfesor","video","idemModulos","IdemModulosComentariosService","idcomentario","comentario","idemModulosComentarios","IdemPagosService","idpago","fechaProgramada","monto","idemPagos","IdemPermisosService","permiso","idemPermisos","IdemPersonasService","nombres","apellidoPa","apellidoMa","foto","fechaNacimiento","estado","idemPersonas","IdemRelCursosModulosService","idemRelCursosModulos","IdemUsuariosService","idemUsuarios","IntrospectionService","ItemTipocursosService","itemTipocursos","Configuration","configurationParameters","apiKeys","username","accessToken","contentTypes","type","find","x","isJsonMime","accepts","mime","jsonMime","RegExp","test","toLowerCase","CustomHttpUrlEncodingCodec","k","replace","v","BASE_PATH","COLLECTION_FORMATS"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,EAKrB;AAACD,UAAI,EAAE,gBAAP;AAAwBC,eAAS,EAAE;AAAnC,KALqB,EAMrB;AAACD,UAAI,EAAE,uBAAP;AAA+BC,eAAS,EAAE;AAA1C,KANqB,EAOrB;AAACD,UAAI,EAAE,eAAP;AAAuBC,eAAS,EAAE;AAAlC,KAPqB,CAAvB;;QAgBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACzB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACiCgB;;AAAiD;AAAA;;AAAA;;AAAA;AAAA;;AAE7C;;AACJ;;;;;;;;AAEA;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAEvC;;AAAsB;;AAAtB;;AACJ;;;;;;AAD8F;;AAAA;;;;QD3BjGQ,Y;AAMX,4BACUC,WADV,EAESC,MAFT,EAE0B;AAAA;;AAAA;;AADhB,aAAAD,WAAA,GAAAA,WAAA;AACD,aAAAC,MAAA,GAAAA,MAAA;AAPT,aAAAC,KAAA,GAAQ,SAAR;AAUI,aAAKF,WAAL,CAAiBG,SAAjB,CAA2BC,SAA3B,CAAqC,UAACC,IAAD,EAAU;AAC7C,eAAI,CAACA,IAAL,GAAYA,IAAZ;AACA,eAAI,CAACC,QAAL,GAAiBD,IAAI,IAAI,IAAzB;AACD,SAHD;AAIH;;;;uCACc;AACb,cAAME,SAAS,GAAG,KAAKN,MAAL,CAAYO,IAAZ,CAAiB,yFAAjB,CAAlB;AAEAD,mBAAS,CAACE,WAAV,GAAwBL,SAAxB,CAAkC,UAAAM,MAAM,EAAI;AAC1CC,mBAAO,CAACC,GAAR,0BAA8BF,MAA9B;AACD,WAFD;AAGD;;;uCAEW;AACV,cAAMH,SAAS,GAAG,KAAKN,MAAL,CAAYO,IAAZ,CAAiB,yFAAjB,CAAlB;AAEAD,mBAAS,CAACE,WAAV,GAAwBL,SAAxB,CAAkC,UAAAM,MAAM,EAAI;AAC1CC,mBAAO,CAACC,GAAR,0BAA8BF,MAA9B;AACD,WAFD;AAGD;;;;;;;uBA9BUX,Y,EAAY,kI,EAAA,mI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,gB;AAAA,a;AAAA,07F;AAAA;AAAA;ACZzB;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AAIA;;AAKA;;AAKJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AAEA;;AACI;;AACJ;;AAGJ;;AACJ;;AACJ;;AACJ;;AAGA;;AAEI;;AACJ;;AAIA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAA8B;;AAA0C;;AACxE;;AACI;;AACI;;AACI;;AACI;;AAAgC;;AAAQ;;AAC5C;;AACJ;;AACA;;AACI;;AACI;;AAAgC;;AAAU;;AAC9C;;AACJ;;AACA;;AACI;;AACI;;AAAgC;;AAAe;;AACnD;;AACJ;;AACA;;AACI;;AACI;;AAAgC;;AAAW;;AAC/C;;AACJ;;AACA;;AACI;;AACI;;AAAgC;;AAAQ;;AAC5C;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAgC;;AAAQ;;AAC5C;;AACJ;;AACA;;AACI;;AACI;;AAAgC;;AAAS;;AAC7C;;AACJ;;AACA;;AACI;;AACI;;AAAgC;;AAAc;;AAClD;;AACJ;;AACA;;AACI;;AACI;;AAAgC;;AAAQ;;AAC5C;;AACJ;;AACA;;AACI;;AACI;;AAAgC;;AAAU;;AAC9C;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAA8B;;AAAoB;;AAClD;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AAAoC;;AAAsB;;AAC9D;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AAAiC;;AAA+B;;AACpE;;AACJ;;;;AAhImB;;AAAA;;AAKA;;AAAA;;;;;;;;;sEDzBNA,Y,EAAY;cALxB,uDAKwB;eALd;AACTc,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;AEbzkBA;;AAOA;;AAEA;;;AAsBA,QAAIC,MAAM,GAAG,IAAI,wEAAJ,CAAsB,CACjC;AACExB,QAAE,EAAE,2EAAoByB,WAD1B;AAEEC,cAAQ,EAAE,IAAI,0EAAJ,CAAwB,0EAAxB;AAFZ,KADiC,CAAtB,CAAb;;AAOO,aAASC,aAAT,GAAyB;AAC9B,aAAOH,MAAP;AACD;;QAiDYI,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAvBT,CAAE,qFAAF,EACT,yFADS,EAET,mFAFS,EAGT,2FAHS,EAIT,mFAJS,EAKT,uFALS,EAMT,qFANS,EAOT,2FAPS,EAQT,qFARS,EAST,2GATS,EAUT,iFAVS,EAWT,uFAXS,EAYT,uFAZS,EAaT,uGAbS,EAcT,uFAdS,EAeT,yFAfS,EAgBT,2FAhBS,EAiBT;AACEC,eAAO,EAAE,wEADX;AAEEC,kBAAU,EAAEH;AAFd,OAjBS,C;AAoBN,gBAnCI,CACP,uEADO,EAEP,oEAFO,EAGP,oEAHO,EAIP,4FAJO,EAKP,qEALO,EAMP,yEANO,EAOP,uEAPO,EAQP,yEARO,EASP,2EATO,EAUP,yEAVO,EAWP,2EAXO,EAYP,wEAZO,CAmCJ;;;;0HAGMC,S,EAAS;AAAA,uBA7ClB,2DA6CkB,EA5ClB,mFA4CkB,EA3ClB,0FA2CkB,EA1ClB,sGA0CkB,EAzClB,8EAyCkB,EAxClB,0FAwCkB;AAxCD,kBAGjB,uEAHiB,EAIjB,oEAJiB,EAKjB,oEALiB,EAMjB,4FANiB,EAOjB,qEAPiB,EAQjB,yEARiB,EASjB,uEATiB,EAUjB,yEAViB,EAWjB,2EAXiB,EAYjB,yEAZiB,EAajB,2EAbiB,EAcjB,wEAdiB;AAwCC,O;AA1BD,K;;;;;sEA0BRA,S,EAAS;cA/CrB,sDA+CqB;eA/CZ;AACRG,sBAAY,EAAE,CACZ,2DADY,EAEZ,mFAFY,EAGZ,0FAHY,EAIZ,sGAJY,EAKZ,8EALY,EAMZ,0FANY,CADN;AASRzB,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,oEAHO,EAIP,4FAJO,EAKP,qEALO,EAMP,yEANO,EAOP,uEAPO,EAQP,yEARO,EASP,2EATO,EAUP,yEAVO,EAWP,2EAXO,EAYP,wEAZO,CATD;AAwBR0B,mBAAS,EAAE,CAAE,qFAAF,EACT,yFADS,EAET,mFAFS,EAGT,2FAHS,EAIT,mFAJS,EAKT,uFALS,EAMT,qFANS,EAOT,2FAPS,EAQT,qFARS,EAST,2GATS,EAUT,iFAVS,EAWT,uFAXS,EAYT,uFAZS,EAaT,uGAbS,EAcT,uFAdS,EAeT,yFAfS,EAgBT,2FAhBS,EAiBT;AACEH,mBAAO,EAAE,wEADX;AAEEC,sBAAU,EAAEH;AAFd,WAjBS,CAxBH;AA6CRM,mBAAS,EAAE,CAAC,2DAAD;AA7CH,S;AA+CY,Q;;;;;;;;;;;;;;;;;;AC3GtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC8DgC;;AAAuF;;AACnF;;AAAkC;;AAAgB;;AACtD;;;;;;AAF4F;;AAAA;;AACtD;;AAAA;;;;QDhDzDC,e;AAGX,+BAAoBC,KAApB,EACYC,2BADZ,EAEYC,iBAFZ,EAEiD;AAAA;;AAF7B,aAAAF,KAAA,GAAAA,KAAA;AACR,aAAAC,2BAAA,GAAAA,2BAAA;AACA,aAAAC,iBAAA,GAAAA,iBAAA;AAAwC;;;;mCAI5C;AAAA;;AACN,eAAKF,KAAL,CAAWG,QAAX,CAAoB1B,SAApB,CAA8B,UAAA2B,MAAM,EAAI;AACtC,kBAAI,CAACC,OAAL,GAAcD,MAAM,CAACE,GAAP,CAAW,SAAX,CAAd;;AACD,kBAAI,CAACC,WAAL;AACA,WAHD;AAID;;;sCAEU;AAAA;;AACT,eAAKL,iBAAL,CAAuBM,aAAvB,CAAqC,QAAM,KAAKH,OAAhD,EAAwD,IAAxD,EAA6D,IAA7D,EAAkE,IAAlE,EAAuE,IAAvE,EAA4E,IAA5E,EAAiF,IAAjF,EAAsF,IAAtF,EAA2F,IAA3F,EAAgG,IAAhG,EAAqG,IAArG,EAA0G,IAA1G,EAA+G,IAA/G,EAAoH,mDAApH,EAAyK5B,SAAzK,CAAmL,UAAAgC,IAAI,EAAG;AACxL,kBAAI,CAACC,KAAL,GAAWD,IAAI,CAAC,CAAD,CAAf;AACA,kBAAI,CAACE,OAAL,GAAc,MAAI,CAACD,KAAL,CAAWE,YAAzB;AACD,WAHD;AAID;;;;;;;uBArBUb,e,EAAe,+H,EAAA,uK,EAAA,mJ;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,gB;AAAA,a;AAAA,81L;AAAA;AAAA;ACf5B;;AACI;;AACI;;AACI;;AACI;;AACI;;AAEI;;AAGI;;AACI;;AAEI;;AACI;;AACI;;AACI;;AAA0B;;AAAgB;;AAC1C;;AACI;;AAA8B;;AAA4C;;AAAc;;AAAS;;AACrG;;AACA;;AACI;;AACI;;AACI;;AACI;;AAA4B;;AAAc;;AAC1C;;AAA4B;;;;AAA+B;;AAC3D;;AAAyB;;AAAE;;AAC/B;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAAM;;AAA8F;;AAAmE;;AAAsB;;AAAc;;AAAO;;AAAI;;AACpL;;AAAmE;;AAAsB;;AAAU;;AAAO;;AAC5I;;AACI;;AACJ;;AACJ;;AACJ;;AAIA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAA8C;;AAAW;;AAC7D;;AACA;;AACI;;AACI;;AAGJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAiI;;AAAc;;AACnJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAIA;;AACI;;AACI;;AACI;;AAA6D;;AAAM;;AACvE;;AACA;;AACI;;AACI;;AACI;;AAAuC;;AAAQ;;AAAO;;AAAM;;AAAN;;AAAmE;;AACjI;;AACA;;AACI;;AACI;;AAAuC;;AAAQ;;AAAO;;AAAM;;AAAN;;AAAmE;;AACjI;;AACA;;AACI;;AACI;;AAAuC;;AAAQ;;AAAO;;AAAM;;AAAN;;AAAmE;;AACjI;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAuC;;AAAQ;;AAAO;;AAAM;;AAAN;;AAAmE;;AACjI;;AACA;;AACI;;AACI;;AAAuC;;AAAQ;;AAAO;;AAAM;;AAAN;;AAAmE;;AACjI;;AACA;;AACI;;AACI;;AAAuC;;AAAQ;;AAAO;;AAAM;;AAAN;;AAAmE;;AACjI;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAA4B;;AAAyC;;AACrE;;AAA4B;;AAA8C;;AAC9E;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAEI;;AAGI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAoC;;AAAmB;;AACvD;;AAAyC;;AAA0B;;AACnE;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAoC;;AAAa;;AACjD;;AAAyC;;AAAyC;;AAClF;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAEI;;AAGI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAoC;;AAAqB;;AACzD;;AAAyC;;AAAgE;;AACzG;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAoC;;AAAW;;AAC/C;;AAAyC;;AAAqC;;AAC9E;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAAM;;AAA8F;;AAAmE;;AAAsB;;AAAc;;AAAO;;AAAI;;AAC9I;;AAAmE;;AAAsB;;AAAU;;AAAO;;AAClL;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AAEJ;;AAGJ;;;;AAvN0E;;AAAA;;AASkB;;AAAA;;AAqCvD;;AAAA;;AAgBL;;AAAA;;;;;;;;;;sED/DnBA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTb,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEf5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaayB,e;AAGX,+BAAsBX,iBAAtB,EAA2Db,MAA3D,EAA6Ff,MAA7F,EAAgH;AAAA;;AAA1F,aAAA4B,iBAAA,GAAAA,iBAAA;AAAuE,aAAA5B,MAAA,GAAAA,MAAA;AAF7F,aAAAwC,aAAA,GAA2B,EAA3B;AAcA,aAAAC,KAAA,GAAM,CAAN;AAZmH;;;;mCAE3G;AACN,eAAKC,YAAL;AACD;;;uCAEW;AAAA;;AACV,eAAKd,iBAAL,CAAuBM,aAAvB,GAAuC/B,SAAvC,CAAiD,UAAAgC,IAAI,EAAE;AACrD,kBAAI,CAACK,aAAL,GAAmBL,IAAnB;AACD,WAFD;AAGD;;;kCAGSQ,Q,EAAQ;AAChBjC,iBAAO,CAACC,GAAR,CAAY,UAAZ;AACA,cAAIiC,WAAJ;;AACA,cAAGD,QAAQ,GAAG,KAAKH,aAAL,CAAmBK,MAAjC,EAAwC;AACtCF,oBAAQ,GAAC,KAAKH,aAAL,CAAmBK,MAA5B;AACD;;AACD,cAAG,KAAKJ,KAAL,IAAY,KAAKD,aAAL,CAAmBK,MAAlC,EAAyC;AACvC,iBAAKJ,KAAL,GAAW,CAAX;AACD;;AACD,iBAAO,KAAKA,KAAL,GAAaE,QAApB,EAA8B,KAAKF,KAAL,EAA9B,EAA4C;AAC1CG,uBAAW,CAACE,IAAZ,CAAiB,KAAKN,aAAL,CAAmB,KAAKC,KAAxB,CAAjB;AAED;;AACD/B,iBAAO,CAACC,GAAR,CAAYiC,WAAZ;AACA,iBAAOA,WAAP;AAED;;;uCAEc;AACb,cAAMtC,SAAS,GAAG,KAAKN,MAAL,CAAYO,IAAZ,CAAiB,8EAAjB,CAAlB;AAEAD,mBAAS,CAACE,WAAV,GAAwBL,SAAxB,CAAkC,UAAAM,MAAM,EAAI;AAC1CC,mBAAO,CAACC,GAAR,0BAA8BF,MAA9B;AACD,WAFD;AAGD;;;;;;;uBAxCU8B,e,EAAe,mJ,EAAA,6I,EAAA,mI;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,gB;AAAA,a;AAAA,k0R;AAAA;AAAA;ACb5B;;AACI;;AACI;;AACI;;AACI;;AACI;;AAEI;;AAGI;;AACI;;AACI;;AACI;;AAAwB;;AAAkE;;AAC9F;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAAM;;AAA8F;;AAAmE;;AAAsB;;AAAc;;AAAO;;AAAI;;AACpL;;AAAmE;;AAAsB;;AAAU;;AAAO;;AAC5I;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAA8E;;AAA4D;;AAAgB;;AAAU;;AAAmD;;AAAkB;;AAAU;;AAAmD;;AAAoB;;AAAS;;AACvU;;AACJ;;AACJ;;AAMA;;AACI;;AACI;;AACI;;AAEI;;AAEI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAwD;;AAA0C;;AAA0B;;AAAO;;AACnI;;AACI;;AACI;;AAEJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAwD;;AAA0C;;AAA0B;;AAAO;;AACnI;;AACI;;AACI;;AAEJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAAM;;AAA8F;;AAAmE;;AAAsB;;AAAc;;AAAO;;AAAI;;AAC9I;;AAAmE;;AAAsB;;AAAU;;AAAO;;AAClL;;AACI;;AACJ;;AACJ;;AACJ;;AAGJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAEI;;AAGI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAA2B;;AAAiB;;AAC5C;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAEI;;AAGI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAAsE;;AAA4B;;AAAiB;;AAC/G;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAAM;;AAA8F;;AAAmE;;AAAsB;;AAAc;;AAAO;;AAAI;;AAC9I;;AAAmE;;AAAsB;;AAAU;;AAAO;;AAClL;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACA;;AAAkC;;AAAsC;;AAAmB;;AAAQ;;AAAkC;;AAA0B;;AAC3J;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAkC;;AAAqC;;AAAa;;AAAQ;;AAAkC;;AAAyC;;AACnK;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAkC;;AAAqC;;AAAqB;;AAAQ;;AAAkC;;AAAgE;;AAClM;;AACI;;AACJ;;AACJ;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAkC;;AAAqC;;AAAW;;AAAQ;;AAAkC;;AAAqC;;AAC7J;;AACI;;AACJ;;AACJ;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAEI;;AAEI;;AACI;;AACI;;AAAgC;;AAAU;;AAAM;;AAA4B;;AAAsN;;AAAO;;AACjT;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAA4C;;AAA4B;;AAC5E;;AACA;;AACI;;AACI;;AACJ;;AACA;;AAA4C;;AAAsC;;AACtF;;AACA;;AACI;;AACI;;AACJ;;AACA;;AAA4C;;AAAiC;;AACjF;;AACA;;AACI;;AACI;;AACJ;;AACA;;AAA4C;;AAAqD;;AACrG;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAyB;;AAAe;;AACxC;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAyB;;AAAQ;;AACjC;;AAAwB;;AAAmE;;AAAoB;;AAAI;;AAAI;;AAC3H;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAyB;;AAAQ;;AACjC;;AAAwB;;AAA2B;;AAAoB;;AAAI;;AAAK;;AAChF;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAyB;;AAAQ;;AACjC;;AAAwB;;AAA6H;;AAAwC;;AAAsB;;AAAI;;AAC3N;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAA+E;;AAAgD;;AAAwB;;AAAkC;;AAAQ;;AACrM;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACI;;AAEI;;AAGI;;AACI;;AACI;;AACI;;AACI;;AAA0B;;AAAW;;AAAM;;AAA0B;;AAA0C;;AAAO;;AAC9H;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAiC;;AAAC;;AAClC;;AAAuB;;AAAgD;;AACvE;;AAAmC;;AAAa;;AACpD;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAEI;;AAGI;;AACI;;AACI;;AACI;;AACI;;AAA0B;;AAAW;;AAAM;;AAA0B;;AAA0C;;AAAO;;AAC9H;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAiC;;AAAC;;AAClC;;AAAuB;;AAAuF;;AAC9G;;AAAmC;;AAAkB;;AACzD;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAAM;;AAA8F;;AAAmE;;AAAsB;;AAAc;;AAAO;;AAAI;;AACpL;;AAAmE;;AAAsB;;AAAU;;AAAO;;AAC5I;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AAGJ;;;;;;;;sED/WaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT3B,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqBgD;;AACI;;AACI;;AAAiB;;AAAiB;;AACtC;;AAEJ;;;;;;AAHyB;;AAAA;;;;;;AAhBrD;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAsB;;AAAgB;;AACtC;;AACI;;AACI;;AAAgH;;AAA4C;;AAAc;;AAAS;;AACvL;;AACJ;;AACA;;AACI;;AAEI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AA3B0C;;AAAA;;AASiB;;AAAA;;;;;;AAyF3D;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAgD;;;;AAAuC;;AACvF;;AAA+C;;AAAiB;;AACpE;;AACJ;;AACJ;;AACA;;AACI;;AAKJ;;AACJ;;;;;;AAhBoB;;AAAA;;AAI4C;;AAAA;;AACD;;AAAA;;;;;;;;;;;;AAmC3D;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAoC;;AAAiF;;AACrH;;AAAyC;;AAAmC;;AAC5E;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAbwF;;AAAA;;AAIhC;;AAAA;;AACK;;AAAA;;AAErC;;AAAA;;;;;;AAZ5B;;;;QD3IPiC,mB;AAEX,mCAAoBrB,KAApB,EACYC,2BADZ,EAES3B,MAFT,EAGY4B,iBAHZ,EAGiD;AAAA;;AAH7B,aAAAF,KAAA,GAAAA,KAAA;AACR,aAAAC,2BAAA,GAAAA,2BAAA;AACH,aAAA3B,MAAA,GAAAA,MAAA;AACG,aAAA4B,iBAAA,GAAAA,iBAAA;AAMZ,aAAAoB,UAAA,GAAiB,EAAjB;AAEA,aAAAC,GAAA,GAAU,CAAC,OAAD,EAAU,SAAV,EAAqB,OAArB,EAA8B,OAA9B,EAAuC,MAAvC,EAA+C,OAA/C,EACV,OADU,EACD,QADC,EACS,YADT,EACuB,SADvB,EACkC,WADlC,EAC+C,WAD/C,CAAV;AAGA,aAAAC,OAAA,GAAY,EAAZ;AACA,aAAAC,KAAA,GAAU,EAAV;AAZoD;;;;mCAc5C;AAAA;;AACN,eAAKzB,KAAL,CAAWG,QAAX,CAAoB1B,SAApB,CAA8B,UAAA2B,MAAM,EAAI;AACtC,kBAAI,CAACC,OAAL,GAAcD,MAAM,CAACE,GAAP,CAAW,SAAX,CAAd;;AACD,kBAAI,CAACC,WAAL;AACA,WAHD;AAID;;;sCAGU;AAAA;;AACT,eAAKL,iBAAL,CAAuBM,aAAvB,CAAqC,QAAM,KAAKH,OAAhD,EAAwD,IAAxD,EAA6D,IAA7D,EAAkE,IAAlE,EAAuE,IAAvE,EAA4E,IAA5E,EAAiF,IAAjF,EAAsF,IAAtF,EAA2F,IAA3F,EAAgG,IAAhG,EAAqG,IAArG,EAA0G,IAA1G,EAA+G,IAA/G,EAAoH,oKAApH,EAA0R5B,SAA1R,CAAoS,UAAAgC,IAAI,EAAG;AACzS,kBAAI,CAACC,KAAL,GAAWD,IAAI,CAAC,CAAD,CAAf;AACA,kBAAI,CAACE,OAAL,GAAc,MAAI,CAACD,KAAL,CAAWE,YAAzB;;AACA,kBAAI,CAACc,gBAAL;;AACA,kBAAI,CAACC,aAAL;AACD,WALD;AAMD;;;2CAEe;AAAA,qDAEgB,KAAKhB,OAFrB;AAAA;;AAAA;AAEZ,gEAA0C;AAAA,kBAA/BiB,aAA+B;AACxC,mBAAKN,UAAL,CAAgBF,IAAhB,CAAqBQ,aAAa,CAACA,aAAnC;AACA5C,qBAAO,CAACC,GAAR,CAAY2C,aAAZ;AACD;AALW;AAAA;AAAA;AAAA;AAAA;AAOf;;;wCAEY;AACX,eAAK,IAAIb,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKL,KAAL,CAAWmB,gBAAX,CAA4BV,MAApC,IAA8CJ,KAAK,GAAC,CAAxE,EAA2EA,KAAK,EAAhF,EAAoF;AAClF,gBAAG,KAAKL,KAAL,CAAWmB,gBAAX,CAA4Bd,KAA5B,EAAmCe,UAAnC,IAA+C,GAAlD,EAAsD;AACpD,mBAAKN,OAAL,CAAaJ,IAAb,CAAkB,KAAKV,KAAL,CAAWmB,gBAAX,CAA4Bd,KAA5B,CAAlB;AACD,aAFD,MAEK;AACH,mBAAKU,KAAL,CAAWL,IAAX,CAAgB,KAAKV,KAAL,CAAWmB,gBAAX,CAA4Bd,KAA5B,CAAhB;AAED;AAGF;AACF;;;sCAEU;AACT,cAAIgB,KAAK,GAAG,IAAIC,IAAJ,CAAS,KAAKtB,KAAL,CAAWuB,gBAApB,CAAZ;AACA,iBAAO,KAAKV,GAAL,CAASQ,KAAK,CAACG,QAAN,EAAT,CAAP;AACD;;;uCAIc;AACb,cAAMtD,SAAS,GAAG,KAAKN,MAAL,CAAYO,IAAZ,CAAiB,8EAAjB,CAAlB;AAEAD,mBAAS,CAACE,WAAV,GAAwBL,SAAxB,CAAkC,UAAAM,MAAM,EAAI;AAC1CC,mBAAO,CAACC,GAAR,0BAA8BF,MAA9B;AACD,WAFD;AAGD;;;;;;;uBAvEUsC,mB,EAAmB,+H,EAAA,uK,EAAA,mI,EAAA,mJ;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,gB;AAAA,a;AAAA,srK;AAAA;AAAA;ACrBhC;;AACI;;AAII;;AACI;;AAEI;;AAoCJ;;AAEJ;;AAIA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAA2B;;AAAW;;AAC1C;;AACJ;;AACA;;AACI;;AACJ;;AAEJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAA4B;;AAAwC;;AACxE;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAA2B;;AAAoB;;AAC/C;;AAA4B;;AAAoB;;AACpD;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAA4B;;AAAkB;;AAC9C;;AAA4B;;AAAmB;;AAC/C;;AAA4B;;AAAoB;;AACpD;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAEJ;;AACJ;;AAGJ;;AAIA;;AACI;;AAEI;;AA2BJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAA4B;;AAAyC;;AACrE;;AAA4B;;AAA8C;;AAC9E;;AACJ;;AACJ;;AACA;;AAII;;AACI;;AAoBJ;;AACJ;;AACJ;;AAQA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAA0B;;AACjE;;AACI;;AACI;;AACI;;AACA;;AACI;;AAA0C;;AAAM;;AACpD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AAAyC;;AAAQ;;AACrD;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AACI;;AAAyC;;AAAO;;AACpD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AAAyC;;AAAM;;AACnD;;AACJ;;AACJ;;AACJ;;AACA;;AAEI;;AACI;;AACI;;AACI;;AAA0B;;AAA0B;;AACpD;;AAAkB;;AAAQ;;AAC1B;;AAAkB;;AAAK;;AACvB;;AAAkB;;AAAK;;AAC3B;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACmB;;AAAsB;;AAC7C;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAiF;;AAAM;;AAC3F;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAEJ;;AACJ;;AACJ;;AAEJ;;AAhRJ;;;;AAMmK;;AAAA,kGAA4B,0BAA5B,EAA4B,KAA5B;;AAwD/H;;AAAA;;AAgDwL;;AAAA,kGAA8B,0BAA9B,EAA8B,KAA9B;;AAkDlL;;AAAA;;;;;;;;;;sED3I7BA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTnC,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwFgC;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA0C;;AAAoB;;AAClE;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAZ0D;;AAAA;;AAItC;;AAAA;;AAED;;AAAA;;;;;;AAnB/B;;AACI;;AACI;;AAEI;;AAsBJ;;AACJ;;AACJ;;;;;;AAxBiB;;AAAA;;;;QD5ExB+C,a;AAEX,6BAAsBjC,iBAAtB,EAA2Db,MAA3D,EAAsF;AAAA;;AAAhE,aAAAa,iBAAA,GAAAA,iBAAA;AAqBtB,aAAAa,KAAA,GAAM,CAAN,CArBsF,CACpF;;AACA1B,cAAM,CAAC+C,QAAP,GAAkB,KAAlB;AACA/C,cAAM,CAACgD,IAAP,GAAc,KAAd;AACAhD,cAAM,CAACiD,QAAP,GAAkB,KAAlB;AACAjD,cAAM,CAACkD,YAAP,GAAsB,KAAtB;AACD;;;;mCAKO;AACN,eAAKvB,YAAL;AACD;;;uCAEW;AAAA;;AACV,eAAKd,iBAAL,CAAuBM,aAAvB,GAAuC/B,SAAvC,CAAiD,UAAAgC,IAAI,EAAE;AACrD,kBAAI,CAACK,aAAL,GAAmBL,IAAnB;AACD,WAFD;AAGD;;;kCAGSQ,Q,EAAQ;AAChBjC,iBAAO,CAACC,GAAR,CAAY,UAAZ;AACA,cAAIiC,WAAJ;;AACA,cAAGD,QAAQ,GAAG,KAAKH,aAAL,CAAmBK,MAAjC,EAAwC;AACtCF,oBAAQ,GAAC,KAAKH,aAAL,CAAmBK,MAA5B;AACD;;AACD,cAAG,KAAKJ,KAAL,IAAY,KAAKD,aAAL,CAAmBK,MAAlC,EAAyC;AACvC,iBAAKJ,KAAL,GAAW,CAAX;AACD;;AACD,iBAAO,KAAKA,KAAL,GAAaE,QAApB,EAA8B,KAAKF,KAAL,EAA9B,EAA4C;AAC1CG,uBAAW,CAACE,IAAZ,CAAiB,KAAKN,aAAL,CAAmB,KAAKC,KAAxB,CAAjB;AAED;;AACD/B,iBAAO,CAACC,GAAR,CAAYiC,WAAZ;AACA,iBAAOA,WAAP;AAED;;;;;;;uBAxCUiB,a,EAAa,mJ,EAAA,6I;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,gB;AAAA,a;AAAA,4tV;AAAA;AAAA;ACZ1B;;AACI;;AACI;;AACI;;AACI;;AAEI;;AAGI;;AACI;;AACI;;AACI;;AAAyB;;AAAsG;;AACnI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAEI;;AAGI;;AACI;;AACI;;AACI;;AAAyB;;AAAsG;;AACnI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAEI;;AAGI;;AACI;;AACI;;AACI;;AAAyB;;AAA2H;;AACxJ;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAAM;;AAA8F;;AAAmE;;AAAsB;;AAAc;;AAAO;;AAAI;;AACpL;;AAAmE;;AAAsB;;AAAU;;AAAO;;AAC5I;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AAAgF;;AAAkB;;AAClG;;AAAqF;;AAAoB;;AAC7G;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAA+C;;AAAa;;AAChE;;AACJ;;AACJ;;AACJ;;AAIA;;AACI;;AACI;;AA+BJ;;AACJ;;AA2EJ;;AACA;;AACI;;AACI;;AACI;;AAAgL;;AAC5K;;AAGI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAmC;;AAAqB;;AAAK;;AAA6C;;AACxH;;AACJ;;AACkB;;AAAwB;;AAAgC;;AACxD;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAO;;AACf;;AACJ;;AACJ;;AACA;;AAA+B;;AAAO;;AACtC;;AACI;;AAA6B;;AAAc;;AAC3C;;AAA4B;;AAAc;;AAC1C;;AAA4B;;AAAY;;AACxC;;AAA4B;;AAAY;;AACxC;;AAA4B;;AAAU;;AAC1C;;AAEJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAA0B;;AAAmB;;AAAM;;AAAsC;;AAAoD;;AAAO;;AAC5J;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAAM;;AAA8F;;AAAmE;;AAAsB;;AAAc;;AAAO;;AAAI;;AACpL;;AAAmE;;AAAsB;;AAAU;;AAAO;;AAC5I;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACI;;AACI;;AAA2B;;AAAU;;AAAO;;AAA4B;;AAAsN;;AAAO;;AAC7S;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAA4C;;AAA4B;;AAC5E;;AACA;;AACI;;AACI;;AACJ;;AACA;;AAA4C;;AAAsC;;AACtF;;AACA;;AACI;;AACI;;AACJ;;AACA;;AAA4C;;AAAiC;;AACjF;;AACA;;AACI;;AACI;;AACJ;;AACA;;AAA4C;;AAAqD;;AACrG;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACI;;AAEI;;AAGI;;AACI;;AACI;;AACI;;AACI;;AAA0B;;AAAW;;AAAM;;AAA0B;;AAA0C;;AAAO;;AAC9H;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAiC;;AAAC;;AAClC;;AAAuB;;AAAgD;;AACvE;;AAAmC;;AAAa;;AACpD;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAEI;;AAGI;;AACI;;AACI;;AACI;;AACI;;AAA0B;;AAAW;;AAAM;;AAA0B;;AAA0C;;AAAO;;AAC9H;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAiC;;AAAC;;AAClC;;AAAuB;;AAAuF;;AAC9G;;AAAmC;;AAAkB;;AACzD;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAAM;;AAA8F;;AAAmE;;AAAsB;;AAAc;;AAAO;;AAAI;;AACpL;;AAAmE;;AAAsB;;AAAU;;AAAO;;AAC5I;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAsC;;AAAO;;AACjD;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAgN;;AAC5M;;AAGI;;AACI;;AACI;;AACI;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AAIJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAAM;;AAA8F;;AAAmE;;AAAsB;;AAAc;;AAAO;;AAAI;;AAC9I;;AAAmE;;AAAsB;;AAAU;;AAAO;;AAClL;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAsC;;AAAI;;AAC9C;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAyM;;AACrM;;AAGI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAqD;;AAAW;;AACpE;;AACJ;;AACA;;AACI;;AACI;;AAAwG;;AAChH;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAqD;;AAAW;;AACpE;;AACJ;;AACA;;AACI;;AACI;;AAAwG;;AAChH;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAqD;;AAAW;;AACpE;;AACJ;;AACA;;AACI;;AACI;;AAAwG;;AAChH;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAAgN;;AAC5M;;AAGI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAqD;;AAAW;;AACpE;;AACJ;;AACA;;AACI;;AACI;;AAAwG;;AAChH;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAqD;;AAAW;;AACpE;;AACJ;;AACA;;AACI;;AACI;;AAAwG;;AAChH;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAqD;;AAAY;;AACrE;;AACJ;;AACA;;AACI;;AACI;;AAAwG;;AAChH;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAAM;;AAA8F;;AAAmE;;AAAsB;;AAAc;;AAAO;;AAAI;;AAC9I;;AAAmE;;AAAsB;;AAAU;;AAAO;;AAClL;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;;sEDtfaA,a,EAAa;cALzB,uDAKyB;eALf;AACTjD,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACI;;AACI;;AACI;;AACI;;AAAK;;AAAL;;AACA;;AACI;;AAAI;;AAAa;;AACrB;;AACA;;AAA8B;;AAA2D;;AAC7F;;AAEJ;;AACJ;;AAGA;;AAEI;;AAEI;;AACI;;AACI;;AAAK;;AAAqD;;AAAU;;AAAO;;AAC3E;;AACI;;AACI;;AAAW;;AAAO;;AAClB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;AAAU;;AACrB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;AAAkB;;AAC7B;;AACJ;;AACJ;;AACA;;AACI;;AAAG;AAAA;;AAAA;;AAAA,gCAAiB,CAAjB;AAAkB,SAAlB;;AAAuD;;AAAS;;AACvE;;AACJ;;AAEA;;AACI;;AAAI;;AAAqD;;AAAc;;AAAO;;AAE9E;;AACI;;AACI;;AACI;;AACI;;AAAW;;AAAO;;AAClB;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAAW;;AAAU;;AACrB;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAuD;;AAAM;;AACjE;;AACA;;AACI;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAA0G;;AAAK;;AACtH;;AACJ;;AAEJ;;AAKJ;;AACJ;;AAEJ;;AACJ;;AACJ;;;;;;AAMA;;AACI;;AACI;;AACI;;AACI;;AAAK;;AAAL;;AACA;;AACI;;AAAI;;AAAiC;;AACzC;;AACA;;AAA8B;;AAA2D;;AAC7F;;AAEJ;;AACJ;;AAEA;;AACI;;AACI;;AAAI;;AAAqD;;AAAmB;;AAAO;;AACnF;;AACI;;AACI;;AACI;;AAAW;;AAAS;;AACpB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;AAAoB;;AAC/B;;AACI;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACxC;;AACJ;;AAEJ;;AACA;;AACI;;AACI;;AAAW;;AAAS;;AACpB;;AACJ;;AACJ;;AACJ;;AAEA;;AAAI;;AAAqD;;AAAS;;AAAO;;AACzE;;AACI;;AACI;;AACI;;AAAW;;AAAM;;AACjB;;AACI;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAS;;AACrC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAS;;AACzC;;AACJ;;AAEJ;;AAEA;;AACI;;AACI;;AAAW;;AAAW;;AACtB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAW;;AAAuB;;AAClC;;AACI;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAS;;AACrC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAS;;AACzC;;AACJ;;AAEJ;;AACJ;;AAEA;;AAAI;;AAAqD;;AAAuB;;AAAO;;AACvF;;AACI;;AACI;;AACI;;AAAW;;AAAS;;AACpB;;AACI;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAS;;AACrC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAS;;AACzC;;AACJ;;AAEJ;;AAEA;;AACI;;AACI;;AAAW;;AAAS;;AACpB;;AACJ;;AACJ;;AACA;;AACI;;AAA2C;;AAAO;;AAClD;;AAAuE;;AAAS;;AACpF;;AACJ;;AAEJ;;AACJ;;AAEJ;;;;;;AAvGwB;;AAAA;;;;QDpFXoD,iB;AAEX,iCAAoBnE,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AACpB,aAAAoE,QAAA,GAAS,CAAT;AADiD;;;;mCAEzC,CAEP;;;2CAKe;AACd,eAAKpE,WAAL,CAAiBqE,MAAjB,CAAwB,0EAAoBpD,WAA5C;AACA,eAAKqD,OAAL,CAAa,CAAb;AACD;;;gCAIOC,K,EAAK;AAAA;;AACX,eAAKH,QAAL,GAAcG,KAAd;AACA,eAAKvE,WAAL,CAAiBG,SAAjB,CAA2BC,SAA3B,CAAqC,UAACC,IAAD,EAAU;AAC7C,kBAAI,CAACA,IAAL,GAAYA,IAAZ;AACA,kBAAI,CAACC,QAAL,GAAiBD,IAAI,IAAI,IAAzB;AACD,WAHD;AAID;;;;;;;uBAxBU8D,iB,EAAiB,kI;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,i3C;AAAA;AAAA;ACX9B;;AAyFA;;;;AAzFK;;AAyFA;;AAAA;;;;;;;;;sED9EQA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTtD,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMyD,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIhE,OAAO,CAACiE,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ;;;;;;;;;;;;;;;;;ACVA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaE,kB;AAMT,kCAAsBC,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,sDAEfD,QAFe;AAAA;;AAAA;AAErC,mEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;0CAmBwBC,G,EAAcC,Q,EAAmBC,K,EAAgBC,O,EAAkBC,Q,EAAmBC,a,EAAwBC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAS9P,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIV,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIC,QAAQ,KAAKU,SAAb,IAA0BV,QAAQ,KAAK,IAA3C,EAAiD;AAC7CQ,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCX,QAArC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKS,SAAV,IAAuBT,KAAK,KAAK,IAArC,EAA2C;AACvCO,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCV,KAAlC,CAAlB;AACH;;AACD,cAAIC,OAAO,KAAKQ,SAAZ,IAAyBR,OAAO,KAAK,IAAzC,EAA+C;AAC3CM,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCT,OAApC,CAAlB;AACH;;AACD,cAAIC,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAhC6P,CAkC9P;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA3C6P,CA6C9P;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,oBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;uCAwBqBR,G,EAAcC,Q,EAAmBC,K,EAAgBC,O,EAAkBC,Q,EAAmBC,a,EAAwBc,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAenT,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIV,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIC,QAAQ,KAAKU,SAAb,IAA0BV,QAAQ,KAAK,IAA3C,EAAiD;AAC7CQ,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCX,QAArC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKS,SAAV,IAAuBT,KAAK,KAAK,IAArC,EAA2C;AACvCO,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCV,KAAlC,CAAlB;AACH;;AACD,cAAIC,OAAO,KAAKQ,SAAZ,IAAyBR,OAAO,KAAK,IAAzC,EAA+C;AAC3CM,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCT,OAApC,CAAlB;AACH;;AACD,cAAIC,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIc,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAxDkT,CA0DnT;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAnEkT,CAqEnT;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA2C,KAAK8C,QAAhD,oBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;yCAmBuBR,G,EAAcC,Q,EAAmBC,K,EAAgBC,O,EAAkBC,Q,EAAmBC,a,EAAwBoB,W,EAA2BnB,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAUxR,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIV,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIC,QAAQ,KAAKU,SAAb,IAA0BV,QAAQ,KAAK,IAA3C,EAAiD;AAC7CQ,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCX,QAArC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKS,SAAV,IAAuBT,KAAK,KAAK,IAArC,EAA2C;AACvCO,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCV,KAAlC,CAAlB;AACH;;AACD,cAAIC,OAAO,KAAKQ,SAAZ,IAAyBR,OAAO,KAAK,IAAzC,EAA+C;AAC3CM,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCT,OAApC,CAAlB;AACH;;AACD,cAAIC,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAjCuR,CAmCxR;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA5CuR,CA8CxR;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,oBACH+B,WADG,EAEH;AACI/E,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;wCAcsBiB,W,EAA2BN,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAK1L,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAbyL,CAe1L;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxByL,CA0B1L;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,oBACH+B,WADG,EAEH;AACI/E,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA5WQhB,kB,EAAkB,uH,EAAA,uDAMsC,oDANtC,EAM+C,CAN/C,C,EAM+C,uH;AAAA,K;;;aANjEA,kB;AAAkB,eAAlBA,kBAAkB;;;;;sEAAlBA,kB,EAAkB;cAD9B;AAC8B,Q;;;;;;kBAMoB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBasC,oB;AAMT,oCAAsBrC,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,sDAEfD,QAFe;AAAA;;AAAA;AAErC,mEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;4CAmB0BgC,U,EAAqBC,M,EAAiBC,M,EAAiBC,M,EAAiBC,G,EAAc9B,a,EAAwBC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAShQ,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIqB,UAAU,KAAKpB,SAAf,IAA4BoB,UAAU,KAAK,IAA/C,EAAqD;AACjDtB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,YAApB,EAAuCmB,UAAvC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKtB,SAAX,IAAwBsB,MAAM,KAAK,IAAvC,EAA6C;AACzCxB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCqB,MAAnC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKvB,SAAX,IAAwBuB,MAAM,KAAK,IAAvC,EAA6C;AACzCzB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCsB,MAAnC,CAAlB;AACH;;AACD,cAAIC,GAAG,KAAKxB,SAAR,IAAqBwB,GAAG,KAAK,IAAjC,EAAuC;AACnC1B,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCuB,GAAhC,CAAlB;AACH;;AACD,cAAI9B,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAhC+P,CAkChQ;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA3C+P,CA6ChQ;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,sBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;yCAwBuBuB,U,EAAqBC,M,EAAiBC,M,EAAiBC,M,EAAiBC,G,EAAc9B,a,EAAwBc,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAerT,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIqB,UAAU,KAAKpB,SAAf,IAA4BoB,UAAU,KAAK,IAA/C,EAAqD;AACjDtB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,YAApB,EAAuCmB,UAAvC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKtB,SAAX,IAAwBsB,MAAM,KAAK,IAAvC,EAA6C;AACzCxB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCqB,MAAnC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKvB,SAAX,IAAwBuB,MAAM,KAAK,IAAvC,EAA6C;AACzCzB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCsB,MAAnC,CAAlB;AACH;;AACD,cAAIC,GAAG,KAAKxB,SAAR,IAAqBwB,GAAG,KAAK,IAAjC,EAAuC;AACnC1B,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCuB,GAAhC,CAAlB;AACH;;AACD,cAAI9B,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIc,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAxDoT,CA0DrT;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAnEoT,CAqErT;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA6C,KAAK8C,QAAlD,sBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;2CAmByBuB,U,EAAqBC,M,EAAiBC,M,EAAiBC,M,EAAiBC,G,EAAc9B,a,EAAwB+B,a,EAA+B9B,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAU9R,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIqB,UAAU,KAAKpB,SAAf,IAA4BoB,UAAU,KAAK,IAA/C,EAAqD;AACjDtB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,YAApB,EAAuCmB,UAAvC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKtB,SAAX,IAAwBsB,MAAM,KAAK,IAAvC,EAA6C;AACzCxB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCqB,MAAnC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKvB,SAAX,IAAwBuB,MAAM,KAAK,IAAvC,EAA6C;AACzCzB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCsB,MAAnC,CAAlB;AACH;;AACD,cAAIC,GAAG,KAAKxB,SAAR,IAAqBwB,GAAG,KAAK,IAAjC,EAAuC;AACnC1B,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCuB,GAAhC,CAAlB;AACH;;AACD,cAAI9B,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAjC6R,CAmC9R;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA5C6R,CA8C9R;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,sBACH0C,aADG,EAEH;AACI1F,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;0CAcwB4B,a,EAA+BjB,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAKhM,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAb+L,CAehM;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxB+L,CA0BhM;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,sBACH0C,aADG,EAEH;AACI1F,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA5WQsB,oB,EAAoB,uH,EAAA,uDAMoC,oDANpC,EAM6C,CAN7C,C,EAM6C,uH;AAAA,K;;;aANjEA,oB;AAAoB,eAApBA,oBAAoB;;;;;sEAApBA,oB,EAAoB;cADhC;AACgC,Q;;;;;;kBAMkB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaO,iB;AAMT,iCAAsB5C,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,sDAEfD,QAFe;AAAA;;AAAA;AAErC,mEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;yCAgBuBuC,O,EAAkBN,M,EAAiB3B,a,EAAwBC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAM1M,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI4B,OAAO,KAAK3B,SAAZ,IAAyB2B,OAAO,KAAK,IAAzC,EAA+C;AAC3C7B,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoC0B,OAApC,CAAlB;AACH;;AACD,cAAIN,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAI3B,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WApByM,CAsB1M;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA/ByM,CAiC1M;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,mBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;sCAqBoB8B,O,EAAkBN,M,EAAiB3B,a,EAAwBc,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAY/P,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI4B,OAAO,KAAK3B,SAAZ,IAAyB2B,OAAO,KAAK,IAAzC,EAA+C;AAC3C7B,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoC0B,OAApC,CAAlB;AACH;;AACD,cAAIN,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAI3B,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIc,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WA5C8P,CA8C/P;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAvD8P,CAyD/P;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA0C,KAAK8C,QAA/C,mBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;wCAgBsB8B,O,EAAkBN,M,EAAiB3B,a,EAAwBkC,U,EAAyBjC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAOlO,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI4B,OAAO,KAAK3B,SAAZ,IAAyB2B,OAAO,KAAK,IAAzC,EAA+C;AAC3C7B,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoC0B,OAApC,CAAlB;AACH;;AACD,cAAIN,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAI3B,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WArBiO,CAuBlO;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAhCiO,CAkClO;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,mBACH6C,UADG,EAEH;AACI7F,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;uCAcqB+B,U,EAAyBpB,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAKvL,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAbsL,CAevL;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxBsL,CA0BvL;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,mBACH6C,UADG,EAEH;AACI7F,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA/TQ6B,iB,EAAiB,uH,EAAA,uDAMuC,oDANvC,EAMgD,CANhD,C,EAMgD,uH;AAAA,K;;;aANjEA,iB;AAAiB,eAAjBA,iBAAiB;;;;;sEAAjBA,iB,EAAiB;cAD7B;AAC6B,Q;;;;;;kBAMqB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaG,qB;AAMT,qCAAsB/C,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,sDAEfD,QAFe;AAAA;;AAAA;AAErC,mEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;6CAgB2B0C,W,EAAsBT,M,EAAiB5B,Q,EAAmBE,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAM7M,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI+B,WAAW,KAAK9B,SAAhB,IAA6B8B,WAAW,KAAK,IAAjD,EAAuD;AACnDhC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwC6B,WAAxC,CAAlB;AACH;;AACD,cAAIT,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAI5B,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AAED,cAAIS,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WApB4M,CAsB7M;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA/B4M,CAiC7M;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,uBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;0CAqBwBiC,W,EAAsBT,M,EAAiB5B,Q,EAAmBe,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAYlQ,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI+B,WAAW,KAAK9B,SAAhB,IAA6B8B,WAAW,KAAK,IAAjD,EAAuD;AACnDhC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwC6B,WAAxC,CAAlB;AACH;;AACD,cAAIT,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAI5B,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIe,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WA5CiQ,CA8ClQ;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAvDiQ,CAyDlQ;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA8C,KAAK8C,QAAnD,uBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;4CAgB0BiC,W,EAAsBT,M,EAAiB5B,Q,EAAmBsC,c,EAAiCpC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAO7O,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI+B,WAAW,KAAK9B,SAAhB,IAA6B8B,WAAW,KAAK,IAAjD,EAAuD;AACnDhC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwC6B,WAAxC,CAAlB;AACH;;AACD,cAAIT,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAI5B,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AAED,cAAIS,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WArB4O,CAuB7O;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAhC4O,CAkC7O;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,uBACHgD,cADG,EAEH;AACIhG,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;2CAcyBkC,c,EAAiCvB,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAKnM,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAbkM,CAenM;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxBkM,CA0BnM;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,uBACHgD,cADG,EAEH;AACIhG,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA/TQgC,qB,EAAqB,uH,EAAA,uDAMmC,oDANnC,EAM4C,CAN5C,C,EAM4C,uH;AAAA,K;;;aANjEA,qB;AAAqB,eAArBA,qBAAqB;;;;;sEAArBA,qB,EAAqB;cADjC;AACiC,Q;;;;;;kBAMiB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaG,iB;AAMT,iCAAsBlD,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,sDAEfD,QAFe;AAAA;;AAAA;AAErC,mEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;yCA0BuBpD,O,EAAkBqF,M,EAAiBY,W,EAAsBC,Y,EAAuBC,M,EAAiBC,K,EAAgBC,M,EAAiBC,W,EAAsBC,e,EAA0BC,Y,EAAuBC,K,EAAgB/C,a,EAAwBoC,W,EAAsBnC,M,EAA2H;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAgBtZ,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI/D,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAIqF,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAIY,WAAW,KAAKjC,SAAhB,IAA6BiC,WAAW,KAAK,IAAjD,EAAuD;AACnDnC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCgC,WAAxC,CAAlB;AACH;;AACD,cAAIC,YAAY,KAAKlC,SAAjB,IAA8BkC,YAAY,KAAK,IAAnD,EAAyD;AACrDpC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,cAApB,EAAyCiC,YAAzC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKnC,SAAX,IAAwBmC,MAAM,KAAK,IAAvC,EAA6C;AACzCrC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCkC,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKpC,SAAV,IAAuBoC,KAAK,KAAK,IAArC,EAA2C;AACvCtC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCmC,KAAlC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKrC,SAAX,IAAwBqC,MAAM,KAAK,IAAvC,EAA6C;AACzCvC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoC,MAAnC,CAAlB;AACH;;AACD,cAAIC,WAAW,KAAKtC,SAAhB,IAA6BsC,WAAW,KAAK,IAAjD,EAAuD;AACnDxC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCqC,WAAxC,CAAlB;AACH;;AACD,cAAIC,eAAe,KAAKvC,SAApB,IAAiCuC,eAAe,KAAK,IAAzD,EAA+D;AAC3DzC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,kBAApB,EAA6CsC,eAA7C,CAAlB;AACH;;AACD,cAAIC,YAAY,KAAKxC,SAAjB,IAA8BwC,YAAY,KAAK,IAAnD,EAAyD;AACrD1C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CuC,YAA1C,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKzC,SAAV,IAAuByC,KAAK,KAAK,IAArC,EAA2C;AACvC3C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCwC,KAAlC,CAAlB;AACH;;AACD,cAAI/C,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIoC,WAAW,KAAK9B,SAAhB,IAA6B8B,WAAW,KAAK,IAAjD,EAAuD;AACnDhC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwC6B,WAAxC,CAAlB;AACH;;AAED,cAAI5B,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WA5DqZ,CA8DtZ;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAvEqZ,CAyEtZ;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,mBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;sCA+BoB7D,O,EAAkBqF,M,EAAiBY,W,EAAsBC,Y,EAAuBC,M,EAAiBC,K,EAAgBC,M,EAAiBC,W,EAAsBC,e,EAA0BC,Y,EAAuBC,K,EAAgB/C,a,EAAwBoC,W,EAAsBtB,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAsB3c,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI/D,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAIqF,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAIY,WAAW,KAAKjC,SAAhB,IAA6BiC,WAAW,KAAK,IAAjD,EAAuD;AACnDnC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCgC,WAAxC,CAAlB;AACH;;AACD,cAAIC,YAAY,KAAKlC,SAAjB,IAA8BkC,YAAY,KAAK,IAAnD,EAAyD;AACrDpC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,cAApB,EAAyCiC,YAAzC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKnC,SAAX,IAAwBmC,MAAM,KAAK,IAAvC,EAA6C;AACzCrC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCkC,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKpC,SAAV,IAAuBoC,KAAK,KAAK,IAArC,EAA2C;AACvCtC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCmC,KAAlC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKrC,SAAX,IAAwBqC,MAAM,KAAK,IAAvC,EAA6C;AACzCvC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoC,MAAnC,CAAlB;AACH;;AACD,cAAIC,WAAW,KAAKtC,SAAhB,IAA6BsC,WAAW,KAAK,IAAjD,EAAuD;AACnDxC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCqC,WAAxC,CAAlB;AACH;;AACD,cAAIC,eAAe,KAAKvC,SAApB,IAAiCuC,eAAe,KAAK,IAAzD,EAA+D;AAC3DzC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,kBAApB,EAA6CsC,eAA7C,CAAlB;AACH;;AACD,cAAIC,YAAY,KAAKxC,SAAjB,IAA8BwC,YAAY,KAAK,IAAnD,EAAyD;AACrD1C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CuC,YAA1C,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKzC,SAAV,IAAuByC,KAAK,KAAK,IAArC,EAA2C;AACvC3C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCwC,KAAlC,CAAlB;AACH;;AACD,cAAI/C,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIoC,WAAW,KAAK9B,SAAhB,IAA6B8B,WAAW,KAAK,IAAjD,EAAuD;AACnDhC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwC6B,WAAxC,CAAlB;AACH;;AACD,cAAItB,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WApF0c,CAsF3c;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA/F0c,CAiG3c;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA0C,KAAK8C,QAA/C,mBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;wCA0BsB7D,O,EAAkBqF,M,EAAiBY,W,EAAsBC,Y,EAAuBC,M,EAAiBC,K,EAAgBC,M,EAAiBC,W,EAAsBC,e,EAA0BC,Y,EAAuBC,K,EAAgB/C,a,EAAwBoC,W,EAAsBY,U,EAAyB/C,M,EAA2H;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAiB9a,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI/D,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAIqF,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAIY,WAAW,KAAKjC,SAAhB,IAA6BiC,WAAW,KAAK,IAAjD,EAAuD;AACnDnC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCgC,WAAxC,CAAlB;AACH;;AACD,cAAIC,YAAY,KAAKlC,SAAjB,IAA8BkC,YAAY,KAAK,IAAnD,EAAyD;AACrDpC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,cAApB,EAAyCiC,YAAzC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKnC,SAAX,IAAwBmC,MAAM,KAAK,IAAvC,EAA6C;AACzCrC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCkC,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKpC,SAAV,IAAuBoC,KAAK,KAAK,IAArC,EAA2C;AACvCtC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCmC,KAAlC,CAAlB;AACH;;AACD,cAAIC,MAAM,KAAKrC,SAAX,IAAwBqC,MAAM,KAAK,IAAvC,EAA6C;AACzCvC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoC,MAAnC,CAAlB;AACH;;AACD,cAAIC,WAAW,KAAKtC,SAAhB,IAA6BsC,WAAW,KAAK,IAAjD,EAAuD;AACnDxC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCqC,WAAxC,CAAlB;AACH;;AACD,cAAIC,eAAe,KAAKvC,SAApB,IAAiCuC,eAAe,KAAK,IAAzD,EAA+D;AAC3DzC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,kBAApB,EAA6CsC,eAA7C,CAAlB;AACH;;AACD,cAAIC,YAAY,KAAKxC,SAAjB,IAA8BwC,YAAY,KAAK,IAAnD,EAAyD;AACrD1C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CuC,YAA1C,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKzC,SAAV,IAAuByC,KAAK,KAAK,IAArC,EAA2C;AACvC3C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCwC,KAAlC,CAAlB;AACH;;AACD,cAAI/C,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIoC,WAAW,KAAK9B,SAAhB,IAA6B8B,WAAW,KAAK,IAAjD,EAAuD;AACnDhC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwC6B,WAAxC,CAAlB;AACH;;AAED,cAAI5B,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WA7D6a,CA+D9a;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxE6a,CA0E9a;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,mBACH2D,UADG,EAEH;AACI3G,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;uCAcqB6C,U,EAAyBlC,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAKvL,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAbsL,CAevL;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxBsL,CA0BvL;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,mBACH2D,UADG,EAEH;AACI3G,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBArdQmC,iB,EAAiB,uH,EAAA,uDAMuC,oDANvC,EAMgD,CANhD,C,EAMgD,uH;AAAA,K;;;aANjEA,iB;AAAiB,eAAjBA,iBAAiB;;;;;sEAAjBA,iB,EAAiB;cAD7B;AAC6B,Q;;;;;;kBAMqB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaW,mB;AAMT,mCAAsB7D,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,sDAEfD,QAFe;AAAA;;AAAA;AAErC,mEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;2CAmByBC,G,EAAcuD,iB,EAA4BX,W,EAAsB1C,K,EAAgBE,Q,EAAmBC,a,EAAwBC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAS5Q,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIV,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIuD,iBAAiB,KAAK5C,SAAtB,IAAmC4C,iBAAiB,KAAK,IAA7D,EAAmE;AAC/D9C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,oBAApB,EAA+C2C,iBAA/C,CAAlB;AACH;;AACD,cAAIX,WAAW,KAAKjC,SAAhB,IAA6BiC,WAAW,KAAK,IAAjD,EAAuD;AACnDnC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCgC,WAAxC,CAAlB;AACH;;AACD,cAAI1C,KAAK,KAAKS,SAAV,IAAuBT,KAAK,KAAK,IAArC,EAA2C;AACvCO,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCV,KAAlC,CAAlB;AACH;;AACD,cAAIE,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAhC2Q,CAkC5Q;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA3C2Q,CA6C5Q;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,qBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;wCAwBsBR,G,EAAcuD,iB,EAA4BX,W,EAAsB1C,K,EAAgBE,Q,EAAmBC,a,EAAwBc,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAejU,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIV,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIuD,iBAAiB,KAAK5C,SAAtB,IAAmC4C,iBAAiB,KAAK,IAA7D,EAAmE;AAC/D9C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,oBAApB,EAA+C2C,iBAA/C,CAAlB;AACH;;AACD,cAAIX,WAAW,KAAKjC,SAAhB,IAA6BiC,WAAW,KAAK,IAAjD,EAAuD;AACnDnC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCgC,WAAxC,CAAlB;AACH;;AACD,cAAI1C,KAAK,KAAKS,SAAV,IAAuBT,KAAK,KAAK,IAArC,EAA2C;AACvCO,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCV,KAAlC,CAAlB;AACH;;AACD,cAAIE,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIc,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAxDgU,CA0DjU;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAnEgU,CAqEjU;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA4C,KAAK8C,QAAjD,qBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;0CAmBwBR,G,EAAcuD,iB,EAA4BX,W,EAAsB1C,K,EAAgBE,Q,EAAmBC,a,EAAwBmD,Y,EAA6BlD,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAUxS,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIV,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIuD,iBAAiB,KAAK5C,SAAtB,IAAmC4C,iBAAiB,KAAK,IAA7D,EAAmE;AAC/D9C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,oBAApB,EAA+C2C,iBAA/C,CAAlB;AACH;;AACD,cAAIX,WAAW,KAAKjC,SAAhB,IAA6BiC,WAAW,KAAK,IAAjD,EAAuD;AACnDnC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCgC,WAAxC,CAAlB;AACH;;AACD,cAAI1C,KAAK,KAAKS,SAAV,IAAuBT,KAAK,KAAK,IAArC,EAA2C;AACvCO,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCV,KAAlC,CAAlB;AACH;;AACD,cAAIE,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAjCuS,CAmCxS;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA5CuS,CA8CxS;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,qBACH8D,YADG,EAEH;AACI9G,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;yCAcuBgD,Y,EAA6BrC,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAK7L,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAb4L,CAe7L;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxB4L,CA0B7L;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,qBACH8D,YADG,EAEH;AACI9G,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA5WQ8C,mB,EAAmB,uH,EAAA,uDAMqC,oDANrC,EAM8C,CAN9C,C,EAM8C,uH;AAAA,K;;;aANjEA,mB;AAAmB,eAAnBA,mBAAmB;;;;;sEAAnBA,mB,EAAmB;cAD/B;AAC+B,Q;;;;;;kBAMmB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaG,kB;AAMT,kCAAsBhE,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,sDAEfD,QAFe;AAAA;;AAAA;AAErC,mEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;0CAewB2D,S,EAAoB1B,M,EAAiB1B,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAKrL,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIgD,SAAS,KAAK/C,SAAd,IAA2B+C,SAAS,KAAK,IAA7C,EAAmD;AAC/CjD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,WAApB,EAAsC8C,SAAtC,CAAlB;AACH;;AACD,cAAI1B,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AAED,cAAInB,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAhBoL,CAkBrL;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA3BoL,CA6BrL;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,oBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;uCAoBqBkD,S,EAAoB1B,M,EAAiBb,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAW1O,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIgD,SAAS,KAAK/C,SAAd,IAA2B+C,SAAS,KAAK,IAA7C,EAAmD;AAC/CjD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,WAApB,EAAsC8C,SAAtC,CAAlB;AACH;;AACD,cAAI1B,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAIb,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAxCyO,CA0C1O;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAnDyO,CAqD1O;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA2C,KAAK8C,QAAhD,oBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;yCAeuBkD,S,EAAoB1B,M,EAAiB2B,W,EAA2BrD,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAM/M,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIgD,SAAS,KAAK/C,SAAd,IAA2B+C,SAAS,KAAK,IAA7C,EAAmD;AAC/CjD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,WAApB,EAAsC8C,SAAtC,CAAlB;AACH;;AACD,cAAI1B,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AAED,cAAInB,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAjB8M,CAmB/M;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA5B8M,CA8B/M;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,oBACHiE,WADG,EAEH;AACIjH,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;wCAcsBmD,W,EAA2BxC,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAK1L,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAbyL,CAe1L;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxByL,CA0B1L;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,oBACHiE,WADG,EAEH;AACIjH,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBAhTQiD,kB,EAAkB,uH,EAAA,uDAMsC,oDANtC,EAM+C,CAN/C,C,EAM+C,uH;AAAA,K;;;aANjEA,kB;AAAkB,eAAlBA,kBAAkB;;;;;sEAAlBA,kB,EAAkB;cAD9B;AAC8B,Q;;;;;;kBAMoB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaG,qB;AAMT,qCAAsBnE,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,sDAEfD,QAFe;AAAA;;AAAA;AAErC,mEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;6CAiB2B8D,W,EAAsB7D,G,EAAcrD,O,EAAkB0D,a,EAAwBC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAOjO,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAImD,WAAW,KAAKlD,SAAhB,IAA6BkD,WAAW,KAAK,IAAjD,EAAuD;AACnDpD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCiD,WAAxC,CAAlB;AACH;;AACD,cAAI7D,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIrD,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAI0D,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAxBgO,CA0BjO;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAnCgO,CAqCjO;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,uBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;0CAsBwBqD,W,EAAsB7D,G,EAAcrD,O,EAAkB0D,a,EAAwBc,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAatR,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAImD,WAAW,KAAKlD,SAAhB,IAA6BkD,WAAW,KAAK,IAAjD,EAAuD;AACnDpD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCiD,WAAxC,CAAlB;AACH;;AACD,cAAI7D,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIrD,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAI0D,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIc,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAhDqR,CAkDtR;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA3DqR,CA6DtR;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA8C,KAAK8C,QAAnD,uBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;4CAiB0BqD,W,EAAsB7D,G,EAAcrD,O,EAAkB0D,a,EAAwByD,c,EAAiCxD,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAQjQ,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAImD,WAAW,KAAKlD,SAAhB,IAA6BkD,WAAW,KAAK,IAAjD,EAAuD;AACnDpD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCiD,WAAxC,CAAlB;AACH;;AACD,cAAI7D,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIrD,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAI0D,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAzBgQ,CA2BjQ;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WApCgQ,CAsCjQ;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,uBACHoE,cADG,EAEH;AACIpH,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;2CAcyBsD,c,EAAiC3C,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAKnM,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAbkM,CAenM;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxBkM,CA0BnM;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,uBACHoE,cADG,EAEH;AACIpH,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA9UQoD,qB,EAAqB,uH,EAAA,uDAMmC,oDANnC,EAM4C,CAN5C,C,EAM4C,uH;AAAA,K;;;aANjEA,qB;AAAqB,eAArBA,qBAAqB;;;;;sEAArBA,qB,EAAqB;cADjC;AACiC,Q;;;;;;kBAMiB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaG,kB;AAMT,kCAAsBtE,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,uDAEfD,QAFe;AAAA;;AAAA;AAErC,sEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;0CAqBwBiE,Q,EAAmBhC,M,EAAiBiC,W,EAAsBnB,M,EAAiBoB,K,EAAgBtB,W,EAAsBxC,Q,EAAmBC,a,EAAwBC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAW5S,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIsD,QAAQ,KAAKrD,SAAb,IAA0BqD,QAAQ,KAAK,IAA3C,EAAiD;AAC7CvD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCoD,QAArC,CAAlB;AACH;;AACD,cAAIhC,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAIiC,WAAW,KAAKtD,SAAhB,IAA6BsD,WAAW,KAAK,IAAjD,EAAuD;AACnDxD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,cAApB,EAAyCqD,WAAzC,CAAlB;AACH;;AACD,cAAInB,MAAM,KAAKnC,SAAX,IAAwBmC,MAAM,KAAK,IAAvC,EAA6C;AACzCrC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCkC,MAAnC,CAAlB;AACH;;AACD,cAAIoB,KAAK,KAAKvD,SAAV,IAAuBuD,KAAK,KAAK,IAArC,EAA2C;AACvCzD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCsD,KAAlC,CAAlB;AACH;;AACD,cAAItB,WAAW,KAAKjC,SAAhB,IAA6BiC,WAAW,KAAK,IAAjD,EAAuD;AACnDnC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCgC,WAAxC,CAAlB;AACH;;AACD,cAAIxC,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAxC2S,CA0C5S;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAnD2S,CAqD5S;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,oBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;uCA0BqBwD,Q,EAAmBhC,M,EAAiBiC,W,EAAsBnB,M,EAAiBoB,K,EAAgBtB,W,EAAsBxC,Q,EAAmBC,a,EAAwBc,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAiBjW,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIsD,QAAQ,KAAKrD,SAAb,IAA0BqD,QAAQ,KAAK,IAA3C,EAAiD;AAC7CvD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCoD,QAArC,CAAlB;AACH;;AACD,cAAIhC,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAIiC,WAAW,KAAKtD,SAAhB,IAA6BsD,WAAW,KAAK,IAAjD,EAAuD;AACnDxD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,cAApB,EAAyCqD,WAAzC,CAAlB;AACH;;AACD,cAAInB,MAAM,KAAKnC,SAAX,IAAwBmC,MAAM,KAAK,IAAvC,EAA6C;AACzCrC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCkC,MAAnC,CAAlB;AACH;;AACD,cAAIoB,KAAK,KAAKvD,SAAV,IAAuBuD,KAAK,KAAK,IAArC,EAA2C;AACvCzD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCsD,KAAlC,CAAlB;AACH;;AACD,cAAItB,WAAW,KAAKjC,SAAhB,IAA6BiC,WAAW,KAAK,IAAjD,EAAuD;AACnDnC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCgC,WAAxC,CAAlB;AACH;;AACD,cAAIxC,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIc,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAhEgW,CAkEjW;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA3EgW,CA6EjW;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA2C,KAAK8C,QAAhD,oBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;yCAqBuBwD,Q,EAAmBhC,M,EAAiBiC,W,EAAsBnB,M,EAAiBoB,K,EAAgBtB,W,EAAsBxC,Q,EAAmBC,a,EAAwB8D,W,EAA2B7D,M,EAA2H;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAYtU,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIsD,QAAQ,KAAKrD,SAAb,IAA0BqD,QAAQ,KAAK,IAA3C,EAAiD;AAC7CvD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCoD,QAArC,CAAlB;AACH;;AACD,cAAIhC,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAIiC,WAAW,KAAKtD,SAAhB,IAA6BsD,WAAW,KAAK,IAAjD,EAAuD;AACnDxD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,cAApB,EAAyCqD,WAAzC,CAAlB;AACH;;AACD,cAAInB,MAAM,KAAKnC,SAAX,IAAwBmC,MAAM,KAAK,IAAvC,EAA6C;AACzCrC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCkC,MAAnC,CAAlB;AACH;;AACD,cAAIoB,KAAK,KAAKvD,SAAV,IAAuBuD,KAAK,KAAK,IAArC,EAA2C;AACvCzD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCsD,KAAlC,CAAlB;AACH;;AACD,cAAItB,WAAW,KAAKjC,SAAhB,IAA6BiC,WAAW,KAAK,IAAjD,EAAuD;AACnDnC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCgC,WAAxC,CAAlB;AACH;;AACD,cAAIxC,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAzCqU,CA2CtU;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WApDqU,CAsDtU;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,oBACHyE,WADG,EAEH;AACIzH,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;wCAcsB2D,W,EAA2BhD,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAK1L,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAbyL,CAe1L;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxByL,CA0B1L;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,oBACHyE,WADG,EAEH;AACIzH,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA1YQuD,kB,EAAkB,uH,EAAA,uDAMsC,oDANtC,EAM+C,CAN/C,C,EAM+C,uH;AAAA,K;;;aANjEA,kB;AAAkB,eAAlBA,kBAAkB;;;;;sEAAlBA,kB,EAAkB;cAD9B;AAC8B,Q;;;;;;kBAMoB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaK,6B;AAMT,6CAAsB3E,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,uDAEfD,QAFe;AAAA;;AAAA;AAErC,sEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;qDAqBmCsE,Y,EAAuBL,Q,EAAmBrH,O,EAAkBqD,G,EAAckC,M,EAAiBoC,U,EAAqBlE,Q,EAAmBC,a,EAAwBC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAWtT,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI2D,YAAY,KAAK1D,SAAjB,IAA8B0D,YAAY,KAAK,IAAnD,EAAyD;AACrD5D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,cAApB,EAAyCyD,YAAzC,CAAlB;AACH;;AACD,cAAIL,QAAQ,KAAKrD,SAAb,IAA0BqD,QAAQ,KAAK,IAA3C,EAAiD;AAC7CvD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCoD,QAArC,CAAlB;AACH;;AACD,cAAIrH,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAIqD,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIkC,MAAM,KAAKvB,SAAX,IAAwBuB,MAAM,KAAK,IAAvC,EAA6C;AACzCzB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCsB,MAAnC,CAAlB;AACH;;AACD,cAAIoC,UAAU,KAAK3D,SAAf,IAA4B2D,UAAU,KAAK,IAA/C,EAAqD;AACjD7D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,YAApB,EAAuC0D,UAAvC,CAAlB;AACH;;AACD,cAAIlE,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAxCqT,CA0CtT;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAnDqT,CAqDtT;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,gCACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;kDA0BgC6D,Y,EAAuBL,Q,EAAmBrH,O,EAAkBqD,G,EAAckC,M,EAAiBoC,U,EAAqBlE,Q,EAAmBC,a,EAAwBc,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAiB3W,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI2D,YAAY,KAAK1D,SAAjB,IAA8B0D,YAAY,KAAK,IAAnD,EAAyD;AACrD5D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,cAApB,EAAyCyD,YAAzC,CAAlB;AACH;;AACD,cAAIL,QAAQ,KAAKrD,SAAb,IAA0BqD,QAAQ,KAAK,IAA3C,EAAiD;AAC7CvD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCoD,QAArC,CAAlB;AACH;;AACD,cAAIrH,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAIqD,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIkC,MAAM,KAAKvB,SAAX,IAAwBuB,MAAM,KAAK,IAAvC,EAA6C;AACzCzB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCsB,MAAnC,CAAlB;AACH;;AACD,cAAIoC,UAAU,KAAK3D,SAAf,IAA4B2D,UAAU,KAAK,IAA/C,EAAqD;AACjD7D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,YAApB,EAAuC0D,UAAvC,CAAlB;AACH;;AACD,cAAIlE,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIc,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAhE0W,CAkE3W;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA3E0W,CA6E3W;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAAsD,KAAK8C,QAA3D,gCACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;oDAqBkC6D,Y,EAAuBL,Q,EAAmBrH,O,EAAkBqD,G,EAAckC,M,EAAiBoC,U,EAAqBlE,Q,EAAmBC,a,EAAwBkE,sB,EAAiDjE,M,EAA2H;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAYtW,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI2D,YAAY,KAAK1D,SAAjB,IAA8B0D,YAAY,KAAK,IAAnD,EAAyD;AACrD5D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,cAApB,EAAyCyD,YAAzC,CAAlB;AACH;;AACD,cAAIL,QAAQ,KAAKrD,SAAb,IAA0BqD,QAAQ,KAAK,IAA3C,EAAiD;AAC7CvD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCoD,QAArC,CAAlB;AACH;;AACD,cAAIrH,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAIqD,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIkC,MAAM,KAAKvB,SAAX,IAAwBuB,MAAM,KAAK,IAAvC,EAA6C;AACzCzB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCsB,MAAnC,CAAlB;AACH;;AACD,cAAIoC,UAAU,KAAK3D,SAAf,IAA4B2D,UAAU,KAAK,IAA/C,EAAqD;AACjD7D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,YAApB,EAAuC0D,UAAvC,CAAlB;AACH;;AACD,cAAIlE,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAzCqW,CA2CtW;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WApDqW,CAsDtW;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,gCACH6E,sBADG,EAEH;AACI7H,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;mDAciC+D,sB,EAAiDpD,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAK3N,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAb0N,CAe3N;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxB0N,CA0B3N;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,gCACH6E,sBADG,EAEH;AACI7H,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA1YQ4D,6B,EAA6B,uH,EAAA,uDAM2B,oDAN3B,EAMoC,CANpC,C,EAMoC,uH;AAAA,K;;;aANjEA,6B;AAA6B,eAA7BA,6BAA6B;;;;;sEAA7BA,6B,EAA6B;cADzC;AACyC,Q;;;;;;kBAMS;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaI,gB;AAMT,gCAAsB/E,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,uDAEfD,QAFe;AAAA;;AAAA;AAErC,sEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;wCAqBsB0E,M,EAAiBZ,W,EAAsBlH,O,EAAkB+H,e,EAA0BC,K,EAAgBL,U,EAAqBlE,Q,EAAmBC,a,EAAwBC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAWjT,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI+D,MAAM,KAAK9D,SAAX,IAAwB8D,MAAM,KAAK,IAAvC,EAA6C;AACzChE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmC6D,MAAnC,CAAlB;AACH;;AACD,cAAIZ,WAAW,KAAKlD,SAAhB,IAA6BkD,WAAW,KAAK,IAAjD,EAAuD;AACnDpD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCiD,WAAxC,CAAlB;AACH;;AACD,cAAIlH,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAI+H,eAAe,KAAK/D,SAApB,IAAiC+D,eAAe,KAAK,IAAzD,EAA+D;AAC3DjE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,kBAApB,EAA6C8D,eAA7C,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKhE,SAAV,IAAuBgE,KAAK,KAAK,IAArC,EAA2C;AACvClE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkC+D,KAAlC,CAAlB;AACH;;AACD,cAAIL,UAAU,KAAK3D,SAAf,IAA4B2D,UAAU,KAAK,IAA/C,EAAqD;AACjD7D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,YAApB,EAAuC0D,UAAvC,CAAlB;AACH;;AACD,cAAIlE,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAxCgT,CA0CjT;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAnDgT,CAqDjT;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,kBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;qCA0BmBiE,M,EAAiBZ,W,EAAsBlH,O,EAAkB+H,e,EAA0BC,K,EAAgBL,U,EAAqBlE,Q,EAAmBC,a,EAAwBc,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAiBtW,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI+D,MAAM,KAAK9D,SAAX,IAAwB8D,MAAM,KAAK,IAAvC,EAA6C;AACzChE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmC6D,MAAnC,CAAlB;AACH;;AACD,cAAIZ,WAAW,KAAKlD,SAAhB,IAA6BkD,WAAW,KAAK,IAAjD,EAAuD;AACnDpD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCiD,WAAxC,CAAlB;AACH;;AACD,cAAIlH,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAI+H,eAAe,KAAK/D,SAApB,IAAiC+D,eAAe,KAAK,IAAzD,EAA+D;AAC3DjE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,kBAApB,EAA6C8D,eAA7C,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKhE,SAAV,IAAuBgE,KAAK,KAAK,IAArC,EAA2C;AACvClE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkC+D,KAAlC,CAAlB;AACH;;AACD,cAAIL,UAAU,KAAK3D,SAAf,IAA4B2D,UAAU,KAAK,IAA/C,EAAqD;AACjD7D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,YAApB,EAAuC0D,UAAvC,CAAlB;AACH;;AACD,cAAIlE,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIc,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAhEqW,CAkEtW;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA3EqW,CA6EtW;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAAyC,KAAK8C,QAA9C,kBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;uCAqBqBiE,M,EAAiBZ,W,EAAsBlH,O,EAAkB+H,e,EAA0BC,K,EAAgBL,U,EAAqBlE,Q,EAAmBC,a,EAAwBuE,S,EAAuBtE,M,EAA2H;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAYvU,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI+D,MAAM,KAAK9D,SAAX,IAAwB8D,MAAM,KAAK,IAAvC,EAA6C;AACzChE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmC6D,MAAnC,CAAlB;AACH;;AACD,cAAIZ,WAAW,KAAKlD,SAAhB,IAA6BkD,WAAW,KAAK,IAAjD,EAAuD;AACnDpD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCiD,WAAxC,CAAlB;AACH;;AACD,cAAIlH,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAI+H,eAAe,KAAK/D,SAApB,IAAiC+D,eAAe,KAAK,IAAzD,EAA+D;AAC3DjE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,kBAApB,EAA6C8D,eAA7C,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKhE,SAAV,IAAuBgE,KAAK,KAAK,IAArC,EAA2C;AACvClE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkC+D,KAAlC,CAAlB;AACH;;AACD,cAAIL,UAAU,KAAK3D,SAAf,IAA4B2D,UAAU,KAAK,IAA/C,EAAqD;AACjD7D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,YAApB,EAAuC0D,UAAvC,CAAlB;AACH;;AACD,cAAIlE,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAzCsU,CA2CvU;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WApDsU,CAsDvU;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,kBACHkF,SADG,EAEH;AACIlI,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;sCAcoBoE,S,EAAuBzD,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAKpL,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAbmL,CAepL;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxBmL,CA0BpL;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,kBACHkF,SADG,EAEH;AACIlI,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA1YQgE,gB,EAAgB,uH,EAAA,uDAMwC,oDANxC,EAMiD,CANjD,C,EAMiD,uH;AAAA,K;;;aANjEA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;kBAMsB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaK,mB;AAMT,mCAAsBpF,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,uDAEfD,QAFe;AAAA;;AAAA;AAErC,sEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;2CAiByBgC,U,EAAqBO,O,EAAkBwC,O,EAAkBzE,a,EAAwBC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAOlO,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIqB,UAAU,KAAKpB,SAAf,IAA4BoB,UAAU,KAAK,IAA/C,EAAqD;AACjDtB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,YAApB,EAAuCmB,UAAvC,CAAlB;AACH;;AACD,cAAIO,OAAO,KAAK3B,SAAZ,IAAyB2B,OAAO,KAAK,IAAzC,EAA+C;AAC3C7B,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoC0B,OAApC,CAAlB;AACH;;AACD,cAAIwC,OAAO,KAAKnE,SAAZ,IAAyBmE,OAAO,KAAK,IAAzC,EAA+C;AAC3CrE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCkE,OAApC,CAAlB;AACH;;AACD,cAAIzE,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAxBiO,CA0BlO;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAnCiO,CAqClO;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,qBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;wCAsBsBuB,U,EAAqBO,O,EAAkBwC,O,EAAkBzE,a,EAAwBc,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAavR,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIqB,UAAU,KAAKpB,SAAf,IAA4BoB,UAAU,KAAK,IAA/C,EAAqD;AACjDtB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,YAApB,EAAuCmB,UAAvC,CAAlB;AACH;;AACD,cAAIO,OAAO,KAAK3B,SAAZ,IAAyB2B,OAAO,KAAK,IAAzC,EAA+C;AAC3C7B,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoC0B,OAApC,CAAlB;AACH;;AACD,cAAIwC,OAAO,KAAKnE,SAAZ,IAAyBmE,OAAO,KAAK,IAAzC,EAA+C;AAC3CrE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCkE,OAApC,CAAlB;AACH;;AACD,cAAIzE,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIc,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAhDsR,CAkDvR;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA3DsR,CA6DvR;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA4C,KAAK8C,QAAjD,qBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;0CAiBwBuB,U,EAAqBO,O,EAAkBwC,O,EAAkBzE,a,EAAwB0E,Y,EAA6BzE,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAQ9P,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIqB,UAAU,KAAKpB,SAAf,IAA4BoB,UAAU,KAAK,IAA/C,EAAqD;AACjDtB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,YAApB,EAAuCmB,UAAvC,CAAlB;AACH;;AACD,cAAIO,OAAO,KAAK3B,SAAZ,IAAyB2B,OAAO,KAAK,IAAzC,EAA+C;AAC3C7B,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoC0B,OAApC,CAAlB;AACH;;AACD,cAAIwC,OAAO,KAAKnE,SAAZ,IAAyBmE,OAAO,KAAK,IAAzC,EAA+C;AAC3CrE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCkE,OAApC,CAAlB;AACH;;AACD,cAAIzE,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAzB6P,CA2B9P;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WApC6P,CAsC9P;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,qBACHqF,YADG,EAEH;AACIrI,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;yCAcuBuE,Y,EAA6B5D,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAK7L,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAb4L,CAe7L;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxB4L,CA0B7L;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,qBACHqF,YADG,EAEH;AACIrI,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA9UQqE,mB,EAAmB,uH,EAAA,uDAMqC,oDANrC,EAM8C,CAN9C,C,EAM8C,uH;AAAA,K;;;aANjEA,mB;AAAmB,eAAnBA,mBAAmB;;;;;sEAAnBA,mB,EAAmB;cAD/B;AAC+B,Q;;;;;;kBAMmB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaG,mB;AAMT,mCAAsBvF,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,uDAEfD,QAFe;AAAA;;AAAA;AAErC,sEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;2CAqByBC,G,EAAciF,O,EAAkBC,U,EAAqBC,U,EAAqBC,I,EAAeC,e,EAA0BhF,a,EAAwBiF,M,EAAiBhF,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAW7S,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIV,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIiF,OAAO,KAAKtE,SAAZ,IAAyBsE,OAAO,KAAK,IAAzC,EAA+C;AAC3CxE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCqE,OAApC,CAAlB;AACH;;AACD,cAAIC,UAAU,KAAKvE,SAAf,IAA4BuE,UAAU,KAAK,IAA/C,EAAqD;AACjDzE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCsE,UAAxC,CAAlB;AACH;;AACD,cAAIC,UAAU,KAAKxE,SAAf,IAA4BwE,UAAU,KAAK,IAA/C,EAAqD;AACjD1E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCuE,UAAxC,CAAlB;AACH;;AACD,cAAIC,IAAI,KAAKzE,SAAT,IAAsByE,IAAI,KAAK,IAAnC,EAAyC;AACrC3E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,MAApB,EAAiCwE,IAAjC,CAAlB;AACH;;AACD,cAAIC,eAAe,KAAK1E,SAApB,IAAiC0E,eAAe,KAAK,IAAzD,EAA+D;AAC3D5E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,kBAApB,EAA6CyE,eAA7C,CAAlB;AACH;;AACD,cAAIhF,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIiF,MAAM,KAAK3E,SAAX,IAAwB2E,MAAM,KAAK,IAAvC,EAA6C;AACzC7E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmC0E,MAAnC,CAAlB;AACH;;AAED,cAAIzE,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAxC4S,CA0C7S;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAnD4S,CAqD7S;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,qBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;wCA0BsBR,G,EAAciF,O,EAAkBC,U,EAAqBC,U,EAAqBC,I,EAAeC,e,EAA0BhF,a,EAAwBiF,M,EAAiBnE,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAiBlW,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIV,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIiF,OAAO,KAAKtE,SAAZ,IAAyBsE,OAAO,KAAK,IAAzC,EAA+C;AAC3CxE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCqE,OAApC,CAAlB;AACH;;AACD,cAAIC,UAAU,KAAKvE,SAAf,IAA4BuE,UAAU,KAAK,IAA/C,EAAqD;AACjDzE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCsE,UAAxC,CAAlB;AACH;;AACD,cAAIC,UAAU,KAAKxE,SAAf,IAA4BwE,UAAU,KAAK,IAA/C,EAAqD;AACjD1E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCuE,UAAxC,CAAlB;AACH;;AACD,cAAIC,IAAI,KAAKzE,SAAT,IAAsByE,IAAI,KAAK,IAAnC,EAAyC;AACrC3E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,MAApB,EAAiCwE,IAAjC,CAAlB;AACH;;AACD,cAAIC,eAAe,KAAK1E,SAApB,IAAiC0E,eAAe,KAAK,IAAzD,EAA+D;AAC3D5E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,kBAApB,EAA6CyE,eAA7C,CAAlB;AACH;;AACD,cAAIhF,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIiF,MAAM,KAAK3E,SAAX,IAAwB2E,MAAM,KAAK,IAAvC,EAA6C;AACzC7E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmC0E,MAAnC,CAAlB;AACH;;AACD,cAAInE,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAhEiW,CAkElW;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA3EiW,CA6ElW;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA4C,KAAK8C,QAAjD,qBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;0CAqBwBR,G,EAAciF,O,EAAkBC,U,EAAqBC,U,EAAqBC,I,EAAeC,e,EAA0BhF,a,EAAwBiF,M,EAAiBC,Y,EAA6BjF,M,EAA2H;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAYzU,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIV,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIiF,OAAO,KAAKtE,SAAZ,IAAyBsE,OAAO,KAAK,IAAzC,EAA+C;AAC3CxE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCqE,OAApC,CAAlB;AACH;;AACD,cAAIC,UAAU,KAAKvE,SAAf,IAA4BuE,UAAU,KAAK,IAA/C,EAAqD;AACjDzE,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCsE,UAAxC,CAAlB;AACH;;AACD,cAAIC,UAAU,KAAKxE,SAAf,IAA4BwE,UAAU,KAAK,IAA/C,EAAqD;AACjD1E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCuE,UAAxC,CAAlB;AACH;;AACD,cAAIC,IAAI,KAAKzE,SAAT,IAAsByE,IAAI,KAAK,IAAnC,EAAyC;AACrC3E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,MAApB,EAAiCwE,IAAjC,CAAlB;AACH;;AACD,cAAIC,eAAe,KAAK1E,SAApB,IAAiC0E,eAAe,KAAK,IAAzD,EAA+D;AAC3D5E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,kBAApB,EAA6CyE,eAA7C,CAAlB;AACH;;AACD,cAAIhF,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIiF,MAAM,KAAK3E,SAAX,IAAwB2E,MAAM,KAAK,IAAvC,EAA6C;AACzC7E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmC0E,MAAnC,CAAlB;AACH;;AAED,cAAIzE,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAzCwU,CA2CzU;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WApDwU,CAsDzU;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,qBACH6F,YADG,EAEH;AACI7I,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;yCAcuB+E,Y,EAA6BpE,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAK7L,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAb4L,CAe7L;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxB4L,CA0B7L;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,qBACH6F,YADG,EAEH;AACI7I,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA1YQwE,mB,EAAmB,uH,EAAA,uDAMqC,oDANrC,EAM8C,CAN9C,C,EAM8C,uH;AAAA,K;;;aANjEA,mB;AAAmB,eAAnBA,mBAAmB;;;;;sEAAnBA,mB,EAAmB;cAD/B;AAC+B,Q;;;;;;kBAMmB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaQ,2B;AAMT,2CAAsB/F,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,uDAEfD,QAFe;AAAA;;AAAA;AAErC,sEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;mDAmBiCpD,O,EAAkBqH,Q,EAAmBd,e,EAA0BC,Y,EAAuBC,K,EAAgB/C,a,EAAwBC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AASvR,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI/D,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAIqH,QAAQ,KAAKrD,SAAb,IAA0BqD,QAAQ,KAAK,IAA3C,EAAiD;AAC7CvD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCoD,QAArC,CAAlB;AACH;;AACD,cAAId,eAAe,KAAKvC,SAApB,IAAiCuC,eAAe,KAAK,IAAzD,EAA+D;AAC3DzC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,kBAApB,EAA6CsC,eAA7C,CAAlB;AACH;;AACD,cAAIC,YAAY,KAAKxC,SAAjB,IAA8BwC,YAAY,KAAK,IAAnD,EAAyD;AACrD1C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CuC,YAA1C,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKzC,SAAV,IAAuByC,KAAK,KAAK,IAArC,EAA2C;AACvC3C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCwC,KAAlC,CAAlB;AACH;;AACD,cAAI/C,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAhCsR,CAkCvR;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA3CsR,CA6CvR;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,+BACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;gDAwB8B7D,O,EAAkBqH,Q,EAAmBd,e,EAA0BC,Y,EAAuBC,K,EAAgB/C,a,EAAwBc,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAe5U,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI/D,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAIqH,QAAQ,KAAKrD,SAAb,IAA0BqD,QAAQ,KAAK,IAA3C,EAAiD;AAC7CvD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCoD,QAArC,CAAlB;AACH;;AACD,cAAId,eAAe,KAAKvC,SAApB,IAAiCuC,eAAe,KAAK,IAAzD,EAA+D;AAC3DzC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,kBAApB,EAA6CsC,eAA7C,CAAlB;AACH;;AACD,cAAIC,YAAY,KAAKxC,SAAjB,IAA8BwC,YAAY,KAAK,IAAnD,EAAyD;AACrD1C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CuC,YAA1C,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKzC,SAAV,IAAuByC,KAAK,KAAK,IAArC,EAA2C;AACvC3C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCwC,KAAlC,CAAlB;AACH;;AACD,cAAI/C,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIc,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAxD2U,CA0D5U;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAnE2U,CAqE5U;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAAoD,KAAK8C,QAAzD,+BACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;kDAmBgC7D,O,EAAkBqH,Q,EAAmBd,e,EAA0BC,Y,EAAuBC,K,EAAgB/C,a,EAAwBoF,oB,EAA6CnF,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAUnU,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAI/D,OAAO,KAAKgE,SAAZ,IAAyBhE,OAAO,KAAK,IAAzC,EAA+C;AAC3C8D,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoCjE,OAApC,CAAlB;AACH;;AACD,cAAIqH,QAAQ,KAAKrD,SAAb,IAA0BqD,QAAQ,KAAK,IAA3C,EAAiD;AAC7CvD,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCoD,QAArC,CAAlB;AACH;;AACD,cAAId,eAAe,KAAKvC,SAApB,IAAiCuC,eAAe,KAAK,IAAzD,EAA+D;AAC3DzC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,kBAApB,EAA6CsC,eAA7C,CAAlB;AACH;;AACD,cAAIC,YAAY,KAAKxC,SAAjB,IAA8BwC,YAAY,KAAK,IAAnD,EAAyD;AACrD1C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CuC,YAA1C,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKzC,SAAV,IAAuByC,KAAK,KAAK,IAArC,EAA2C;AACvC3C,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCwC,KAAlC,CAAlB;AACH;;AACD,cAAI/C,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAjCkU,CAmCnU;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA5CkU,CA8CnU;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,+BACH+F,oBADG,EAEH;AACI/I,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;iDAc+BiF,oB,EAA6CtE,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAKrN,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAboN,CAerN;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxBoN,CA0BrN;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,+BACH+F,oBADG,EAEH;AACI/I,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA5WQgF,2B,EAA2B,uH,EAAA,uDAM6B,oDAN7B,EAMsC,CANtC,C,EAMsC,uH;AAAA,K;;;aANjEA,2B;AAA2B,eAA3BA,2BAA2B;;;;;sEAA3BA,2B,EAA2B;cADvC;AACuC,Q;;;;;;kBAMW;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaE,mB;AAMT,mCAAsBjG,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,uDAEfD,QAFe;AAAA;;AAAA;AAErC,sEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;2CAmByBC,G,EAAcsC,O,EAAkBpC,K,EAAgBD,Q,EAAmBG,Q,EAAmBC,a,EAAwBC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAS/P,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIV,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIsC,OAAO,KAAK3B,SAAZ,IAAyB2B,OAAO,KAAK,IAAzC,EAA+C;AAC3C7B,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoC0B,OAApC,CAAlB;AACH;;AACD,cAAIpC,KAAK,KAAKS,SAAV,IAAuBT,KAAK,KAAK,IAArC,EAA2C;AACvCO,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCV,KAAlC,CAAlB;AACH;;AACD,cAAID,QAAQ,KAAKU,SAAb,IAA0BV,QAAQ,KAAK,IAA3C,EAAiD;AAC7CQ,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCX,QAArC,CAAlB;AACH;;AACD,cAAIG,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAhC8P,CAkC/P;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA3C8P,CA6C/P;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,qBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;wCAwBsBR,G,EAAcsC,O,EAAkBpC,K,EAAgBD,Q,EAAmBG,Q,EAAmBC,a,EAAwBc,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAepT,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIV,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIsC,OAAO,KAAK3B,SAAZ,IAAyB2B,OAAO,KAAK,IAAzC,EAA+C;AAC3C7B,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoC0B,OAApC,CAAlB;AACH;;AACD,cAAIpC,KAAK,KAAKS,SAAV,IAAuBT,KAAK,KAAK,IAArC,EAA2C;AACvCO,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCV,KAAlC,CAAlB;AACH;;AACD,cAAID,QAAQ,KAAKU,SAAb,IAA0BV,QAAQ,KAAK,IAA3C,EAAiD;AAC7CQ,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCX,QAArC,CAAlB;AACH;;AACD,cAAIG,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIc,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAxDmT,CA0DpT;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAnEmT,CAqEpT;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA4C,KAAK8C,QAAjD,qBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;0CAmBwBR,G,EAAcsC,O,EAAkBpC,K,EAAgBD,Q,EAAmBG,Q,EAAmBC,a,EAAwBsF,Y,EAA6BrF,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAU3R,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIV,GAAG,KAAKW,SAAR,IAAqBX,GAAG,KAAK,IAAjC,EAAuC;AACnCS,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,KAApB,EAAgCZ,GAAhC,CAAlB;AACH;;AACD,cAAIsC,OAAO,KAAK3B,SAAZ,IAAyB2B,OAAO,KAAK,IAAzC,EAA+C;AAC3C7B,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,SAApB,EAAoC0B,OAApC,CAAlB;AACH;;AACD,cAAIpC,KAAK,KAAKS,SAAV,IAAuBT,KAAK,KAAK,IAArC,EAA2C;AACvCO,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCV,KAAlC,CAAlB;AACH;;AACD,cAAID,QAAQ,KAAKU,SAAb,IAA0BV,QAAQ,KAAK,IAA3C,EAAiD;AAC7CQ,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCX,QAArC,CAAlB;AACH;;AACD,cAAIG,QAAQ,KAAKO,SAAb,IAA0BP,QAAQ,KAAK,IAA3C,EAAiD;AAC7CK,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,UAApB,EAAqCR,QAArC,CAAlB;AACH;;AACD,cAAIC,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAjC0R,CAmC3R;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA5C0R,CA8C3R;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,qBACHiG,YADG,EAEH;AACIjJ,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;yCAcuBmF,Y,EAA6BxE,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAK7L,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAb4L,CAe7L;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxB4L,CA0B7L;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,qBACHiG,YADG,EAEH;AACIjJ,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA5WQkF,mB,EAAmB,uH,EAAA,uDAMqC,oDANrC,EAM8C,CAN9C,C,EAM8C,uH;AAAA,K;;;aANjEA,mB;AAAmB,eAAnBA,mBAAmB;;;;;sEAAnBA,mB,EAAmB;cAD/B;AAC+B,Q;;;;;;kBAMmB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACjCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAeaE,oB;AAMT,oCAAsBnG,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,uDAEfD,QAFe;AAAA;;AAAA;AAErC,sEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;kCAYoE;AAAA,cAAtDQ,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAEjE,cAAIK,OAAO,GAAG,KAAKjB,cAAnB,CAFiE,CAIjE;;AACA,cAAImB,iBAAiB,GAAa,CAC9B,0BAD8B,EAE9B,kBAF8B,CAAlC;AAIA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAZgE,CAcjE;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA4B,KAAK8C,QAAjC,QACH;AACIwB,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eADxC;AAEIL,mBAAO,EAAEA,OAFb;AAGIN,mBAAO,EAAEA,OAHb;AAIIC,0BAAc,EAAEA;AAJpB,WADG,CAAP;AAQH;;;;;;;uBArEQoF,oB,EAAoB,uH,EAAA,uDAMoC,oDANpC,EAM6C,CAN7C,C,EAM6C,uH;AAAA,K;;;aANjEA,oB;AAAoB,eAApBA,oBAAoB;;;;;sEAApBA,oB,EAAoB;cADhC;AACgC,Q;;;;;;kBAMkB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;AChCnG;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAWA;;;QAgBaC,qB;AAMT,qCAAsBpG,UAAtB,EAA4EC,QAA5E,EAA0GC,aAA1G,EAAwI;AAAA;;AAAlH,aAAAF,UAAA,GAAAA,UAAA;AAJZ,aAAAC,QAAA,GAAW,6BAAX;AACH,aAAAE,cAAA,GAAiB,IAAI,gEAAJ,EAAjB;AACA,aAAAD,aAAA,GAAgB,IAAI,4DAAJ,EAAhB;;AAGH,YAAID,QAAJ,EAAc;AACV,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACD,YAAIC,aAAJ,EAAmB;AACf,eAAKA,aAAL,GAAqBA,aAArB;AACA,eAAKD,QAAL,GAAgBA,QAAQ,IAAIC,aAAa,CAACD,QAA1B,IAAsC,KAAKA,QAA3D;AACH;AACJ;AAED;;;;;;;;uCAIuBG,Q,EAAkB;AACrC,cAAMC,IAAI,GAAG,qBAAb;;AADqC,uDAEfD,QAFe;AAAA;;AAAA;AAErC,sEAAgC;AAAA,kBAArBE,OAAqB;;AAC5B,kBAAID,IAAI,KAAKC,OAAb,EAAsB;AAClB,uBAAO,IAAP;AACH;AACJ;AANoC;AAAA;AAAA;AAAA;AAAA;;AAOrC,iBAAO,KAAP;AACH;;;6CAiB2BkD,W,EAAsBjB,M,EAAiBsD,M,EAAiBjF,a,EAAwBC,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAOnO,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIuC,WAAW,KAAKtC,SAAhB,IAA6BsC,WAAW,KAAK,IAAjD,EAAuD;AACnDxC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCqC,WAAxC,CAAlB;AACH;;AACD,cAAIjB,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAIsD,MAAM,KAAK3E,SAAX,IAAwB2E,MAAM,KAAK,IAAvC,EAA6C;AACzC7E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmC0E,MAAnC,CAAlB;AACH;;AACD,cAAIjF,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAxBkO,CA0BnO;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAnCkO,CAqCnO;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,qBAA+B,KAAKC,QAApC,uBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;0CAsBwByC,W,EAAsBjB,M,EAAiBsD,M,EAAiBjF,a,EAAwBc,M,EAAiBC,K,EAAgBC,K,EAAgBC,S,EAAoBC,M,EAAiBC,K,EAAgBlB,M,EAA6E;AAAA,cAAtDC,OAAsD,0EAAvC,MAAuC;AAAA,cAA/BC,cAA+B,0EAAL,KAAK;AAaxR,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIuC,WAAW,KAAKtC,SAAhB,IAA6BsC,WAAW,KAAK,IAAjD,EAAuD;AACnDxC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCqC,WAAxC,CAAlB;AACH;;AACD,cAAIjB,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAIsD,MAAM,KAAK3E,SAAX,IAAwB2E,MAAM,KAAK,IAAvC,EAA6C;AACzC7E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmC0E,MAAnC,CAAlB;AACH;;AACD,cAAIjF,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AACD,cAAIc,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKT,SAAV,IAAuBS,KAAK,KAAK,IAArC,EAA2C;AACvCX,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCQ,KAAlC,CAAlB;AACH;;AACD,cAAIG,MAAM,KAAKZ,SAAX,IAAwBY,MAAM,KAAK,IAAvC,EAA6C;AACzCd,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCW,MAAnC,CAAlB;AACH;;AACD,cAAIC,KAAK,KAAKb,SAAV,IAAuBa,KAAK,KAAK,IAArC,EAA2C;AACvCf,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,OAApB,EAAkCY,KAAlC,CAAlB;AACH;;AAED,cAAIX,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIyB,KAAK,KAAKV,SAAV,IAAuBU,KAAK,KAAK,IAArC,EAA2C;AACvCR,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,OAAZ,EAAqBE,MAAM,CAACO,KAAD,CAA3B,CAAV;AACH;;AACD,cAAIC,SAAS,KAAKX,SAAd,IAA2BW,SAAS,KAAK,IAA7C,EAAmD;AAC/CT,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,YAAZ,EAA0BE,MAAM,CAACQ,SAAD,CAAhC,CAAV;AACH;;AACD,cAAIhB,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAhDuR,CAkDxR;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WA3DuR,CA6DxR;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAMA,iBAAO,KAAKJ,UAAL,CAAgB7C,GAAhB,WAA8C,KAAK8C,QAAnD,uBACH;AACIhD,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WADG,CAAP;AASH;;;4CAiB0ByC,W,EAAsBjB,M,EAAiBsD,M,EAAiBjF,a,EAAwByF,c,EAAiCxF,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAQnQ,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIuC,WAAW,KAAKtC,SAAhB,IAA6BsC,WAAW,KAAK,IAAjD,EAAuD;AACnDxC,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,aAApB,EAAwCqC,WAAxC,CAAlB;AACH;;AACD,cAAIjB,MAAM,KAAKrB,SAAX,IAAwBqB,MAAM,KAAK,IAAvC,EAA6C;AACzCvB,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCoB,MAAnC,CAAlB;AACH;;AACD,cAAIsD,MAAM,KAAK3E,SAAX,IAAwB2E,MAAM,KAAK,IAAvC,EAA6C;AACzC7E,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmC0E,MAAnC,CAAlB;AACH;;AACD,cAAIjF,aAAa,KAAKM,SAAlB,IAA+BN,aAAa,KAAK,IAArD,EAA2D;AACvDI,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,eAApB,EAA0CP,aAA1C,CAAlB;AACH;;AAED,cAAIQ,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAzBkQ,CA2BnQ;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WApCkQ,CAsCnQ;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBmC,KAAhB,WAA8B,KAAKlC,QAAnC,uBACHoG,cADG,EAEH;AACIpJ,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;2CAcyBsF,c,EAAiC3E,M,EAAiBb,M,EAA2H;AAAA,cAAtDC,OAAsD,uEAAvC,MAAuC;AAAA,cAA/BC,cAA+B,uEAAL,KAAK;AAKnM,cAAIC,eAAe,GAAG,IAAI,+DAAJ,CAAe;AAACC,mBAAO,EAAE,IAAI,mEAAJ;AAAV,WAAf,CAAtB;;AACA,cAAIS,MAAM,KAAKR,SAAX,IAAwBQ,MAAM,KAAK,IAAvC,EAA6C;AACzCV,2BAAe,GAAGA,eAAe,CAACG,GAAhB,CAAoB,QAApB,EAAmCO,MAAnC,CAAlB;AACH;;AAED,cAAIN,OAAO,GAAG,KAAKjB,cAAnB;;AACA,cAAIU,MAAM,KAAKK,SAAX,IAAwBL,MAAM,KAAK,IAAvC,EAA6C;AACzCO,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBE,MAAM,CAACR,MAAD,CAA5B,CAAV;AACH,WAbkM,CAenM;;;AACA,cAAIS,iBAAiB,GAAa,CAC9B,kBAD8B,EAE9B,mCAF8B,EAG9B,UAH8B,CAAlC;AAKA,cAAMC,wBAAwB,GAAuB,KAAKrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,iBAAtC,CAArD;;AACA,cAAIC,wBAAwB,IAAIL,SAAhC,EAA2C;AACvCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,QAAZ,EAAsBI,wBAAtB,CAAV;AACH,WAxBkM,CA0BnM;;;AACA,cAAMnB,QAAQ,GAAa,CACvB,kBADuB,EAEvB,mCAFuB,EAGvB,UAHuB,CAA3B;AAKA,cAAM6B,uBAAuB,GAAuB,KAAK/B,aAAL,CAAmBgC,uBAAnB,CAA2C9B,QAA3C,CAApD;;AACA,cAAI6B,uBAAuB,IAAIf,SAA/B,EAA0C;AACtCE,mBAAO,GAAGA,OAAO,CAACD,GAAR,CAAY,cAAZ,EAA4Bc,uBAA5B,CAAV;AACH;;AAED,iBAAO,KAAKjC,UAAL,CAAgBoC,IAAhB,WAA6B,KAAKnC,QAAlC,uBACHoG,cADG,EAEH;AACIpJ,kBAAM,EAAE+D,eADZ;AAEIS,2BAAe,EAAE,KAAKvB,aAAL,CAAmBuB,eAFxC;AAGIL,mBAAO,EAAEA,OAHb;AAIIN,mBAAO,EAAEA,OAJb;AAKIC,0BAAc,EAAEA;AALpB,WAFG,CAAP;AAUH;;;;;;;uBA9UQqF,qB,EAAqB,uH,EAAA,uDAMmC,oDANnC,EAM4C,CAN5C,C,EAM4C,uH;AAAA,K;;;aANjEA,qB;AAAqB,eAArBA,qBAAqB;;;;;sEAArBA,qB,EAAqB;cADjC;AACiC,Q;;;;;;kBAMiB;;kBAAW,oD;mBAAO,oD;;;;;kBAA8B;;;;;;;;;;;;;;;;;;;;;ACxBnG;AAAA;;;AAAA;AAAA;AAAA;;QAAaE,a;AAQT,+BAAmE;AAAA,YAAvDC,uBAAuD,uEAAJ,EAAI;;AAAA;;AAC/D,aAAKC,OAAL,GAAeD,uBAAuB,CAACC,OAAvC;AACA,aAAKC,QAAL,GAAgBF,uBAAuB,CAACE,QAAxC;AACA,aAAKjG,QAAL,GAAgB+F,uBAAuB,CAAC/F,QAAxC;AACA,aAAKkG,WAAL,GAAmBH,uBAAuB,CAACG,WAA3C;AACA,aAAKzG,QAAL,GAAgBsG,uBAAuB,CAACtG,QAAxC;AACA,aAAKwB,eAAL,GAAuB8E,uBAAuB,CAAC9E,eAA/C;AACH;AAED;;;;;;;;;;;gDAOgCkF,Y,EAAsB;AAAA;;AAClD,cAAIA,YAAY,CAAC3I,MAAb,IAAuB,CAA3B,EAA8B;AAC1B,mBAAOkD,SAAP;AACH;;AAED,cAAI0F,IAAI,GAAGD,YAAY,CAACE,IAAb,CAAkB,UAAAC,CAAC;AAAA,mBAAI,MAAI,CAACC,UAAL,CAAgBD,CAAhB,CAAJ;AAAA,WAAnB,CAAX;;AACA,cAAIF,IAAI,KAAK1F,SAAb,EAAwB;AACpB,mBAAOyF,YAAY,CAAC,CAAD,CAAnB;AACH;;AACD,iBAAOC,IAAP;AACH;AAED;;;;;;;;;;2CAO0BI,O,EAAiB;AAAA;;AACvC,cAAIA,OAAO,CAAChJ,MAAR,IAAkB,CAAtB,EAAyB;AACrB,mBAAOkD,SAAP;AACH;;AAED,cAAI0F,IAAI,GAAGI,OAAO,CAACH,IAAR,CAAa,UAAAC,CAAC;AAAA,mBAAI,OAAI,CAACC,UAAL,CAAgBD,CAAhB,CAAJ;AAAA,WAAd,CAAX;;AACA,cAAIF,IAAI,KAAK1F,SAAb,EAAwB;AACpB,mBAAO8F,OAAO,CAAC,CAAD,CAAd;AACH;;AACD,iBAAOJ,IAAP;AACH;AAED;;;;;;;;;;;;;mCAUkBK,I,EAAY;AAC1B,cAAMC,QAAQ,GAAW,IAAIC,MAAJ,CAAW,+DAAX,EAA4E,GAA5E,CAAzB;AACA,iBAAOF,IAAI,IAAI,IAAR,KAAiBC,QAAQ,CAACE,IAAT,CAAcH,IAAd,KAAuBA,IAAI,CAACI,WAAL,OAAuB,6BAA/D,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;AC7ED;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEJ;;;;;;;QAKaC,0B;;;;;;;;;;;;;kCACCC,C,EAAS;AACfA,WAAC,6FAAmBA,CAAnB,CAAD;AACA,iBAAOA,CAAC,CAACC,OAAF,CAAU,MAAV,EAAkB,KAAlB,CAAP;AACH;;;oCACWC,C,EAAS;AACjBA,WAAC,+FAAqBA,CAArB,CAAD;AACA,iBAAOA,CAAC,CAACD,OAAF,CAAU,MAAV,EAAkB,KAAlB,CAAP;AACH;;;;MAR2C,yE;;;;;;;;;;;;;;;;;ACPhD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,QAAME,SAAS,GAAG,IAAI,4DAAJ,CAA2B,UAA3B,CAAlB;AACA,QAAMC,kBAAkB,GAAG;AAC9B,aAAO,GADuB;AAE9B,aAAO,KAFuB;AAG9B,aAAO,GAHuB;AAI9B,eAAS;AAJqB,KAA3B","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CursosComponent } from './components/cursos/cursos.component';\nimport { PresencialComponent } from './components/cursos/presencial/presencial.component';\nimport { OnlineComponent } from './components/cursos/online/online.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {path: 'curso/:cursoId',component: CursosComponent },\n  {path: 'presenciales/:cursoId',component: PresencialComponent },\n  {path: 'cursos/online',component: OnlineComponent }\n  \n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { RegisterComponent } from './components/register/register.component';\nimport {MatDialog} from '@angular/material/dialog';\n\nimport { AuthService } from \"angularx-social-login\";\nimport { SocialUser } from \"angularx-social-login\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'idemweb';\n\n  user: SocialUser;\n  loggedIn: boolean;\n  \n  constructor( \n    private authService: AuthService,\n    public dialog: MatDialog\n    ){\n\n      this.authService.authState.subscribe((user) => {\n        this.user = user;\n        this.loggedIn = (user != null);\n      });\n  }\n  openRegistro() {\n    const dialogRef = this.dialog.open(RegisterComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n  openMiPerfil(){\n    const dialogRef = this.dialog.open(RegisterComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n}\n","<!--NAVEGACIÓN-->\n<div>\n    <div class=\"navbar dropdown p-0 todo\">\n        <div id=\"0\" class=\"Navigation\">\n            <ul class=\"w-100 h-100\" style=\"list-style-type: none;\">\n                <li class=\"Navigation-option-block\">\n                    <a href=\"/\" class=\"link nuxt-link-exact-active nuxt-link-active\"></a>\n                </li>\n                <li class=\"Navigation-option-block\">\n                    <a href=\"/Nosotros\" class=\"link\"></a>\n                </li>\n                <li class=\"Navigation-option-block\">\n                    <a href=\"/cursos_online\" class=\"link\"></a>\n                </li>\n                <li class=\"Navigation-option-block\">\n                    <a href=\"/#page_3\" class=\"\"></a>\n                </li>\n                <li class=\"Navigation-option-block\">\n                    <a href=\"/donaciones\" class=\"link\"></a>\n                </li>\n            </ul>\n        </div>\n        <a href=\"/\" class=\"aaa d-flex justify-content-center ml-2\">\n            <div class=\"logo n7\"></div>\n        </a>\n        <nav class=\"nav d-none d-md-flex flex-column justify-content-between py-4 px-0 \">\n            <div class=\"first-icon d-flex flex-column justify-content-center\">\n                <a class=\"d-flex justify-content-center mt-4\">\n                    <div class=\"nav-icon n1\"></div>\n                </a>\n\n\n\n                <a *ngIf=\"!loggedIn\" matTooltip=\"Iniciar sesión\" (click)=\"openRegistro()\" class=\"d-flex justify-content-center mt-4\" style=\"cursor: pointer;\">\n\n                    <div class=\"nav-icon n2\"></div>\n                </a>\n\n                <a *ngIf=\"loggedIn\" matTooltip=\"Mi Perfil\" (click)=\"openMiPerfil()\" class=\"d-flex justify-content-center mt-4\" style=\"cursor: pointer;\">\n\n                    <div class=\"nav-icon\"><img class=\"rounded-circle\" style=\"margin-left: -5px;\" width=\"31px\" [src]=\"user.photoUrl\"></div>\n                </a>\n\n            </div>\n            <div class=\"first-icon d-flex flex-column justify-content-center\">\n                <a target=\"_blank\" href=\"https://www.facebook.com/idem.ong/\" class=\"d-flex justify-content-center mt-4\">\n                    <div class=\"nav-icon n4\"></div>\n                </a>\n                <a target=\"_blank\" href=\"https://www.linkedin.com/company/institucion-educativa-idem/\" class=\"d-flex justify-content-center mt-4\">\n                    <div class=\"nav-icon n5\"></div>\n                </a>\n                <a target=\"_blank\" href=\"https://www.instagram.com/idemeducacion/\" class=\"d-flex justify-content-center mt-4\">\n                    <div class=\"nav-icon n6\"></div>\n                </a>\n\n                <a target=\"_blank\" href=\"https://wa.me/51972714858?text= \" class=\"d-flex justify-content-center mt-4\">\n                    <div class=\"nav-icon n7\"></div>\n                </a>\n\n\n            </div>\n        </nav>\n    </div>\n</div>\n\n<!-- contenedor principal-->\n<div id=\"container app\">\n\n    <router-outlet></router-outlet>\n</div>\n\n<!--footer-->\n\n<div>\n    <div class=\"Footer container-fluid w-100\">\n        <div class=\"d-flex\" style=\"max-width: 90%;\">\n            <div class=\"footer-content-wrapper\">\n                <div class=\"info-wrapper\">\n                    <div class=\"help normal-text\">¿Necesitas ayuda? Comunicate con nosotros.</div>\n                    <div class=\"options\">\n                        <div class=\"column\">\n                            <div>\n                                <a href=\"/#page_2\" class=\"\">\n                                    <div class=\"option normal-text\">Carreras</div>\n                                </a>\n                            </div>\n                            <div>\n                                <a href=\"/#page_4\" class=\"\">\n                                    <div class=\"option normal-text\">Beneficios</div>\n                                </a>\n                            </div>\n                            <div>\n                                <a href=\"/donaciones/#comoFunciona\" class=\"\">\n                                    <div class=\"option normal-text\">¿Como Funciona?</div>\n                                </a>\n                            </div>\n                            <div>\n                                <a href=\"/#page_5\" class=\"\">\n                                    <div class=\"option normal-text\">Testimonios</div>\n                                </a>\n                            </div>\n                            <div>\n                                <a href=\"/#page_6\" class=\"\">\n                                    <div class=\"option normal-text\">Noticias</div>\n                                </a>\n                            </div>\n                        </div>\n                        <div class=\"column\">\n                            <div>\n                                <a href=\"/donaciones\" class=\"\">\n                                    <div class=\"option normal-text\">Historia</div>\n                                </a>\n                            </div>\n                            <div>\n                                <a href=\"/nosotros/#ourPhilosophy\" class=\"\">\n                                    <div class=\"option normal-text\">Filosofía</div>\n                                </a>\n                            </div>\n                            <div>\n                                <a href=\"/nosotros/#ourTeam\" class=\"\">\n                                    <div class=\"option normal-text\">Nuestro Equipo</div>\n                                </a>\n                            </div>\n                            <div>\n                                <a href=\"/cursos_online/#ourTeachers\" class=\"\">\n                                    <div class=\"option normal-text\">Docentes</div>\n                                </a>\n                            </div>\n                            <div>\n                                <a href=\"/donaciones\" class=\"\">\n                                    <div class=\"option normal-text\">Donaciones</div>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"info-wrapper2\">\n                    <div class=\"mail normal-text\">informes@idem.org.pe</div>\n                    <div class=\"paymentMethods\">\n                        <div class=\"paymentMethodWrapper\">\n                            <div class=\"paymentMethod\" style=\"background-image: url(css/images/footer/paypal.png);\"></div>\n                        </div>\n                        <div class=\"paymentMethodWrapper\">\n                            <div class=\"paymentMethod\" style=\"background-image: url(css/images/footer/Diners.png);\"></div>\n                        </div>\n                        <div class=\"paymentMethodWrapper\">\n                            <div class=\"paymentMethod\" style=\"background-image: url(css/images/footer/Visa.png);\"></div>\n                        </div>\n                        <div class=\"paymentMethodWrapper\">\n                            <div class=\"paymentMethod\" style=\"background-image: url(css/images/footer/American.png);\"></div>\n                        </div>\n                    </div>\n                    <div class=\"conditions normal-text\">Terminos y condiciones</div>\n                </div>\n            </div>\n            <div class=\"icon-container\">\n                <div class=\"icon\"></div>\n            </div>\n        </div>\n        <div class=\"derechos small-text\">2020 - IDEM Derechos Reservados</div>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CursosComponent } from './components/cursos/cursos.component';\nimport { OnlineComponent } from './components/cursos/online/online.component';\nimport { PresencialComponent } from './components/cursos/presencial/presencial.component';\nimport { HomeComponent } from './components/home/home.component';\n\nimport { SocialLoginModule, AuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider, FacebookLoginProvider } from \"angularx-social-login\";\n\n\n/**Material Imports */\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n/**Social*/\n\n/* Mis servicios*/\n\nimport { IdemAlumnosService } from '../services/api/idemAlumnos.service';\nimport { IdemApartadosService } from '../services/api/idemApartados.service';\nimport { IdemCargosService } from '../services/api/idemCargos.service';\nimport { IdemCategoriasService } from '../services/api/idemCategorias.service';\nimport { IdemCursosService } from '../services/api/idemCursos.service';\nimport { IdemDocentesService } from '../services/api/idemDocentes.service';\nimport { IdemEstadosService } from '../services/api/idemEstados.service';\nimport { IdemMatriculasService } from '../services/api/idemMatriculas.service';\nimport { IdemModulosService } from '../services/api/idemModulos.service';\nimport { IdemModulosComentariosService } from '../services/api/idemModulosComentarios.service';\nimport { IdemPagosService } from '../services/api/idemPagos.service';\nimport { IdemPermisosService } from '../services/api/idemPermisos.service';\nimport { IdemPersonasService } from '../services/api/idemPersonas.service';\nimport { IdemRelCursosModulosService } from '../services/api/idemRelCursosModulos.service';\nimport { IdemUsuariosService } from '../services/api/idemUsuarios.service';\nimport { IntrospectionService } from '../services/api/introspection.service';\nimport { ItemTipocursosService } from '../services/api/itemTipocursos.service';\nimport { RegisterComponent } from './components/register/register.component';\n\n\nlet config = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider(\"871082404913-ve78njuutnpnp6ktkupqv6agu652r7b7.apps.googleusercontent.com\")\n  }\n]);\n \nexport function provideConfig() {\n  return config;\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CursosComponent,\n    OnlineComponent,\n    PresencialComponent,\n    HomeComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatTooltipModule,\n    SocialLoginModule\n\n  ],\n  providers: [ IdemAlumnosService,\n    IdemApartadosService,\n    IdemCargosService,\n    IdemCategoriasService,\n    IdemCursosService,\n    IdemDocentesService,\n    IdemEstadosService,\n    IdemMatriculasService,\n    IdemModulosService,\n    IdemModulosComentariosService,\n    IdemPagosService,\n    IdemPermisosService,\n    IdemPersonasService,\n    IdemRelCursosModulosService,\n    IdemUsuariosService,\n    IntrospectionService,\n    ItemTipocursosService,\n    {\n      provide: AuthServiceConfig,\n      useFactory: provideConfig\n    } ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { IdemCursosService } from '../../../services/api/idemCursos.service';\nimport { IdemRelCursosModulosService } from '../../../services/api/idemRelCursosModulos.service';\n\nimport { IdemCursos } from '../../../services/model/idemCursos';\n\n\n\n@Component({\n  selector: 'app-cursos',\n  templateUrl: './cursos.component.html',\n  styleUrls: ['./cursos.component.css']\n})\nexport class CursosComponent implements OnInit {\n\n  \n  constructor(private route: ActivatedRoute,\n    protected ademRelCursosModulosService:IdemRelCursosModulosService,\n    protected idemCursosService:IdemCursosService) { }\n  idcurso;\n  curso:any;\n  modulos:any;\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.idcurso= params.get('cursoId');\n     this.cargarCurso();\n    });\n  }\n\n  cargarCurso(){\n    this.idemCursosService.idemCursosGet('eq.'+this.idcurso,null,null,null,null,null,null,null,null,null,null,null,null,'*,idem_curso_items(nombre,imagen),idem_modulos(*)').subscribe(data =>{\n      this.curso=data[0];\n      this.modulos= this.curso.idem_modulos;\n    })\n  }\n\n\n\n}\n","<div id=\"container app\" class=\"nuxt\">\n    <div>\n        <div class=\"cursos_presenciales_s_hero p-0 container-fluid\">\n            <div role=\"region\" id=\"carousel1\" aria-busy=\"false\" class=\"carousel p-0 w-100 slide\" style=\"text-shadow: rgb(51, 51, 51) 1px 1px 2px;\">\n                <div id=\"carousel1___BV_inner_\" role=\"list\" class=\"carousel-inner\">\n                    <div role=\"listitem\" class=\"carousel-item active\" aria-current=\"true\" aria-posinset=\"1\" aria-setsize=\"1\" id=\"__BVID__18\" style=\"height: 100vh;\">\n                        <!---->\n                        <div class=\"carousel-caption\">\n                            <!---->\n                            <!---->\n                            <div class=\"row h-100\">\n                                <div class=\"uno h-100 col-8 p-0 col\" style=\"background-image: url(../../../assets/css/images/CursosOnline/Fotos-IDEM--13.png);\">\n\n                                    <div class=\"container screen1 h-100 d-flex justify-content-end\">\n                                        <div class=\"col-6 h-100 px-3 px-lg-5 col\">\n                                            <div class=\"formulario-general h-100 w-100 d-flex flex-column justify-content-center\">\n                                                <p class=\"hero-title m-0\">{{curso.nombre}}</p>\n                                                <div class=\"form d-flex justify-content-end pr-5\" style=\"z-index: 800; max-width: 394px;\">\n                                                    <div class=\"btn-wrapper px-2\"><button class=\"btn btn-danger comprar-btn\"> comprar ahora </button></div>\n                                                </div>\n                                                <div class=\"d-flex justify-content-end pt-4 pr-5\" style=\"z-index: 800; max-width: 394px;\">\n                                                    <div>\n                                                        <div class=\"radio m-0\">\n                                                            <div class=\"d-flex\">\n                                                                <p class=\"radio small-text\">Precio Total: </p>\n                                                                <p class=\"px-1 radio-price\">S/{{curso.costo| number:'2.0'}}</p>\n                                                                <p class=\"radio-decimal\">00</p>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"dos h-100 col-4 p-0 col\">\n                                    <div class=\"screen2 h-100 b-100\">\n                                        <div class=\"LogoBlanco\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-prev\"><span aria-hidden=\"true\" class=\"carousel-control-prev-icon\"></span><span class=\"sr-only\">Previous Slide</span></a><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\"\n                    class=\"carousel-control-next\"><span aria-hidden=\"true\" class=\"carousel-control-next-icon\"></span><span class=\"sr-only\">Next Slide</span></a>\n                <ol id=\"carousel1___BV_indicators_\" aria-hidden=\"true\" aria-label=\"Select a slide to display\" aria-owns=\"carousel1___BV_inner_\" class=\"carousel-indicators\" style=\"display: none;\">\n                    <li role=\"button\" id=\"carousel1___BV_indicator_1_\" tabindex=\"-1\" aria-current=\"true\" aria-label=\"Goto Slide 1\" aria-controls=\"carousel1___BV_inner_\" class=\"active\"></li>\n                </ol>\n            </div>\n        </div>\n\n\n\n        <div class=\"container-fluid informacion_cursos p-0\" style=\"height: 75vh; width: 100%;\">\n            <div class=\"row h-100 w-100 m-0\">\n                <div class=\"screen1 col-md-6 h-100 w-100\">\n                    <div class=\"row h-100 w-100\">\n                        <div class=\"col-md-4  d-flex align-items-center flex-column justify-content-center\">\n                            <div class=\"titulo_informacion section-title\">Información</div>\n                        </div>\n                        <div class=\"col-md-8 d-flex align-items-center flex-column justify-content-center contenido_reloj\">\n                            <div class=\"row\">\n                                <div *ngFor=\"let item of curso.idem_curso_items\" class=\"col-md-4  w-100 clock-wrapper\"><img [src]=\"item.imagen\" width=\"70px;\" class=\"clock-icon\">\n                                    <div class=\"small-text pt-2 pb-2\">{{item.nombre}} </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"screen2 col-md-6 h-100 w-100\">\n                    <div class=\"row h-100 w-100\">\n                        <div class=\"col-md-3 h-100 w-100 d-flex align-items-center flex-column justify-content-center\">\n                            <div class=\"title-container d-flex flex-column justify-content-center\">\n                                <p class=\"titulo_informacion section-title pt-4 d-flex justify-content-center pt-0\" style=\"min-height: 350px; min-width: 350px;\">Sobre el curso</p>\n                            </div>\n                        </div>\n                        <div class=\"col-md-8 h-100 w-100 d-flex align-items-center flex-column justify-content-center text-left pl-0\">\n                            <div class=\"normal-text texto_descripcion_curso\">\n                                {{curso.descripcion}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n        <div class=\"container-fluid silabo-morado p-5\" style=\"height: 100vh; width: 100%;\">\n            <div class=\"container principal py-0 pr-0 w-100 h-100\">\n                <div class=\"title-container d-flex flex-column justify-content-center\">\n                    <p class=\"section-title  d-flex justify-content-center pt-0\">Sílabo</p>\n                </div>\n                <div class=\"row w-100 h-50 m-0 p-0\">\n                    <div class=\"col p-0\">\n                        <div class=\"card cuadrado_azul d-flex justify-content-between align-items-end\">\n                            <div class=\"normal-text module-number\">Módulo 1</div> <span><img src=\"/cursoSelect/flecharoja.png\" class=\"flecha\"></span></div>\n                    </div>\n                    <div class=\"col p-0\">\n                        <div class=\"card cuadrado_azul d-flex justify-content-between align-items-end\">\n                            <div class=\"normal-text module-number\">Módulo 2</div> <span><img src=\"/cursoSelect/flecharoja.png\" class=\"flecha\"></span></div>\n                    </div>\n                    <div class=\"col p-0\">\n                        <div class=\"card cuadrado_azul d-flex justify-content-between align-items-end\">\n                            <div class=\"normal-text module-number\">Módulo 3</div> <span><img src=\"/cursoSelect/flecharoja.png\" class=\"flecha\"></span></div>\n                    </div>\n                </div>\n                <div class=\"row w-100 h-50 m-0 p-0\">\n                    <div class=\"col p-0\">\n                        <div class=\"card cuadrado_azul d-flex justify-content-between align-items-end\">\n                            <div class=\"normal-text module-number\">Módulo 4</div> <span><img src=\"/cursoSelect/flecharoja.png\" class=\"flecha\"></span></div>\n                    </div>\n                    <div class=\"col p-0\">\n                        <div class=\"card cuadrado_azul d-flex justify-content-between align-items-end\">\n                            <div class=\"normal-text module-number\">Módulo 5</div> <span><img src=\"/cursoSelect/flecharoja.png\" class=\"flecha\"></span></div>\n                    </div>\n                    <div class=\"col p-0\">\n                        <div class=\"card cuadrado_azul d-flex justify-content-between align-items-end\">\n                            <div class=\"normal-text module-number\">Módulo 6</div> <span><img src=\"/cursoSelect/flecharoja.png\" class=\"flecha\"></span></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"docentes container-fluid d-flex flex-column justify-content-center inf px-2 px-lg-5\" style=\"height: 100vh; width: 100%;\">\n            <div class=\"py-5\">\n                <div class=\"text_container\">\n                    <div class=\"title-text\">\n                        <div class=\"hero-title\">\n                            Docentes\n                        </div>\n                        <p class=\"normal-text m-0\"> Lorem ipsum dolor sit amet, consectetur .</p>\n                        <p class=\"m-0 normal-text\"> Lorem ipsum dolor sit amet, consectetur adipis</p>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <div role=\"region\" id=\"carousel1\" aria-busy=\"false\" class=\"carousel slide\">\n                    <div id=\"carousel1___BV_inner_\" role=\"list\" class=\"carousel-inner\">\n                        <div role=\"listitem\" class=\"carousel-item\" aria-current=\"false\" aria-posinset=\"1\" aria-setsize=\"2\" style=\"height: 50vh;\" id=\"__BVID__29\" aria-hidden=\"true\">\n                            <!---->\n                            <div class=\"carousel-caption\">\n                                <!---->\n                                <!---->\n                                <div class=\"w-100 h-100 px-0\">\n                                    <div class=\"px-0 w-100 h-100 m-0 px-4 d-flex justify-content-center\">\n                                        <div class=\"d-flex w-50 px-2 py-4\">\n                                            <div class=\"d-flex justify-content-start pt-0 text-center\">\n                                                <div class=\"image w-100 pt-0 d-flex flex-column justify-content-center\" style=\"background-image: url(../../../assets/css/images/docentes/1.png);\">\n                                                    <div class=\"w-100 d-flex justify-content-start\"></div>\n                                                </div>\n                                                <div class=\"card-text w-100 d-flex flex-column justify-content-center\">\n                                                    <div class=\"cursos-title text-left\">Lourdes Flores Nano</div>\n                                                    <p class=\"small-text subtitle text-left\">Abogada y política peruana</p>\n                                                    <p class=\"small-text text-left\">\n                                                        m is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"d-flex w-50 px-2 py-4\">\n                                            <div class=\"d-flex justify-content-start pt-0 text-center\">\n                                                <div class=\"image w-100 pt-0 d-flex flex-column justify-content-center\" style=\"background-image: url(../../../assets/css/images/docentes/2.png);\">\n                                                    <div class=\"w-100 d-flex justify-content-start\"></div>\n                                                </div>\n                                                <div class=\"card-text w-100 d-flex flex-column justify-content-center\">\n                                                    <div class=\"cursos-title text-left\">Esteban Chong</div>\n                                                    <p class=\"small-text subtitle text-left\">Contador y Exsocio Principal de Pwc Perú </p>\n                                                    <p class=\"small-text text-left\">\n                                                        m is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text everg\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div role=\"listitem\" class=\"carousel-item active\" aria-current=\"true\" aria-posinset=\"2\" aria-setsize=\"2\" style=\"height: 50vh;\" id=\"__BVID__30\" aria-hidden=\"false\">\n                            <!---->\n                            <div class=\"carousel-caption\">\n                                <!---->\n                                <!---->\n                                <div class=\"w-100 h-100 px-0\">\n                                    <div class=\"px-0 w-100 h-100 m-0 px-4 d-flex justify-content-center\">\n                                        <div class=\"d-flex w-50 px-2 py-4\">\n                                            <div class=\"d-flex justify-content-start pt-0 text-center\">\n                                                <div class=\"image w-100 pt-0 d-flex flex-column justify-content-center\" style=\"background-image: url(../../../assets/css/images/docentes/3.png);\">\n                                                    <div class=\"w-100 d-flex justify-content-start\"></div>\n                                                </div>\n                                                <div class=\"card-text w-100 d-flex flex-column justify-content-center\">\n                                                    <div class=\"cursos-title text-left\">María Tereza Quiñonez</div>\n                                                    <p class=\"small-text subtitle text-left\">Abogada y socia del estudio Rodrigo,Elias &amp; Medrano Abogados</p>\n                                                    <p class=\"small-text text-left\">\n                                                        m is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"d-flex w-50 px-2 py-4\">\n                                            <div class=\"d-flex justify-content-start pt-0 text-center\">\n                                                <div class=\"image w-100 pt-0 d-flex flex-column justify-content-center\" style=\"background-image: url(../../../assets/css/images/docentes/5.png);\">\n                                                    <div class=\"w-100 d-flex justify-content-start\"></div>\n                                                </div>\n                                                <div class=\"card-text w-100 d-flex flex-column justify-content-center\">\n                                                    <div class=\"cursos-title text-left\">Samuel Abad</div>\n                                                    <p class=\"small-text subtitle text-left\">Abogado y Socio del estudio Echecopar</p>\n                                                    <p class=\"small-text text-left\">\n                                                        m is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scra\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-prev\"><span aria-hidden=\"true\" class=\"carousel-control-prev-icon\"></span><span class=\"sr-only\">Previous Slide</span></a><a href=\"#\" role=\"button\"\n                        aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-next\"><span aria-hidden=\"true\" class=\"carousel-control-next-icon\"></span><span class=\"sr-only\">Next Slide</span></a>\n                    <ol id=\"carousel1___BV_indicators_\" aria-hidden=\"true\" aria-label=\"Select a slide to display\" aria-owns=\"carousel1___BV_inner_\" class=\"carousel-indicators\" style=\"display: none;\">\n                        <li role=\"button\" id=\"carousel1___BV_indicator_1_\" tabindex=\"-1\" aria-current=\"false\" aria-label=\"Goto Slide 1\" aria-controls=\"carousel1___BV_inner_\" class=\"\" aria-describedby=\"__BVID__29\"></li>\n                        <li role=\"button\" id=\"carousel1___BV_indicator_2_\" tabindex=\"-1\" aria-current=\"true\" aria-label=\"Goto Slide 2\" aria-controls=\"carousel1___BV_inner_\" class=\"active\" aria-describedby=\"__BVID__30\"></li>\n                    </ol>\n                </div>\n            </div>\n        </div>\n\n    </div>\n    <!---->\n    <!---->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\n\nimport { IdemCursosService } from '../../../../services/api/idemCursos.service';\nimport { IdemCursos } from '../../../../services/model/idemCursos';\nimport { RegisterComponent } from '../../register/register.component';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-online',\n  templateUrl: './online.component.html',\n  styleUrls: ['./online.component.css']\n})\nexport class OnlineComponent implements OnInit {\n  idemcursoList:IdemCursos[]=[];\n\n  constructor(protected idemCursosService:IdemCursosService, config: NgbCarouselConfig, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.cargarCursos();\n  }\n\n  cargarCursos(){\n    this.idemCursosService.idemCursosGet().subscribe(data=>{\n      this.idemcursoList=data;\n    })\n  }\n\n  index=0; \n  getCursos(cantidad){\n    console.log('no entra');\n    let arrayselect;\n    if(cantidad > this.idemcursoList.length){\n      cantidad=this.idemcursoList.length;\n    }\n    if(this.index>=this.idemcursoList.length){\n      this.index=0;\n    }\n    for (; this.index < cantidad; this.index++) {\n      arrayselect.push(this.idemcursoList[this.index]);\n      \n    }\n    console.log(arrayselect);\n    return arrayselect;\n\n  }\n\n  openRegistro() {\n    const dialogRef = this.dialog.open(RegisterComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n}\n","<div id=\"container app\" class=\"nuxt\">\n    <div>\n        <div class=\"HeroOnlineCourses p-0 container-fluid\" style=\"position: relative;\">\n            <div role=\"region\" id=\"carousel1\" aria-busy=\"false\" class=\"carousel p-0 slide\" style=\"text-shadow: rgb(51, 51, 51) 1px 1px 2px;\">\n                <div id=\"carousel1___BV_inner_\" role=\"list\" class=\"carousel-inner\">\n                    <div role=\"listitem\" class=\"carousel-item active\" aria-current=\"true\" aria-posinset=\"1\" aria-setsize=\"1\" id=\"__BVID__18\" style=\"height: 100vh;\">\n                        <!---->\n                        <div class=\"carousel-caption\">\n                            <!---->\n                            <!---->\n                            <div class=\"row h-100\">\n                                <div class=\"screen1 column h-100 col-12 col-md-8 p-0\" style=\"background-image: url(../../../assets/css/images/CursosOnline/Fotos-IDEM--13.png);\">\n                                    <div class=\"slideText d-flex flex-column justify-content-center h-100 w-100 px-0\">\n                                        <h3 class=\"hero-title\"> Capacitate con los mejores profesores, sin horarios, sin límites. </h3>\n                                    </div>\n                                </div>\n                                <div class=\"screen2 column h-100 col-0 col-md-4 p-0\">\n                                    <div class=\"LogoBlanco\"></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-prev\"><span aria-hidden=\"true\" class=\"carousel-control-prev-icon\"></span><span class=\"sr-only\">Previous Slide</span></a><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\"\n                    class=\"carousel-control-next\"><span aria-hidden=\"true\" class=\"carousel-control-next-icon\"></span><span class=\"sr-only\">Next Slide</span></a>\n                <ol id=\"carousel1___BV_indicators_\" aria-hidden=\"true\" aria-label=\"Select a slide to display\" aria-owns=\"carousel1___BV_inner_\" class=\"carousel-indicators\" style=\"display: none;\">\n                    <li role=\"button\" id=\"carousel1___BV_indicator_1_\" tabindex=\"-1\" aria-current=\"true\" aria-label=\"Goto Slide 1\" aria-controls=\"carousel1___BV_inner_\" class=\"active\"></li>\n                </ol>\n            </div>\n        </div>\n        <div class=\"cursosOnlineCODesktop container-fluid d-flex flex-column justify-content-center inf px-2 px-lg-5\" style=\"height: 100vh;\">\n            <div class=\"d-flex justify-content-center py-0\">\n                <div class=\"text_container\">\n                    <div class=\"title-text d-flex justify-content-between\">\n                        <div class=\"w-100 d-flex justify-content-center\" style=\"align-items: center;\"><button class=\"btn btn-outline-danger agregar-btn-selected\">Todos los cursos</button> <button class=\"btn btn-outline-danger agregar-btn\">Cursos de Negocios</button> <button class=\"btn btn-outline-danger agregar-btn\">Cursos de Tecnológia</button></div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- PRUEBS-->\n\n\n\n            <div class=\"d-flex w-100 justify-content-center\">\n                <div role=\"region\" id=\"carousel1\" aria-busy=\"false\" class=\"carousel carousel slide\">\n                    <div id=\"carousel1___BV_inner_\" role=\"list\" class=\"carousel-inner\">\n                        <div role=\"listitem\" class=\"carousel-item active\" aria-current=\"true\" aria-posinset=\"1\" aria-setsize=\"1\" style=\"height: 80vh;\" id=\"__BVID__21\">\n\n                            <div class=\"carousel-caption\">\n\n                                <div class=\"container d-flex justify-content-center w-100 h-100 px-0\">\n                                    <div class=\"card-container px-0 w-100 h-100 m-0\">\n                                        <div class=\"card-wrapper d-flex justify-content-center col-6 px-2 py-2\">\n                                            <div class=\"card\">\n                                                <div class=\"image\">\n                                                    <div class=\"subtitle px-4 py-1  d-flex justify-content-center\" style=\"position: absolute; left: 0px; bottom: 0px;\">\n                                                        NEGOCIOS\n                                                    </div>\n                                                </div>\n                                                <div class=\"card-text\">\n                                                    <div class=\"title-wrapper d-flex justify-content-start\"><span class=\"text-left cursos-title px-0\">Curso de derecho Concursal</span></div>\n                                                    <div class=\"text-wrapper\">\n                                                        <p class=\"small-text text-left pt-0 pl-lg-1\">\n                                                            El curso de Derecho Concursal abordará en 6 módulos los siguientes temas: una aproximación al Derecho Concursal, el inicio del Procedimiento Concursal Ordinario, reconocimiento y verficación de créditos, junta de acreedores, administración del régimen\n                                                            sancionador, destino del deudor y los procedimientos pre-concursales y distressed M&amp;A.\n                                                        </p>\n                                                        <a href=\"/curso/7\">\n                                                            <div class=\"flecha\"></div>\n                                                        </a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"card-wrapper d-flex justify-content-center col-6 px-2 py-2\">\n                                            <div class=\"card\">\n                                                <div class=\"image\">\n                                                    <div class=\"subtitle px-4 py-1  d-flex justify-content-center\" style=\"position: absolute; left: 0px; bottom: 0px;\">\n                                                        NEGOCIOS\n                                                    </div>\n                                                </div>\n                                                <div class=\"card-text\">\n                                                    <div class=\"title-wrapper d-flex justify-content-start\"><span class=\"text-left cursos-title px-0\">Curso de derecho Concursal</span></div>\n                                                    <div class=\"text-wrapper\">\n                                                        <p class=\"small-text text-left pt-0 pl-lg-1\">\n                                                            El curso de Derecho Concursal abordará en 6 módulos los siguientes temas: una aproximación al Derecho Concursal, el inicio del Procedimiento Concursal Ordinario, reconocimiento y verficación de créditos, junta de acreedores, administración del régimen\n                                                            sancionador, destino del deudor y los procedimientos pre-concursales y distressed M&amp;A.\n                                                        </p>\n                                                        <a href=\"/curso/7\">\n                                                            <div class=\"flecha\"></div>\n                                                        </a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-prev\"><span aria-hidden=\"true\" class=\"carousel-control-prev-icon\"></span><span class=\"sr-only\">Previous Slide</span></a><a href=\"#\" role=\"button\"\n                        aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-next\"><span aria-hidden=\"true\" class=\"carousel-control-next-icon\"></span><span class=\"sr-only\">Next Slide</span></a>\n                    <ol id=\"carousel1___BV_indicators_\" aria-hidden=\"true\" aria-label=\"Select a slide to display\" aria-owns=\"carousel1___BV_inner_\" class=\"carousel-indicators\" style=\"display: none;\">\n                        <li role=\"button\" id=\"carousel1___BV_indicator_1_\" tabindex=\"-1\" aria-current=\"true\" aria-label=\"Goto Slide 1\" aria-controls=\"carousel1___BV_inner_\" class=\"active\"></li>\n                    </ol>\n                </div>\n            </div>\n\n\n        </div>\n        <div class=\"nuestros_profesoresDesktop container-fluid d-flex flex-column justify-content-center pt-4 pb-5\" id=\"ourTeachers\">\n            <div class=\"carousel-wrapper w-100 d-flex flex-column justify-content-center px-0 h-100\">\n                <div role=\"region\" id=\"carousel1\" aria-busy=\"false\" class=\"carousel carousel slide\">\n                    <div id=\"carousel1___BV_inner_\" role=\"list\" class=\"carousel-inner\">\n                        <div role=\"listitem\" class=\"carousel-item firstRowSlide active\" aria-current=\"true\" aria-posinset=\"1\" aria-setsize=\"2\" id=\"__BVID__24\" aria-hidden=\"false\">\n                            <!---->\n                            <div class=\"carousel-caption\">\n                                <!---->\n                                <!---->\n                                <div class=\"firstRow\">\n                                    <div class=\"big-card d-flex h-100\">\n                                        <div class=\"ci1 w-50\">\n                                            <div class=\"w-100 d-flex justify-content-start\"></div>\n                                        </div>\n                                        <div class=\"card-text w-50 d-flex flex-column justify-content-center\">\n                                            <div class=\"section-title\">Nuestros Docentes</div>\n                                            <p class=\"normal-text\">\n                                                m is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div role=\"listitem\" class=\"carousel-item firstRowSlide\" aria-current=\"false\" aria-posinset=\"2\" aria-setsize=\"2\" id=\"__BVID__25\" aria-hidden=\"true\">\n                            <!---->\n                            <div class=\"carousel-caption\">\n                                <!---->\n                                <!---->\n                                <div class=\"firstRow\">\n                                    <div class=\"big-card d-flex h-100\">\n                                        <div class=\"ci1 w-50\">\n                                            <div class=\"w-100 d-flex justify-content-start\"></div>\n                                        </div>\n                                        <div class=\"card-text w-50 d-flex flex-column justify-content-center\"><span class=\"section-title\">Nuestros Docentes</span>\n                                            <p class=\"normal-text\">\n                                                m is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-prev\"><span aria-hidden=\"true\" class=\"carousel-control-prev-icon\"></span><span class=\"sr-only\">Previous Slide</span></a><a href=\"#\" role=\"button\"\n                        aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-next\"><span aria-hidden=\"true\" class=\"carousel-control-next-icon\"></span><span class=\"sr-only\">Next Slide</span></a>\n                    <ol id=\"carousel1___BV_indicators_\" aria-hidden=\"true\" aria-label=\"Select a slide to display\" aria-owns=\"carousel1___BV_inner_\" class=\"carousel-indicators\" style=\"display: none;\">\n                        <li role=\"button\" id=\"carousel1___BV_indicator_1_\" tabindex=\"-1\" aria-current=\"true\" aria-label=\"Goto Slide 1\" aria-controls=\"carousel1___BV_inner_\" class=\"active\" aria-describedby=\"__BVID__24\"></li>\n                        <li role=\"button\" id=\"carousel1___BV_indicator_2_\" tabindex=\"-1\" aria-current=\"false\" aria-label=\"Goto Slide 2\" aria-controls=\"carousel1___BV_inner_\" class=\"\" aria-describedby=\"__BVID__25\"></li>\n                    </ol>\n                </div>\n            </div>\n            <div class=\"docents-wrapper w-100 d-flex flex-column justify-content-center px-0 h-100\">\n                <div class=\"dualDocentWrapper px-0 w-75  m-0 py-2 d-flex\">\n                    <div class=\"card-wrapper d-flex col-6 px-1 pr-2  py-0 d-flex\">\n                        <div class=\"carD\">\n                            <div class=\"ci2 w-50 h-100\"></div>\n                            <div class=\"card-text w-50 h-100\"><span class=\"cursos-title text-left \">Lourdes Flores Nano</span> <span class=\"small-text subtitle\">Abogada y política peruana</span>\n                                <p class=\"small-text\">\n                                    m is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-wrapper d-flex col-6 px-1 pl-2 py-0\">\n                        <div class=\"carD d-flex justify-content-start pt-0 text-center\">\n                            <div class=\"ci3 w-50 h-100\"></div>\n                            <div class=\"card-text w-50 h-100\"><span class=\"cursos-title text-left\">Esteban Chong</span> <span class=\"small-text subtitle\">Contador y Exsocio Principal de Pwc Perú </span>\n                                <p class=\"small-text\">\n                                    m is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\" dualDocentWrapper px-0 w-75 p-0 m-0 m-0 py-2 d-flex\">\n                    <div class=\"card-wrapper d-flex col-6 px-1 pr-2 py-0\">\n                        <div class=\"carD d-flex justify-content-start pt-0 text-center\">\n                            <div class=\"card-text w-50 h-100\"><span class=\"cursos-title text-left\">María Tereza Quiñonez</span> <span class=\"small-text subtitle\">Abogada y socia del estudio Rodrigo,Elias &amp; Medrano Abogados</span>\n                                <p class=\"small-text\">\n                                    m is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever\n                                </p>\n                            </div>\n                            <div class=\"ci4 w-50 h-100\"></div>\n                        </div>\n                    </div>\n                    <div class=\"card-wrapper d-flex col-6 px-1 pl-2 py-0\">\n                        <div class=\" carD d-flex justify-content-start pt-0 text-center\">\n                            <div class=\"card-text w-50 h-100\"><span class=\"cursos-title text-left\">Samuel Abad</span> <span class=\"small-text subtitle\">Abogado y Socio del estudio Echecopar</span>\n                                <p class=\"small-text\">\n                                    m is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scra\n                                </p>\n                            </div>\n                            <div class=\"ci5 w-50 h-100\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"beneficiosOnlineCourses container-fluid w-100\">\n\n            <div class=\"row\">\n\n                <div class=\"columna1 column col-4 col-lg-4 d-flex justify-content-end\">\n                    <div class=\"text-wrapper h-100 d-flex flex-column justify-content-center p-lg-4\">\n                        <h4 class=\"section-title title\">Beneficios</h4> <span class=\"p normal-text\">Cada curso online o presencial esta avaládo oficialmente por Idem, además formarás parte de una comunidad donde el dinero obtenido estará 100% destinados a proyectos educativos para las personas con menos recursos.</span></div>\n                </div>\n\n                <div class=\"columna2 column col-8 col-lg-8\">\n                    <div class=\"row icons-wrapper d-flex justify-content-center flex-column h-100 col-10 col-lg-8\">\n                        <div class=\"w-100 d-flex\">\n                            <div class=\"column col-3 d-flex flex-column justify-content-start\">\n                                <div class=\"d-flex justify-content-center pb-2 p-lg-2\">\n                                    <div class=\"icon1\" style=\"background-image: url(../../../assets/css/images/beneficios/1.png);\"></div>\n                                </div>\n                                <p class=\"icon-text text-center small-text\">Aprenderas a tu propio ritmo</p>\n                            </div>\n                            <div class=\"column col-3 d-flex flex-column justify-content-start\">\n                                <div class=\"d-flex justify-content-center pb-2 p-lg-2\">\n                                    <div class=\"icon1\" style=\"background-image: url(../../../assets/css/images/beneficios/2.png);\"></div>\n                                </div>\n                                <p class=\"icon-text text-center small-text\">Los mejores profecionales te enseñarán</p>\n                            </div>\n                            <div class=\"column col-3 d-flex flex-column justify-content-start\">\n                                <div class=\"d-flex justify-content-center pb-2 p-lg-2\">\n                                    <div class=\"icon1\" style=\"background-image: url(../../../assets/css/images/beneficios/3.png);\"></div>\n                                </div>\n                                <p class=\"icon-text text-center small-text\">Obtendrás un certificado oficial.</p>\n                            </div>\n                            <div class=\"column col-3 d-flex flex-column justify-content-start\">\n                                <div class=\"d-flex justify-content-center pb-2 p-lg-2\">\n                                    <div class=\"icon1\" style=\"background-image: url(../../../assets/css/images/beneficios/4.png);\"></div>\n                                </div>\n                                <p class=\"icon-text text-center small-text\">Formarás parte de una comunidad que genera el cambio.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid como_funciona p-0\" style=\"height: 100vh; width: 100%;\">\n            <div class=\" row h-100 w-100 m-0\">\n                <div class=\"column dos h-100 col-3 p-0\">\n                    <div class=\"screen2 h-100 b-100\">\n                        <div class=\"white-container  d-flex flex-column justify-content-center px-4\">\n                            <p class=\"section-title\">¿Cómo funciona?</p>\n                            <p class=\"normal-text\">\n                                Sigue estos tres sencillos pasos para hacer tu donación.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"column uno h-100 col-9 p-0\" style=\"padding-right: 250px;\">\n                    <div class=\"container p-5 screen1 d-flex flex-column h-100 p-0 d-flex justify-content-end\">\n                        <div class=\"w-100 h-100 d-flex justify-content-center px-5 ml-5\">\n                            <div id=\"style-2\" class=\"overflow d-flex flex-column justify-content-end h-100 px-0\">\n                                <div class=\" h-75\" style=\"display: flex;\">\n                                    <div class=\"card d-flex justify-content-center w-100 flex-row\" style=\"background-color: rgb(220, 235, 236); border: rgb(220, 235, 236); min-width: 50%; height: 100%;\">\n                                        <div class=\"arrow\"></div>\n                                        <div class=\"w-100 d-flex  justify-content-center\">\n                                            <div class=\"d-flex justify-content-center h-100 flex-column\">\n                                                <div class=\"w-100  d-flex justify-content-center p-4\">\n                                                    <div class=\"image w-100\"></div>\n                                                </div>\n                                                <div class=\"text-container  px-2 d-flex w-100 py-4\">\n                                                    <div class=\"normal-text\">1er paso</div>\n                                                    <div class=\"small-text\">Encuentra más información sobre el trabajo de Idem en el siguiente <a href=\"/nosotros\">link</a></div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"card d-flex justify-content-center w-100 flex-row\" style=\"background-color: rgb(220, 235, 236); border: rgb(220, 235, 236); min-width: 50%; height: 100%;\">\n                                        <div class=\"arrow\"></div>\n                                        <div class=\"w-100 d-flex  justify-content-center\">\n                                            <div class=\"d-flex justify-content-center h-100 flex-column\">\n                                                <div class=\"w-100  d-flex justify-content-center p-4\">\n                                                    <div class=\"image2 w-100\"></div>\n                                                </div>\n                                                <div class=\"text-container  px-2 d-flex w-100 py-4\">\n                                                    <div class=\"normal-text\">2do paso</div>\n                                                    <div class=\"small-text\">Inscríbete en el siguiente <a href=\"/pasarela\">link</a> con tu tarjeta de crédito o débito para efectuar tu donación.\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"card d-flex justify-content-center w-100 flex-row\" style=\"background-color: rgb(220, 235, 236); border: rgb(220, 235, 236); min-width: 50%; height: 100%;\">\n                                        <div class=\"w-100 d-flex  justify-content-center\">\n                                            <div class=\"d-flex justify-content-center h-100 flex-column\">\n                                                <div class=\"w-100  d-flex justify-content-center p-4\">\n                                                    <div class=\"image3 w-100\"></div>\n                                                </div>\n                                                <div class=\"text-container  px-2 d-flex w-100 py-4\">\n                                                    <div class=\"normal-text\">3er paso</div>\n                                                    <div class=\"small-text\">Recibe un correo de confirmación de tu donación. Si Tienes alguna duda o consulta sobre el proceso de donación escríbenos a: <a href=\"mailto:donaciones@idem.org.pe\">donaciones@idem.org.pe</a></div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"indicator-container d-flex w-100 px-5 py-3 justify-content-center\"><label class=\"switch\" style=\"max-width: 625px;\"><input type=\"checkbox\"> <span class=\"slider round\"></span></label></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid online_testimonials p-0\">\n            <link href=\"https://fonts.googleapis.com/css?family=Merriweather\" rel=\"stylesheet\">\n            <div role=\"region\" id=\"carousel1\" aria-busy=\"false\" class=\"carousel p-0 m-0 slide\" style=\"text-shadow: rgb(51, 51, 51) 1px 1px 2px;\">\n                <div id=\"carousel1___BV_inner_\" role=\"list\" class=\"carousel-inner\">\n                    <div role=\"listitem\" class=\"carousel-item active\" aria-current=\"true\" aria-posinset=\"1\" aria-setsize=\"2\" style=\"height: 100vh;\" id=\"__BVID__30\" aria-hidden=\"false\">\n                        <!---->\n                        <div class=\"carousel-caption\">\n                            <!---->\n                            <!---->\n                            <div class=\"d-flex m-0 p-0 h-100 w-100\">\n                                <div class=\"column  h-100 col-3 p-0\">\n                                    <div class=\"screen1 h-100 b-100\">\n                                        <div class=\"white_container\">\n                                            <h4 class=\"section-title\">Testimonios</h4> <span class=\"normal-text\">Hemos capacitado a miles de profesionales.</span></div>\n                                    </div>\n                                </div>\n                                <div class=\"column uno h-100 col-9 p-0\">\n                                    <div class=\"container screen2 d-flex justify-content-center h-100 d-flex justify-content-start\">\n                                        <div class=\"d-flex justify-content-center flex-column\" style=\"z-index: 2;\">\n                                            <div class=\"text-container\">\n                                                <div class=\"hero-title comillas\">“</div>\n                                                <h3 class=\"hero-title\">Pude culminar mis estudios sin tener que viajar”</h3>\n                                                <p class=\"normal-text nombre pt-2\">-Jorge Castro</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div role=\"listitem\" class=\"carousel-item\" aria-current=\"false\" aria-posinset=\"2\" aria-setsize=\"2\" style=\"height: 100vh;\" id=\"__BVID__31\" aria-hidden=\"true\">\n                        <!---->\n                        <div class=\"carousel-caption\">\n                            <!---->\n                            <!---->\n                            <div class=\"d-flex m-0 p-0 h-100 w-100\">\n                                <div class=\"column  h-100 col-3 p-0\">\n                                    <div class=\"screen1 h-100 b-100\">\n                                        <div class=\"white_container\">\n                                            <h4 class=\"section-title\">Testimonios</h4> <span class=\"normal-text\">Hemos capacitado a miles de profesionales.</span></div>\n                                    </div>\n                                </div>\n                                <div class=\"column uno h-100 col-9 p-0\">\n                                    <div class=\"container screen2 d-flex justify-content-center h-100 d-flex justify-content-start\">\n                                        <div class=\"d-flex justify-content-center flex-column\" style=\"z-index: 2;\">\n                                            <div class=\"text-container\">\n                                                <div class=\"hero-title comillas\">“</div>\n                                                <h3 class=\"hero-title\">Me alegró saber que al capacitarme, personas con menores recursos obtendrían beneficios</h3>\n                                                <p class=\"normal-text nombre pt-2\">-Christian Paredes</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-prev\"><span aria-hidden=\"true\" class=\"carousel-control-prev-icon\"></span><span class=\"sr-only\">Previous Slide</span></a><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\"\n                    class=\"carousel-control-next\"><span aria-hidden=\"true\" class=\"carousel-control-next-icon\"></span><span class=\"sr-only\">Next Slide</span></a>\n                <ol id=\"carousel1___BV_indicators_\" aria-hidden=\"true\" aria-label=\"Select a slide to display\" aria-owns=\"carousel1___BV_inner_\" class=\"carousel-indicators\" style=\"display: none;\">\n                    <li role=\"button\" id=\"carousel1___BV_indicator_1_\" tabindex=\"-1\" aria-current=\"true\" aria-label=\"Goto Slide 1\" aria-controls=\"carousel1___BV_inner_\" class=\"active\" aria-describedby=\"__BVID__30\"></li>\n                    <li role=\"button\" id=\"carousel1___BV_indicator_2_\" tabindex=\"-1\" aria-current=\"false\" aria-label=\"Goto Slide 2\" aria-controls=\"carousel1___BV_inner_\" class=\"\" aria-describedby=\"__BVID__31\"></li>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <!---->\n    <!---->\n</div>","\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { IdemCursosService } from '../../../../services/api/idemCursos.service';\nimport { IdemRelCursosModulosService } from '../../../../services/api/idemRelCursosModulos.service';\n\nimport { IdemCursos } from '../../../../services/model/idemCursos';\n\nimport {MatDialog} from '@angular/material/dialog';\n\nimport { RegisterComponent } from '../../register/register.component';\n\n\n@Component({\n  selector: 'app-presencial',\n  templateUrl: './presencial.component.html',\n  styleUrls: ['./presencial.component.css']\n})\nexport class PresencialComponent implements OnInit {\n    \n  constructor(private route: ActivatedRoute,\n    protected ademRelCursosModulosService:IdemRelCursosModulosService,\n    public dialog: MatDialog,\n    protected idemCursosService:IdemCursosService) { }\n\n    \n\n  idcurso;\n  curso:any;\n  profesores:any[]=[];\n  modulos:any;\n  mes:any[]=['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\n  'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\n\n  precios:any=[];\n  items:any=[];\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.idcurso= params.get('cursoId');\n     this.cargarCurso();\n    });\n  }\n\n\n  cargarCurso(){\n    this.idemCursosService.idemCursosGet('eq.'+this.idcurso,null,null,null,null,null,null,null,null,null,null,null,null,'*,idem_curso_items(idtipoitem,nombre,imagen),idem_modulos(*,idem_docentes(titulo_profesional,descripcion,idem_personas(dni,nombres,apellido_pa,apellido_ma,foto)))').subscribe(data =>{\n      this.curso=data[0];\n      this.modulos= this.curso.idem_modulos;\n      this.cargarProfesores();\n      this.cargarPrecios();\n    })\n  }\n\n  cargarProfesores(){\n\n      for (const idem_docentes of this.modulos) {\n        this.profesores.push(idem_docentes.idem_docentes);\n        console.log(idem_docentes);\n      }\n    \n  }\n\n  cargarPrecios(){\n    for (let index = 0; index < this.curso.idem_curso_items.length || index<3; index++) {\n      if(this.curso.idem_curso_items[index].idtipoitem=='P'){\n        this.precios.push(this.curso.idem_curso_items[index]);\n      }else{\n        this.items.push(this.curso.idem_curso_items[index]);\n        \n      }\n      \n      \n    }\n  }\n\n  mesdeinicio(){\n    let fecha = new Date(this.curso.fechahora_inicio );\n    return this.mes[fecha.getMonth()];\n  }\n\n\n\n  openRegistro() {\n    const dialogRef = this.dialog.open(RegisterComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n  \n\n/*** ESTRUCTURA\n   *  {\n        \"idcurso\": 10,\n        \"nombre\": \"Curso de derecho Concursal\",\n        \"descripcion\": \"El curso de Derecho Concursal abordará en 6 módulos los siguientes temas: una aproximación al Derecho Concursal, el inicio del Procedimiento Concursal Ordinario, reconocimiento y verficación de créditos, junta de acreedores, administración del régimen sancionador, destino del deudor y los procedimientos pre-concursales y distressed M&A.\",\n        \"descripcion2\": null,\n        \"imagen\": \"http://200.60.62.54:911/ConnectorAppLab.svc?singleWsdl\",\n        \"costo\": 1800,\n        \"moneda\": \"S\",\n        \"idtipocurso\": 2,\n        \"fechahora_inicio\": \"2020-05-04T12:00:00\",\n        \"fechahora_fin\": \"2020-05-26T12:00:00\",\n        \"lugar\": \"av los angeles de cayma 3.1\",\n        \"fecharegistro\": \"2020-05-22T19:13:30.500198\",\n        \"idcategoria\": 1,\n        \"idem_curso_items\": [\n            {\n              \"idtipoitem\":'P',\n                \"nombre\": \"Auditorio Felipe perez Av  mariscacal caceres 238 cercado\",\n                \"imagen\": \"https://image.flaticon.com/icons/png/512/2991/2991231.png\"\n            }\n        ],\n        \"idem_modulos\": [\n            {\n                \"idmodulo\": 1,\n                \"nombre\": \"modulo 1\",\n                \"dni_profesor\": \"44383912\",\n                \"imagen\": null,\n                \"video\": null,\n                \"descripcion\": \"Lleve a cabo el tiempo de convenios\",\n                \"idestado\": 1,\n                \"fecharegistro\": \"2020-05-27T23:40:45.900678\",\n                \"idem_docentes\": {\n                  titulo_profesional:''\n                  descripcion:''\n                    \"idem_personas\": {\n                        \"dni\": \"44383912\",\n                        \"nombres\": \"Patrick\",\n                        \"apellido_pa\": \"Rodriguez\",\n                        \"apellido_ma\": \"Marquez\",\n                        \"foto\": \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRO7cpS20HP6Qc9to9eu2BBMnORjlQ959rJHQQ2nAzcI39qsaGP&usqp=CAU\"\n                    }\n                }\n            },\n   * \n   * \n   * \n   * ***/\n\n}\n","<div id=\"container app\" class=\"nuxt\">\n    <div>\n\n\n\n        <div class=\"container-fluid cursos_presenciales_s_hero p-0\" style=\"height: 100vh; width: 100%;\">\n            <ngb-carousel id=\"carousel1\" :interval=\"4000\" v-model=\"slide\" class=\"p-0 w-100 micarru\" style=\"height: 100vh; text-shadow: 1px 1px 2px #333;\" controls [showNavigationArrows]=false [showNavigationIndicators]=false>\n                <!-- Text slides with image -->\n                <ng-template ngbSlide style=\"height:100vh;\">\n\n                    <div style=\"height: 100vh;\">\n                        <div class=\"col uno h-100 col-8 p-0\" style=\"height: 100vh;\">\n                            <div class=\"container screen1 h-100 d-flex justify-content-end\">\n                                <div class=\"col col-6 h-100 px-3 px-lg-5\">\n                                    <div class=\"formulario-general h-100 w-100 d-flex flex-column justify-content-center\">\n                                        <p class=\"hero-title\">{{curso.nombre}}</p>\n                                        <div class=\"form d-flex justify-content-end pr-5\" style=\"z-index:800;max-width:394px;\">\n                                            <div class=\"btn-wrapper px-2\">\n                                                <a href=\"https://docs.google.com/forms/d/1w71DPkSLr05qxnhs68CVak7G-WHCItLhaATFeD0tzKE/prefill\" target=\"_blank\"> <button class=\"btn btn-danger comprar-btn\"> comprar ahora </button></a>\n                                            </div>\n                                        </div>\n                                        <div class=\"d-flex justify-content-end pt-4 pr-5\" style=\"z-index:800;max-width:394px;\">\n                                            <div>\n\n                                                <label class=\" form radio m-0\" *ngFor=\"let precio of precios\">\n                                                    <div class=\"d-flex\">\n                                                        <p class=\"radio\">{{precio.nombre}}</p>\n                                                    </div>\n     \n                                                </label>\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col dos h-100 col-4 p-0\">\n                            <div class=\"screen2 h-100 b-100\">\n                                <span class=\"LogoBlanco\"></span>\n                            </div>\n                        </div>\n                    </div>\n                </ng-template>\n            </ngb-carousel>\n            <!--hero-->\n        </div>\n\n\n        <!--Informacion-->\n        <div class=\"container-fluid informationDesktop p-0\" style=\"height:100vh; width:100%;\">\n            <div class=\" row h-100 w-100 m-0\">\n                <div class=\"column dos h-100 col-8 col-lg-7 p-0\">\n                    <div class=\"screen2 h-100 b-100\">\n                        <div class=\"contenido d-flex flex-column justify-content-center h-100 p-5\">\n                            <div class=\"contenidos h-75 p-5 pl-0 pr-lg-5\">\n                                <div class=\"title\" style=\"\">\n                                    <div style=\"height:50px;\">\n                                        <div class=\"section-title\">información</div>\n                                    </div>\n                                </div>\n                                <div class=\"normal-text\" style=\"text-align: justify;\">\n                                    {{curso.descripcion}}\n                                </div>\n\n                            </div>\n                        </div>\n                        <div class=\"white-container  d-flex flex-column justify-content-around px-3\">\n                            <div class=\"container-blue py-2 px-4 d-flex flex-column justify-content-center\">\n                                <div class=\"w-100 d-flex justify-content-center\">\n                                    <div class=\"icon_1\"></div>\n                                </div>\n                                <div class=\"contenido py-2\">\n                                    <p class=\"normal-text m-0\"> Aula Magna de la univesidad San augustin</p>\n                                </div>\n                            </div>\n                            <div class=\"container-blue py-4  px-4 d-flex flex-column justify-content-center\">\n                                <div class=\"w-100  d-flex justify-content-center\">\n                                    <div class=\"icon_2\"></div>\n                                </div>\n                                <div class=\"contenido py-2\">\n                                    <p class=\"normal-text m-0\">28 set 6:00pm-9:30pm</p>\n                                    <p class=\"normal-text m-0\"> 29 set 4:00pm-8:00pm</p>\n                                </div>\n                            </div>\n                            <div class=\"container-blue p-4 d-flex flex-column justify-content-center\">\n                                <div class=\"w-100 d-flex justify-content-center\">\n                                    <div class=\"icon_3\"></div>\n                                </div>\n                                <div class=\"contenido py-2\">\n                                    <p class=\"normal-text m-0\"> Estudiante S/50.00</p>\n                                    <p class=\"normal-text m-0\"> Profecional S/60.00</p>\n                                    <p class=\"normal-text m-0\"> Corporativo S/200.00</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\" column uno h-100 col-4 col-lg-5 p-0\">\n                    <div class=\"container screen1 h-100 d-flex justify-content-start\">\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n\n        <!-- Program-->\n\n        <div class=\"container-fluid programa p-6 p-md-0\" style=\"height: 100vh; width: 100%;\">\n            <ngb-carousel class=\"carousel-caption\" style=\"height: 100vh;\" id=\"carousel1\" :interval=\"4000\" v-model=\"slide\" class=\"p-0 m-0\" style=\"text-shadow: 1px 1px 2px #333;\" controls img-width=\"1024\" img-height=\"480\" [showNavigationArrows]=\"false\" [showNavigationIndicators]=\"false\">\n                <!-- Text slides with image -->\n                <ng-template ngbSlide style=\"height: 100vh;\">\n                    <div style=\"background-color: #270172; height: 100vh;\" class=\"row h-100\">\n                        <div class=\"column dos h-100 col-4 p-0\" style=\"height: 100vh;\">\n                            <div class=\"screen2\" style=\"height: 100vh;\">\n                                <div class=\"text d-flex flex-column justify-content-start\">\n                                    <div class=\"hero-title\">\n                                        Programa\n                                    </div>\n                                    <div class=\"normal-text\">\n                                        {{curso.descripcion2}}\n                                    </div>\n                                </div>\n                                <div class=\"fecha\">\n                                    <div class=\"number\" style=\"text-align: center;\">{{curso.fechahora_inicio | date: 'dd'}}</div>\n                                    <div class=\"month\" style=\"text-align: center;\">{{mesdeinicio()}}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\" column uno h-100 col-8 p-0\">\n                            <div class=\"container screen1 n1 h-100 d-flex justify-content-start\">\n                                <!-- <div class=\"text col-9 px-5 py-5 ml-5\" style=\"z-index:2;\">\n               Convertirnos en el mejor instituto de educaciòn superior del Perú.\n              </div> -->\n                            </div>\n                        </div>\n                    </div>\n                </ng-template>\n            </ngb-carousel>\n        </div>\n\n        <!--TEACHERS-->\n        <div class=\"docentes container-fluid d-flex flex-column justify-content-center inf px-2 px-lg-5\" style=\"height:100vh; width:100%;\">\n            <div class=\"py-5\">\n                <div class=\"text_container\">\n                    <div class=\"title-text\">\n                        <div class=\"hero-title\">\n                            Docentes\n                        </div>\n                        <p class=\"normal-text m-0\"> Lorem ipsum dolor sit amet, consectetur .</p>\n                        <p class=\"m-0 normal-text\"> Lorem ipsum dolor sit amet, consectetur adipis</p>\n                    </div>\n                </div>\n            </div>\n            <div>\n\n\n\n                <ngb-carousel id=\"carousel1\" :interval=\"4000\" controls>\n                    <ng-template ngbSlide *ngFor=\"let itemprofesor of profesores\" style=\"height:50vh;;\">\n                        <div class=\"w-100 h-100 px-0\">\n                            <div class=\"px-0 w-100 h-100 m-0 px-4 d-flex justify-content-center\">\n                                <div v-for=\"docent in pairs\" class=\"d-flex w-50 px-2 py-4\">\n                                    <div class=\"d-flex justify-content-start pt-0 text-center\">\n                                        <div class=\"image w-100 pt-0 d-flex flex-column justify-content-center\" [ngStyle]=\"{'background-image':'url('+itemprofesor.idem_personas.foto+')'}\">\n                                            <span class=\"w-100 d-flex justify-content-start\"></span>\n                                        </div>\n                                        <div class=\"card-text w-100 d-flex flex-column justify-content-center\">\n                                            <div class=\"cursos-title text-left\">{{itemprofesor.idem_personas.nombres}} {{itemprofesor.idem_personas.apellido_pa}}</div>\n                                            <p class=\"small-text subtitle text-left\">{{itemprofesor.titulo_profesional}}</p>\n                                            <p class=\"small-text text-left\">\n                                                {{itemprofesor.descripcion}}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-template>\n                </ngb-carousel>\n            </div>\n        </div>\n\n\n        <!-- ANOTACIONES COMPRAR AHORA CAMBIAR POR INSCRIBIRME  Y LA SECCION DE ABJO MAYOR INFORMACIÓN -->\n\n\n        <!-- INSCRIPCIONES-->\n\n        <div class=\"container-fluid inscripcion p-0\" style=\"height:100vh; width:100%;\">\n            <div class=\" row h-100 w-100 m-0\">\n                <div class=\"column uno h-100 col-7 p-0\">\n                    <div class=\"screen2 h-100 b-100\">\n                        <div class=\"white-container d-flex flex-column justify-content-center py-3 px-4\">\n                            <p class=\"hero-title d-flex px-3 pt-4\">¿Deseas mayor información?</p>\n                            <div class=\"row px-3\">\n                                <div class=\"column col-6 px-3\">\n                                    <label class=\"field a-field a-field_a1 page__field w-100\">\n                                        <input class=\"field__input a-field__input\" placeholder=\"e.g. Stanislav\" required>\n                                        <span class=\"a-field__label-wrap\">\n                                            <span class=\" a-field__label normal-text\">Nombre</span>\n                                        </span>\n                                    </label>\n                                </div>\n                                <div class=\"column col-6 px-3\">\n                                    <label class=\"field a-field a-field_a1 page__field  w-100\">\n                                        <input class=\"field__input a-field__input\" placeholder=\"e.g. Stanislav\" required>\n                                        <span class=\"a-field__label-wrap\">\n                                            <span class=\"normal-text a-field__label\">Apellido</span>\n                                        </span>\n                                    </label>\n                                </div>\n                            </div>\n                            <div class=\"row px-3\">\n                                <div class=\"column col-6 px-3\">\n                                    <label class=\"field a-field a-field_a1 page__field w-100\">\n                                        <input class=\"field__input a-field__input\" placeholder=\"e.g. Stanislav\" required>\n                                        <span class=\"a-field__label-wrap\">\n                                            <span class=\"normal-text a-field__label\">Celular</span>\n                                        </span>\n                                    </label>\n                                </div>\n                                <div class=\"column col-6 px-3\">\n                                    <label class=\"field a-field a-field_a1 page__field  w-100\">\n                                        <input class=\"field__input a-field__input\" placeholder=\"e.g. Stanislav\" required>\n                                        <span class=\"a-field__label-wrap\">\n                                            <span class=\"normal-text a-field__label\">E-mail</span>\n                                        </span>\n                                    </label>\n                                </div>\n                            </div>\n                            <div class=\"row px-3\">\n\n                                <div class=\"column col-6 px-3\">\n                                    <div class=\"select\">\n                                        <select class=\"small-text\" name=\"slct\" id=\"slct\">\n                                            <option selected disabled>Curso/Seminario de interés</option>\n                                            <option value=\"1\">Pure CSS</option>\n                                            <option value=\"2\">No JS</option>\n                                            <option value=\"3\">Nice!</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"column col-6 px-3\">\n                                    <div class=\"card\">\n                                        <label class=\"checkbox-label d-flex\">\n                                            <input type=\"checkbox\">\n                                            <span class=\"checkbox-custom rectangular\"></span>\n                                        </label>\n                                        <div class=\"input-title\">\n                                            <div class=\"small-text\" style=\"    margin-left: 40px;\n                                            margin-top: 15px;\">Términos y condiciones</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"btn-wrapper d-flex justify-content-center w-100 py-4\">\n                                    <button class=\"btn btn-outline-danger agregar-btn py-0\" style=\"min-width:100px;\">Enviar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\" column dos h-100 col-5 p-0\">\n                    <div class=\"container screen1 h-100 d-flex justify-content-start\">\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\n\nimport { IdemCursosService } from '../../../services/api/idemCursos.service';\nimport { IdemCursos } from '../../../services/model/idemCursos';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(protected idemCursosService:IdemCursosService, config: NgbCarouselConfig) {\n    // customize default values of carousels used by this component tree\n    config.interval = 10000;\n    config.wrap = false;\n    config.keyboard = false;\n    config.pauseOnHover = false;\n  }\n  \n\n  \n  idemcursoList:IdemCursos[];\n  ngOnInit(): void {\n    this.cargarCursos();\n  }\n\n  cargarCursos(){\n    this.idemCursosService.idemCursosGet().subscribe(data=>{\n      this.idemcursoList=data;\n    })\n  }\n\n  index=0; \n  getCursos(cantidad){\n    console.log('no entra');\n    let arrayselect;\n    if(cantidad > this.idemcursoList.length){\n      cantidad=this.idemcursoList.length;\n    }\n    if(this.index>=this.idemcursoList.length){\n      this.index=0;\n    }\n    for (; this.index < cantidad; this.index++) {\n      arrayselect.push(this.idemcursoList[this.index]);\n      \n    }\n    console.log(arrayselect);\n    return arrayselect;\n\n  }\n\n}\n","<div>\n    <div class=\"HeroMain p-0 container-fluid\" id=\"page_1\" style=\"position: relative;\">\n        <div role=\"region\" id=\"carousel1\" aria-busy=\"false\" class=\"carousel p-0 slide\" style=\"text-shadow: rgb(51, 51, 51) 1px 1px 2px;\">\n            <div id=\"carousel1___BV_inner_\" role=\"list\" class=\"carousel-inner\">\n                <div role=\"listitem\" class=\"carousel-item active\" aria-current=\"true\" aria-posinset=\"1\" aria-setsize=\"3\" id=\"__BVID__18\" style=\"height: 100vh;\">\n                    <!---->\n                    <div class=\"carousel-caption\">\n                        <!---->\n                        <!---->\n                        <div class=\"row h-100\">\n                            <div class=\"screen1 column h-100 col-12 col-md-8 p-0\" style=\"background-image: url(../../../assets/css/images/Home/Fotos-IDEM--01.png);\">\n                                <div class=\"slideText d-flex flex-column justify-content-center h-100 w-100 px-0\">\n                                    <div class=\"hero-title\"> IDEM es una organización sin fines de lucro que tiene como misión descentralizar lacalidad educativa. </div>\n                                </div>\n                            </div>\n                            <div class=\"screen2 column h-100 col-0 col-md-4 p-0\">\n                                <div class=\"LogoBlanco\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div role=\"listitem\" class=\"carousel-item\" aria-current=\"false\" aria-posinset=\"2\" aria-setsize=\"3\" id=\"__BVID__19\" style=\"height: 100vh;\">\n                    <!---->\n                    <div class=\"carousel-caption\">\n                        <!---->\n                        <!---->\n                        <div class=\"row h-100\">\n                            <div class=\"screen1 column h-100 col-12 col-md-8 p-0\" style=\"background-image: url(../../../assets/css/images/Home/Fotos-IDEM--02.png);\">\n                                <div class=\"slideText d-flex flex-column justify-content-center h-100 w-100 px-0\">\n                                    <div class=\"hero-title\"> Logramos nuestro objetivo mediante el desarrollo de cursos presenciales en provincia y cursos online. </div>\n                                </div>\n                            </div>\n                            <div class=\"screen2 column h-100 col-0 col-md-4 p-0\">\n                                <div class=\"LogoBlanco\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div role=\"listitem\" class=\"carousel-item\" aria-current=\"false\" aria-posinset=\"3\" aria-setsize=\"3\" id=\"__BVID__20\" style=\"height: 100vh;\">\n                    <!---->\n                    <div class=\"carousel-caption\">\n                        <!---->\n                        <!---->\n                        <div class=\"row h-100\">\n                            <div class=\"screen1 column h-100 col-12 col-md-8 p-0\" style=\"background-image: url(../../../assets/css/images/Home/Fotos-IDEM--03.png);\">\n                                <div class=\"slideText d-flex flex-column justify-content-center h-100 w-100 px-0\">\n                                    <div class=\"hero-title\"> Nuestros cursos se encuentran especializados en negocios y áreas afines como contabilidad, derecho, economía, entre otros. </div>\n                                </div>\n                            </div>\n                            <div class=\"screen2 column h-100 col-0 col-md-4 p-0\">\n                                <div class=\"LogoBlanco\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-prev\"><span aria-hidden=\"true\" class=\"carousel-control-prev-icon\"></span><span class=\"sr-only\">Previous Slide</span></a><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\"\n                class=\"carousel-control-next\"><span aria-hidden=\"true\" class=\"carousel-control-next-icon\"></span><span class=\"sr-only\">Next Slide</span></a>\n            <ol id=\"carousel1___BV_indicators_\" aria-hidden=\"true\" aria-label=\"Select a slide to display\" aria-owns=\"carousel1___BV_inner_\" class=\"carousel-indicators\" style=\"display: none;\">\n                <li role=\"button\" id=\"carousel1___BV_indicator_1_\" tabindex=\"-1\" aria-current=\"true\" aria-label=\"Goto Slide 1\" aria-controls=\"carousel1___BV_inner_\" class=\"active\"></li>\n                <li role=\"button\" id=\"carousel1___BV_indicator_2_\" tabindex=\"-1\" aria-current=\"false\" aria-label=\"Goto Slide 2\" aria-controls=\"carousel1___BV_inner_\" class=\"\"></li>\n                <li role=\"button\" id=\"carousel1___BV_indicator_3_\" tabindex=\"-1\" aria-current=\"false\" aria-label=\"Goto Slide 3\" aria-controls=\"carousel1___BV_inner_\" class=\"\"></li>\n            </ol>\n        </div>\n        <div class=\"franja-azul d-flex justify-content-end col-9 col-md-7 p-0\">\n            <div class=\"px-4 franja-option h-100 d-flex flex-column justify-content-center\">CURSOS DE NEGOCIOS</div>\n            <div class=\"px-4 pr-5 franja-option h-100 d-flex flex-column justify-content-center\">CURSOS DE TECNOLOGIA</div>\n        </div>\n    </div>\n    <div class=\"cursosOnlineDesktop container-fluid d-flex flex-column justify-content-center inf px-2 px-lg-5\" id=\"page_2\" style=\"height: 100vh; padding-top: 90px;\">\n        <div class=\"d-flex justify-content-center py-0\">\n            <div class=\"text_container\">\n                <div class=\"title-text d-flex justify-content-between\">\n                    <h4 class=\"section-title\">\n                        <a href=\"/cursos/online\" class=\"section-title\">Cursos Online</a>\n                    </h4>\n                </div>\n            </div>\n        </div>\n\n\n        <!-- PRUEBS-->\n        <div class=\"d-flex w-100 justify-content-center\">\n            <ngb-carousel style=\"height: 100vh; \" id=\"carousel1\" :interval=\"4000\" class=\"carousel\" controls>\n                <ng-template ngbSlide style=\" height: 70vh;\">\n                    <div class=\"carousel-caption\">\n                        <div class=\"container d-flex justify-content-center w-100 h-100 px-0\">\n                            <div class=\"card-container px-0 w-100 h-100 m-0\">\n\n                                <div *ngFor=\"let itemcurso of idemcursoList.slice(0, 2); \" class=\"card-wrapper d-flex justify-content-center col-6 px-2 py-2\">\n                                    <div class=\"card\">\n                                        <div class=\"image\">\n                                            <div class=\"subtitle px-4 py-1  d-flex justify-content-center\" style=\"position:absolute;left:0;bottom:0;\">\n                                                NEGOCIOS\n                                            </div>\n                                        </div>\n                                        <div class=\"card-text\">\n                                            <div class=\"title-wrapper  d-flex justify-content-start\" style=\"padding-right: 50px;\">\n                                                <span class=\"text-left cursos-title px-0\">{{itemcurso.nombre}}</span>\n                                            </div>\n                                            <div class=\"text-wrapper\">\n                                                <p class=\"small-text text-left pt-0 pl-lg-1\">\n                                                    {{itemcurso.descripcion}}...\n                                                </p>\n                                                <a href=\"/curso/{{itemcurso.idcurso}}\">\n                                                    <div class=\"flecha\"></div>\n                                                </a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-template>\n            </ngb-carousel>\n        </div>\n        <!--<div class=\"d-flex w-100 justify-content-center\">\n            <div role=\"region\" id=\"carousel1\" aria-busy=\"false\" class=\"carousel carousel slide\">\n                <div id=\"carousel1___BV_inner_\" role=\"list\" class=\"carousel-inner\">\n                    <div role=\"listitem\" class=\"carousel-item active\" aria-current=\"true\" aria-posinset=\"1\" aria-setsize=\"1\" style=\"height: 80vh;\" id=\"__BVID__23\">\n                        \n                        <ngb-carousel class=\"carousel-caption\">\n                        \n                            <ng-template ngbSlide *ngFor=\"let itemcurso of idemcursoList\" class=\"d-flex justify-content-center w-100 h-100 px-0\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        \n                                        <div class=\"card-container px-0 w-100 h-100 m-0\" style=\"min-height:550px\">\n                                            <div class=\"card-wrapper d-flex justify-content-center col-6 px-2 py-2\">\n                                                <div class=\"card\">\n\n                                                    <div class=\"image\" style=\"background-image: '{{itemcurso.imagen}}';\">\n                                                        <div class=\"subtitle px-4 py-1  d-flex justify-content-center\" style=\"position: absolute; left: 0px; bottom: 0px;\">\n                                                            NEGOCIOS\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"card-text\">\n                                                        <div class=\"title-wrapper d-flex justify-content-start\"><a href=\"/cursos/{{itemcurso.idcurso}}\"><span class=\"text-left cursos-title px-0\">{{itemcurso.nombre}}</span></a></div>\n                                                        <div class=\"text-wrapper\">\n                                                            <p class=\"small-text text-left pt-0 pl-lg-1\">\n                                                                {{itemcurso.descripcion | slice:0:90}}...\n                                                            </p>\n                                                            <a href=\"/curso/{{itemcurso.idcurso}}\">\n                                                                <div class=\"flecha\"></div>\n                                                            </a>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-4\">\n\n                                       \n                                        <div class=\"card-container px-0 w-100 h-100 m-0\" style=\"min-height:550px\">\n                                            <div class=\"card-wrapper d-flex justify-content-center col-6 px-2 py-2\">\n                                                <div class=\"card\">\n\n                                                    <div class=\"image\" style=\"background-image: '{{itemcurso.imagen}}';\">\n                                                        <div class=\"subtitle px-4 py-1  d-flex justify-content-center\" style=\"position: absolute; left: 0px; bottom: 0px;\">\n                                                            NEGOCIOS\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"card-text\">\n                                                        <div class=\"title-wrapper d-flex justify-content-start\"><a href=\"/cursos/{{itemcurso.idcurso}}\"><span class=\"text-left cursos-title px-0\">{{itemcurso.nombre}}</span></a></div>\n                                                        <div class=\"text-wrapper\">\n                                                            <p class=\"small-text text-left pt-0 pl-lg-1\">\n                                                                {{itemcurso.descripcion | slice:0:90}}...\n                                                            </p>\n                                                            <a href=\"/curso/{{itemcurso.idcurso}}\">\n                                                                <div class=\"flecha\"></div>\n                                                            </a>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </ng-template>\n                        </ngb-carousel>\n                    </div>\n                </div>\n\n            </div>\n        </div>-->\n    </div>\n    <div class=\"cursospresenciales p-0 container-fluid\" id=\"page_3\">\n        <div role=\"region\" id=\"carousel1\" aria-busy=\"false\" class=\"carousel p-0 slide\" style=\"background: rgb(171, 171, 171); text-shadow: rgb(51, 51, 51) 1px 1px 2px;\">\n            <div id=\"carousel1___BV_inner_\" role=\"list\" class=\"carousel-inner\">\n                <div role=\"listitem\" class=\"carousel-item active\" aria-current=\"true\" aria-posinset=\"1\" aria-setsize=\"1\" style=\"background: rgb(171, 171, 171); height: 100vh;\" id=\"__BVID__26\"><img src=\"css/images/CursosPresenciales/1.jpg\" width=\"1024\" height=\"480\" class=\"img-fluid w-100 d-block\">\n                    <div class=\"carousel-caption\">\n                        <!---->\n                        <!---->\n                        <div class=\"row h-100\">\n                            <div class=\"uno h-100 col-8 p-0 col\">\n                                <div class=\"container screen1 d-flex flex-column justify-content-center h-100 p-5 pb-0\">\n                                    <div class=\"col-10 texto h-100 text-left d-flex flex-column justify-content-between col\">\n                                        <a href=\"/presenciales/10\">\n                                            <div class=\"d-flex flex-column justify-content-center\">\n                                                <p class=\"small-text proximamente\">[NGIF](*)Próximamente</p> <span class=\"normal-text cursos-text d-flex\"><div class=\"pin-icon mr-1\"></div>\n                                  Arequipa / Set 28-29\n                              </span>\n                                                <div class=\"hero-title\">Seminario de derecho tributario*</div>\n                                                <div class=\"linkto d-flex\">\n                                                    <div class=\"d-flex flex-column py-1\">\n                                                        <div class=\"flecha\"></div>\n                                                    </div>\n                                                    <p class=\"small-text ver_mas\">\n                                                        Ver mas</p>\n                                                </div>\n                                            </div>\n                                        </a>\n                                        <p class=\"normal-text ponente\">Ponente</p>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-6 autor \">Francisco Ruiz</div>\n                                            <div class=\"col-md-6 autor\">Gustavo Herrán</div>\n                                            <div class=\"col-md-6 autor\">Roberto Polo</div>\n                                            <div class=\"col-md-6 autor\">Eder Fuentes</div>\n                                            <div class=\"col-md-6 autor\">Juan perez</div>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"h-100 col-4 p-0 col\">\n                                <div class=\"screen2 h-100 b-100 d-flex flex-column justify-content-center\">\n                                    <div class=\"white-container d-flex flex-column justify-content-center\">\n                                        <h4 class=\"section-title\">Cursos Presenciales</h4> <span class=\"normal-text cursos-text\">Contamos también con los mejores cursos presenciales</span></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-prev\"><span aria-hidden=\"true\" class=\"carousel-control-prev-icon\"></span><span class=\"sr-only\">Previous Slide</span></a><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\"\n                class=\"carousel-control-next\"><span aria-hidden=\"true\" class=\"carousel-control-next-icon\"></span><span class=\"sr-only\">Next Slide</span></a>\n            <ol id=\"carousel1___BV_indicators_\" aria-hidden=\"true\" aria-label=\"Select a slide to display\" aria-owns=\"carousel1___BV_inner_\" class=\"carousel-indicators\" style=\"display: none;\">\n                <li role=\"button\" id=\"carousel1___BV_indicator_1_\" tabindex=\"-1\" aria-current=\"true\" aria-label=\"Goto Slide 1\" aria-controls=\"carousel1___BV_inner_\" class=\"active\"></li>\n            </ol>\n        </div>\n    </div>\n    <div class=\"beneficios container-fluid w-100\" id=\"page_4\">\n        <link href=\"https://fonts.googleapis.com/css?family=Merriweather\" rel=\"stylesheet\">\n        <div class=\"row\">\n            <div class=\"columna1 column col-4 col-lg-4 d-flex justify-content-end\">\n                <div class=\"text-wrapper h-100 d-flex flex-column justify-content-center p-lg-4\">\n                    <div class=\"section-title\">Beneficios</div> <span class=\"p normal-text\">Cada curso online o presencial esta avaládo oficialmente por Idem, además formarás parte de una comunidad donde el dinero obtenido estará 100% destinados a proyectos educativos para las personas con menos recursos.</span></div>\n            </div>\n            <div class=\"columna2 column col-8 col-lg-8\">\n                <div class=\"row icons-wrapper d-flex justify-content-center flex-column h-100 col-10 col-lg-8\">\n                    <div class=\"w-100 d-flex\">\n                        <div class=\"column col-3 d-flex flex-column justify-content-start\">\n                            <div class=\"d-flex justify-content-center pb-2 p-lg-2\">\n                                <div class=\"icon1\" style=\"background-image: url(../../../assets/css/images/beneficios/1.png);\"></div>\n                            </div>\n                            <p class=\"icon-text text-center small-text\">Aprenderas a tu propio ritmo</p>\n                        </div>\n                        <div class=\"column col-3 d-flex flex-column justify-content-start\">\n                            <div class=\"d-flex justify-content-center pb-2 p-lg-2\">\n                                <div class=\"icon1\" style=\"background-image: url(../../../assets/css/images/beneficios/2.png);\"></div>\n                            </div>\n                            <p class=\"icon-text text-center small-text\">Los mejores profecionales te enseñarán</p>\n                        </div>\n                        <div class=\"column col-3 d-flex flex-column justify-content-start\">\n                            <div class=\"d-flex justify-content-center pb-2 p-lg-2\">\n                                <div class=\"icon1\" style=\"background-image: url(../../../assets/css/images/beneficios/3.png);\"></div>\n                            </div>\n                            <p class=\"icon-text text-center small-text\">Obtendrás un certificado oficial.</p>\n                        </div>\n                        <div class=\"column col-3 d-flex flex-column justify-content-start\">\n                            <div class=\"d-flex justify-content-center pb-2 p-lg-2\">\n                                <div class=\"icon1\" style=\"background-image: url(../../../assets/css/images/beneficios/4.png);\"></div>\n                            </div>\n                            <p class=\"icon-text text-center small-text\">Formarás parte de una comunidad que genera el cambio.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"container-fluid main_testimonials p-0\" id=\"page_5\">\n        <link href=\"https://fonts.googleapis.com/css?family=Merriweather\" rel=\"stylesheet\">\n        <div role=\"region\" id=\"carousel1\" aria-busy=\"false\" class=\"carousel p-0 m-0 slide\" style=\"text-shadow: rgb(51, 51, 51) 1px 1px 2px;\">\n            <div id=\"carousel1___BV_inner_\" role=\"list\" class=\"carousel-inner\">\n                <div role=\"listitem\" class=\"carousel-item\" aria-current=\"false\" aria-posinset=\"1\" aria-setsize=\"2\" style=\"height: 100vh;\" id=\"__BVID__30\" aria-hidden=\"true\">\n                    <!---->\n                    <div class=\"carousel-caption\">\n                        <!---->\n                        <!---->\n                        <div class=\"d-flex m-0 p-0 h-100 w-100\">\n                            <div class=\"column  h-100 col-3 p-0\">\n                                <div class=\"screen1 h-100 b-100\">\n                                    <div class=\"white_container\">\n                                        <h4 class=\"section-title\">Testimonios</h4> <span class=\"normal-text\">Hemos capacitado a miles de profesionales.</span></div>\n                                </div>\n                            </div>\n                            <div class=\"column uno h-100 col-9 p-0\">\n                                <div class=\"container screen2 d-flex justify-content-center h-100 d-flex justify-content-start\">\n                                    <div class=\"d-flex justify-content-center flex-column\" style=\"z-index: 2;\">\n                                        <div class=\"text-container\">\n                                            <div class=\"hero-title comillas\">“</div>\n                                            <h3 class=\"hero-title\">Pude culminar mis estudios sin tener que viajar”</h3>\n                                            <p class=\"normal-text nombre pt-2\">-Jorge Castro</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div role=\"listitem\" class=\"carousel-item active\" aria-current=\"true\" aria-posinset=\"2\" aria-setsize=\"2\" style=\"height: 100vh;\" id=\"__BVID__31\" aria-hidden=\"false\">\n                    <!---->\n                    <div class=\"carousel-caption\">\n                        <!---->\n                        <!---->\n                        <div class=\"d-flex m-0 p-0 h-100 w-100\">\n                            <div class=\"column  h-100 col-3 p-0\">\n                                <div class=\"screen1 h-100 b-100\">\n                                    <div class=\"white_container\">\n                                        <h4 class=\"section-title\">Testimonios</h4> <span class=\"normal-text\">Hemos capacitado a miles de profesionales.</span></div>\n                                </div>\n                            </div>\n                            <div class=\"column uno h-100 col-9 p-0\">\n                                <div class=\"container screen2 d-flex justify-content-center h-100 d-flex justify-content-start\">\n                                    <div class=\"d-flex justify-content-center flex-column\" style=\"z-index: 2;\">\n                                        <div class=\"text-container\">\n                                            <div class=\"hero-title comillas\">“</div>\n                                            <h3 class=\"hero-title\">Me alegró saber que al capacitarme, personas con menores recursos obtendrían beneficios</h3>\n                                            <p class=\"normal-text nombre pt-2\">-Christian Paredes</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-prev\"><span aria-hidden=\"true\" class=\"carousel-control-prev-icon\"></span><span class=\"sr-only\">Previous Slide</span></a><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\"\n                class=\"carousel-control-next\"><span aria-hidden=\"true\" class=\"carousel-control-next-icon\"></span><span class=\"sr-only\">Next Slide</span></a>\n            <ol id=\"carousel1___BV_indicators_\" aria-hidden=\"true\" aria-label=\"Select a slide to display\" aria-owns=\"carousel1___BV_inner_\" class=\"carousel-indicators\" style=\"display: none;\">\n                <li role=\"button\" id=\"carousel1___BV_indicator_1_\" tabindex=\"-1\" aria-current=\"false\" aria-label=\"Goto Slide 1\" aria-controls=\"carousel1___BV_inner_\" class=\"\" aria-describedby=\"__BVID__30\"></li>\n                <li role=\"button\" id=\"carousel1___BV_indicator_2_\" tabindex=\"-1\" aria-current=\"true\" aria-label=\"Goto Slide 2\" aria-controls=\"carousel1___BV_inner_\" class=\"active\" aria-describedby=\"__BVID__31\"></li>\n            </ol>\n        </div>\n    </div>\n    <div fluid=\"alt\" class=\"estartegicAllies container-fluid w-100 px-6\" id=\"page_6\">\n        <div class=\"row h-100\">\n            <div class=\"column col-2 d-flex justify-content-center h-100\">\n                <div class=\"column d-flex flex-column justify-content-center\">\n                    <h4 class=\"section-title blog_tittle\">Aliados</h4>\n                </div>\n            </div>\n            <div class=\"column col-10 flex-column justify-content-center\">\n                <div role=\"region\" id=\"carousel1\" aria-busy=\"false\" class=\"carousel carr h-100 slide\">\n                    <div id=\"carousel1___BV_inner_\" role=\"list\" class=\"carousel-inner\">\n                        <div role=\"listitem\" class=\"carousel-item carr asda h-100 active\" aria-current=\"true\" aria-posinset=\"2\" aria-setsize=\"2\" style=\"max-height: 250px; background-size: cover;\" id=\"__BVID__35\" aria-hidden=\"false\"><img src=\"/noticias/1.jpg\" class=\"img-fluid w-100 d-block\">\n                            <div class=\"carousel-caption\" style=\"position: initial; width: 90%; padding-top: 60px; margin-left: 52px;\">\n                                <!---->\n                                <!---->\n                                <div class=\"row h-100\">\n                                    <div class=\"col-4 d-flex flex-column justify-content-center col\">\n                                        <div class=\"card d-flex flex-column justify-content-start pt-0 text-center\">\n                                            <div class=\"card-image ci1 w-100 pt-0 d-flex flex-column justify-content-end\">\n\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <div class=\"col-4 d-flex flex-column justify-content-center col\">\n                                        <div class=\"card d-flex flex-column justify-content-start pt-0 text-center\">\n                                            <div class=\"card-image ci2 w-100 pt-0 d-flex flex-column justify-content-end\">\n\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <div class=\"col-4 d-flex flex-column justify-content-center col\">\n                                        <div class=\"card d-flex flex-column justify-content-start pt-0 text-center\">\n                                            <div class=\"card-image ci3 w-100 pt-0 d-flex flex-column justify-content-end\">\n\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-prev\"><span aria-hidden=\"true\" class=\"carousel-control-prev-icon\"></span><span class=\"sr-only\">Previous Slide</span></a><a href=\"#\" role=\"button\"\n                        aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-next\"><span aria-hidden=\"true\" class=\"carousel-control-next-icon\"></span><span class=\"sr-only\">Next Slide</span></a>\n                    <ol id=\"carousel1___BV_indicators_\" aria-hidden=\"true\" aria-label=\"Select a slide to display\" aria-owns=\"carousel1___BV_inner_\" class=\"carousel-indicators\" style=\"display: none;\">\n                        <li role=\"button\" id=\"carousel1___BV_indicator_1_\" tabindex=\"-1\" aria-current=\"false\" aria-label=\"Goto Slide 1\" aria-controls=\"carousel1___BV_inner_\" class=\"\" aria-describedby=\"__BVID__34\"></li>\n                        <li role=\"button\" id=\"carousel1___BV_indicator_2_\" tabindex=\"-1\" aria-current=\"true\" aria-label=\"Goto Slide 2\" aria-controls=\"carousel1___BV_inner_\" class=\"active\" aria-describedby=\"__BVID__35\"></li>\n                    </ol>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div fluid=\"alt\" class=\"BlogDesktop container-fluid w-100 px-6\" id=\"page_7\">\n        <div class=\"row h-100\">\n            <div class=\"column col-2 d-flex justify-content-center h-100\">\n                <div class=\"column d-flex flex-column justify-content-center\">\n                    <h4 class=\"section-title blog_tittle\">Blog</h4>\n                </div>\n            </div>\n            <div class=\"column col-10 flex-column justify-content-center\">\n                <div role=\"region\" id=\"carousel1\" aria-busy=\"false\" class=\"carousel carr h-100 slide\">\n                    <div id=\"carousel1___BV_inner_\" role=\"list\" class=\"carousel-inner\">\n                        <div role=\"listitem\" class=\"carousel-item carr asda h-100\" aria-current=\"false\" aria-posinset=\"1\" aria-setsize=\"2\" style=\"max-height: 250px; background-size: cover;\" id=\"__BVID__38\" aria-hidden=\"true\"><img src=\"/noticias/1.jpg\" class=\"img-fluid w-100 d-block\">\n                            <div class=\"carousel-caption\">\n                                <!---->\n                                <!---->\n                                <div class=\"row h-100\">\n                                    <div class=\"col-4 d-flex flex-column justify-content-center col\">\n                                        <div class=\"card d-flex flex-column justify-content-start pt-0 text-center\">\n                                            <div class=\"card-image ci1 w-100 pt-0 d-flex flex-column justify-content-end\">\n                                                <div class=\"w-100 d-flex justify-content-start\">\n                                                    <div class=\"small-text cursos-button px-2 py-0 w-50\">EL COMERCIO</div>\n                                                </div>\n                                            </div>\n                                            <div class=\"card-text w-100 d-flex flex-column justify-content-start pt-0\">\n                                                <p class=\"small-text cursos-text\">\n                                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed accumsan dui eget tincidunt tristique Duis.</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-4 d-flex flex-column justify-content-center col\">\n                                        <div class=\"card d-flex flex-column justify-content-start pt-0 text-center\">\n                                            <div class=\"card-image ci1 w-100 pt-0 d-flex flex-column justify-content-end\">\n                                                <div class=\"w-100 d-flex justify-content-start\">\n                                                    <div class=\"small-text cursos-button px-2 py-0 w-50\">EL COMERCIO</div>\n                                                </div>\n                                            </div>\n                                            <div class=\"card-text w-100 d-flex flex-column justify-content-start pt-0\">\n                                                <p class=\"small-text cursos-text\">\n                                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed accumsan dui eget tincidunt tristique Duis.</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-4 d-flex flex-column justify-content-center col\">\n                                        <div class=\"card d-flex flex-column justify-content-start pt-0 text-center\">\n                                            <div class=\"card-image ci1 w-100 pt-0 d-flex flex-column justify-content-end\">\n                                                <div class=\"w-100 d-flex justify-content-start\">\n                                                    <div class=\"small-text cursos-button px-2 py-0 w-50\">EL COMERCIO</div>\n                                                </div>\n                                            </div>\n                                            <div class=\"card-text w-100 d-flex flex-column justify-content-start pt-0\">\n                                                <p class=\"small-text cursos-text\">\n                                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed accumsan dui eget tincidunt tristique Duis.</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div role=\"listitem\" class=\"carousel-item carr asda h-100 active\" aria-current=\"true\" aria-posinset=\"2\" aria-setsize=\"2\" style=\"max-height: 250px; background-size: cover;\" id=\"__BVID__39\" aria-hidden=\"false\"><img src=\"/noticias/1.jpg\" class=\"img-fluid w-100 d-block\">\n                            <div class=\"carousel-caption\">\n                                <!---->\n                                <!---->\n                                <div class=\"row h-100\">\n                                    <div class=\"col-4 d-flex flex-column justify-content-center col\">\n                                        <div class=\"card d-flex flex-column justify-content-start pt-0 text-center\">\n                                            <div class=\"card-image ci1 w-100 pt-0 d-flex flex-column justify-content-end\">\n                                                <div class=\"w-100 d-flex justify-content-start\">\n                                                    <div class=\"small-text cursos-button px-2 py-0 w-50\">EL COMERCIO</div>\n                                                </div>\n                                            </div>\n                                            <div class=\"card-text w-100 d-flex flex-column justify-content-start pt-0\">\n                                                <p class=\"small-text cursos-text\">\n                                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed accumsan dui eget tincidunt tristique Duis.</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-4 d-flex flex-column justify-content-center col\">\n                                        <div class=\"card d-flex flex-column justify-content-start pt-0 text-center\">\n                                            <div class=\"card-image ci1 w-100 pt-0 d-flex flex-column justify-content-end\">\n                                                <div class=\"w-100 d-flex justify-content-start\">\n                                                    <div class=\"small-text cursos-button px-2 py-0 w-50\">EL COMERCIO</div>\n                                                </div>\n                                            </div>\n                                            <div class=\"card-text w-100 d-flex flex-column justify-content-start pt-0\">\n                                                <p class=\"small-text cursos-text\">\n                                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed accumsan dui eget tincidunt tristique Duis.</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-4 d-flex flex-column justify-content-center col\">\n                                        <div class=\"card d-flex flex-column justify-content-start pt-0 text-center\">\n                                            <div class=\"card-image ci1 w-100 pt-0 d-flex flex-column justify-content-end\">\n                                                <div class=\"w-100 d-flex justify-content-start\">\n                                                    <div class=\"small-text cursos-button px-2 py-0 w-50\">EL COMERCIO2</div>\n                                                </div>\n                                            </div>\n                                            <div class=\"card-text w-100 d-flex flex-column justify-content-start pt-0\">\n                                                <p class=\"small-text cursos-text\">\n                                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed accumsan dui eget tincidunt tristique Duis.</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div><a href=\"#\" role=\"button\" aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-prev\"><span aria-hidden=\"true\" class=\"carousel-control-prev-icon\"></span><span class=\"sr-only\">Previous Slide</span></a><a href=\"#\" role=\"button\"\n                        aria-controls=\"carousel1___BV_inner_\" class=\"carousel-control-next\"><span aria-hidden=\"true\" class=\"carousel-control-next-icon\"></span><span class=\"sr-only\">Next Slide</span></a>\n                    <ol id=\"carousel1___BV_indicators_\" aria-hidden=\"true\" aria-label=\"Select a slide to display\" aria-owns=\"carousel1___BV_inner_\" class=\"carousel-indicators\" style=\"display: none;\">\n                        <li role=\"button\" id=\"carousel1___BV_indicator_1_\" tabindex=\"-1\" aria-current=\"false\" aria-label=\"Goto Slide 1\" aria-controls=\"carousel1___BV_inner_\" class=\"\" aria-describedby=\"__BVID__38\"></li>\n                        <li role=\"button\" id=\"carousel1___BV_indicator_2_\" tabindex=\"-1\" aria-current=\"true\" aria-label=\"Goto Slide 2\" aria-controls=\"carousel1___BV_inner_\" class=\"active\" aria-describedby=\"__BVID__39\"></li>\n                    </ol>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!---->\n<!---->","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"angularx-social-login\";\nimport { FacebookLoginProvider, GoogleLoginProvider } from \"angularx-social-login\";\n\nimport { SocialUser } from \"angularx-social-login\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n  logueado=0;\n  ngOnInit(): void {\n\n  }\n\n  user: SocialUser;\n  loggedIn: boolean;\n\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n    this.loguear(1);\n  }\n \n\n\n  loguear(valor){\n    this.logueado=valor;\n    this.authService.authState.subscribe((user) => {\n      this.user = user;\n      this.loggedIn = (user != null);\n    });\n  }\n\n}\n","<div *ngIf=\"logueado==0\">\n    <h4 mat-dialog-title>\n        <mat-toolbar role=\"toolbar\" class=\"task-header\">\n            <div class=\"d-flex align-items-center\">\n                <div><img src=\"../../../assets/css/images/LogoBlanco.png\" width=\"40px\"></div>\n                <div style=\"    margin-right: 56px;            margin-left: 10px;\">\n                    <h3>Validar Datos</h3>\n                </div>\n                <div style=\"font-size: 10px;\">Obten recomendaciones personalizadas según tus antecedentes</div>\n            </div>\n\n        </mat-toolbar>\n    </h4>\n\n\n    <mat-dialog-content class=\"fonfoFormulario\">\n\n        <div class=\"container\" style=\"margin-top: 18px;\">\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <h3> <span class=\"titulosLogin\" style=\"margin-top: 15px;\">Registrate</span></h3>\n                    <div style=\"margin-right: 30px;\" class=\"col-md-4\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Usuario</mat-label>\n                            <input matInput placeholder=\"correo@electronico.com\">\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Contraseña</mat-label>\n                            <input matInput type=\"password\">\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Correo Electrónico</mat-label>\n                            <input matInput type=\"password\">\n                        </mat-form-field>\n                    </div>\n                    <div class=\"align-self-end\">\n                        <p (click)=\"loguear(1)\" class=\"text-lg-left botonesLogin\">Registrar</p>\n                    </div>\n                </div>\n\n                <div class=\"col\">\n                    <h3><span class=\"titulosLogin\" style=\"margin-top: 15px;\">Iniciar sesión</span></h3>\n\n                    <div class=\"d-flex align-items-start flex-column bd-highlight mb-3\" style=\"height: 240px;\">\n                        <div class=\"mb-auto p-2 bd-highlight\">\n                            <div style=\"margin-right: 30px;\" class=\"col-md-4\">\n                                <mat-form-field appearance=\"outline\">\n                                    <mat-label>Usuario</mat-label>\n                                    <input matInput placeholder=\"correo@electronico.com\">\n                                </mat-form-field>\n                            </div>\n\n                            <div class=\"col-md-4\">\n                                <mat-form-field appearance=\"outline\">\n                                    <mat-label>Contraseña</mat-label>\n                                    <input matInput type=\"password\">\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"p-2 bd-highlight\">\n                            <div class=\"align-self-end\">\n                                <p class=\"align-text-bottom text-lg-left botonesLogin\">Entrar</p>\n                            </div>\n                            <div class=\"align-self-end\">\n                                <p (click)=\"signInWithGoogle()\" class=\"align-text-bottom text-lg-left botonesLogin\" style=\"font-size: 10px;\">Gmail</p>\n                            </div>\n                        </div>\n\n                    </div>\n\n\n\n\n                </div>\n            </div>\n\n        </div>\n    </mat-dialog-content>\n</div>\n\n\n\n\n<!--YA LOGUEADO-->\n<div *ngIf=\"logueado==1\">\n    <h4 mat-dialog-title>\n        <mat-toolbar role=\"toolbar\" class=\"task-header\">\n            <div class=\"d-flex align-items-center\">\n                <div><img src=\"../../../assets/css/images/LogoBlanco.png\" width=\"40px\"></div>\n                <div style=\"    margin-right: 56px;            margin-left: 10px;\">\n                    <h3>Bienvenido a IDEM {{ user.name }}</h3>\n                </div>\n                <div style=\"font-size: 10px;\">Obten recomendaciones personalizadas según tus antecedentes</div>\n            </div>\n\n        </mat-toolbar>\n    </h4>\n\n    <mat-dialog-content class=\"fonfoFormulario\">\n        <div class=\"container\">\n            <h3><span class=\"titulosLogin\" style=\"margin-top: 15px;\">Experiencia Laboral</span></h3>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Profesión</mat-label>\n                        <input matInput placeholder=\"Ejemplo: Gerente de productos\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-md-4\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Nivel de experiencia</mat-label>\n                        <mat-select>\n                            <mat-option>None</mat-option>\n                            <mat-option value=\"option1\">Option 1</mat-option>\n                            <mat-option value=\"option2\">Option 2</mat-option>\n                            <mat-option value=\"option3\">Option 3</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                </div>\n                <div class=\"col-md-4\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Empleador</mat-label>\n                        <input matInput placeholder=\"Ejemplo: Microsft\">\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <h3><span class=\"titulosLogin\" style=\"margin-top: 15px;\">Educación</span></h3>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Título</mat-label>\n                        <mat-select>\n                            <mat-option>None</mat-option>\n                            <mat-option value=\"option1\">Bachiller</mat-option>\n                            <mat-option value=\"option2\">Maestria</mat-option>\n                            <mat-option value=\"option3\">Doctorado</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                </div>\n\n                <div class=\"col-md-4\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Universidad</mat-label>\n                        <input matInput placeholder=\"Ejemplo: Universidad de Lima\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-md-4\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Campo o especialización</mat-label>\n                        <mat-select>\n                            <mat-option>None</mat-option>\n                            <mat-option value=\"option1\">Bachiller</mat-option>\n                            <mat-option value=\"option2\">Maestria</mat-option>\n                            <mat-option value=\"option3\">Doctorado</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                </div>\n            </div>\n\n            <h3><span class=\"titulosLogin\" style=\"margin-top: 15px;\">Objetivos Profesionales</span></h3>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Profesión</mat-label>\n                        <mat-select>\n                            <mat-option>None</mat-option>\n                            <mat-option value=\"option1\">Bachiller</mat-option>\n                            <mat-option value=\"option2\">Maestria</mat-option>\n                            <mat-option value=\"option3\">Doctorado</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                </div>\n\n                <div class=\"col-md-4\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Industria</mat-label>\n                        <input matInput placeholder=\"Ejemplo: Universidad de Lima\">\n                    </mat-form-field>\n                </div>\n                <div class=\"col-md-4\">\n                    <button class=\"btn btn-danger omitir-btn\"> Omitir </button>\n                    <button style=\"margin-left:10px\" class=\"btn btn-danger continuar-btn\"> Continuar</button>\n                </div>\n            </div>\n\n        </div>\n    </mat-dialog-content>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemAlumnos } from '../model/idemAlumnos';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemAlumnosService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param dni \n     * @param password \n     * @param email \n     * @param carrera \n     * @param idestado \n     * @param fecharegistro \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemAlumnosDelete(dni?: string, password?: string, email?: string, carrera?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemAlumnosDelete(dni?: string, password?: string, email?: string, carrera?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemAlumnosDelete(dni?: string, password?: string, email?: string, carrera?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemAlumnosDelete(dni?: string, password?: string, email?: string, carrera?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (password !== undefined && password !== null) {\n            queryParameters = queryParameters.set('password', <any>password);\n        }\n        if (email !== undefined && email !== null) {\n            queryParameters = queryParameters.set('email', <any>email);\n        }\n        if (carrera !== undefined && carrera !== null) {\n            queryParameters = queryParameters.set('carrera', <any>carrera);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_alumnos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param dni \n     * @param password \n     * @param email \n     * @param carrera \n     * @param idestado \n     * @param fecharegistro \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemAlumnosGet(dni?: string, password?: string, email?: string, carrera?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemAlumnos>>;\n    public idemAlumnosGet(dni?: string, password?: string, email?: string, carrera?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemAlumnos>>>;\n    public idemAlumnosGet(dni?: string, password?: string, email?: string, carrera?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemAlumnos>>>;\n    public idemAlumnosGet(dni?: string, password?: string, email?: string, carrera?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (password !== undefined && password !== null) {\n            queryParameters = queryParameters.set('password', <any>password);\n        }\n        if (email !== undefined && email !== null) {\n            queryParameters = queryParameters.set('email', <any>email);\n        }\n        if (carrera !== undefined && carrera !== null) {\n            queryParameters = queryParameters.set('carrera', <any>carrera);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemAlumnos>>(`${this.basePath}/idem_alumnos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param dni \n     * @param password \n     * @param email \n     * @param carrera \n     * @param idestado \n     * @param fecharegistro \n     * @param idemAlumnos idem_alumnos\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemAlumnosPatch(dni?: string, password?: string, email?: string, carrera?: string, idestado?: string, fecharegistro?: string, idemAlumnos?: IdemAlumnos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemAlumnosPatch(dni?: string, password?: string, email?: string, carrera?: string, idestado?: string, fecharegistro?: string, idemAlumnos?: IdemAlumnos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemAlumnosPatch(dni?: string, password?: string, email?: string, carrera?: string, idestado?: string, fecharegistro?: string, idemAlumnos?: IdemAlumnos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemAlumnosPatch(dni?: string, password?: string, email?: string, carrera?: string, idestado?: string, fecharegistro?: string, idemAlumnos?: IdemAlumnos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (password !== undefined && password !== null) {\n            queryParameters = queryParameters.set('password', <any>password);\n        }\n        if (email !== undefined && email !== null) {\n            queryParameters = queryParameters.set('email', <any>email);\n        }\n        if (carrera !== undefined && carrera !== null) {\n            queryParameters = queryParameters.set('carrera', <any>carrera);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_alumnos`,\n            idemAlumnos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idemAlumnos idem_alumnos\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemAlumnosPost(idemAlumnos?: IdemAlumnos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemAlumnosPost(idemAlumnos?: IdemAlumnos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemAlumnosPost(idemAlumnos?: IdemAlumnos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemAlumnosPost(idemAlumnos?: IdemAlumnos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_alumnos`,\n            idemAlumnos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemApartados } from '../model/idemApartados';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemApartadosService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param idapartado \n     * @param nombre \n     * @param classe \n     * @param titulo \n     * @param url \n     * @param fecharegistro \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemApartadosDelete(idapartado?: string, nombre?: string, classe?: string, titulo?: string, url?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemApartadosDelete(idapartado?: string, nombre?: string, classe?: string, titulo?: string, url?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemApartadosDelete(idapartado?: string, nombre?: string, classe?: string, titulo?: string, url?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemApartadosDelete(idapartado?: string, nombre?: string, classe?: string, titulo?: string, url?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idapartado !== undefined && idapartado !== null) {\n            queryParameters = queryParameters.set('idapartado', <any>idapartado);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (classe !== undefined && classe !== null) {\n            queryParameters = queryParameters.set('classe', <any>classe);\n        }\n        if (titulo !== undefined && titulo !== null) {\n            queryParameters = queryParameters.set('titulo', <any>titulo);\n        }\n        if (url !== undefined && url !== null) {\n            queryParameters = queryParameters.set('url', <any>url);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_apartados`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idapartado \n     * @param nombre \n     * @param classe \n     * @param titulo \n     * @param url \n     * @param fecharegistro \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemApartadosGet(idapartado?: string, nombre?: string, classe?: string, titulo?: string, url?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemApartados>>;\n    public idemApartadosGet(idapartado?: string, nombre?: string, classe?: string, titulo?: string, url?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemApartados>>>;\n    public idemApartadosGet(idapartado?: string, nombre?: string, classe?: string, titulo?: string, url?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemApartados>>>;\n    public idemApartadosGet(idapartado?: string, nombre?: string, classe?: string, titulo?: string, url?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idapartado !== undefined && idapartado !== null) {\n            queryParameters = queryParameters.set('idapartado', <any>idapartado);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (classe !== undefined && classe !== null) {\n            queryParameters = queryParameters.set('classe', <any>classe);\n        }\n        if (titulo !== undefined && titulo !== null) {\n            queryParameters = queryParameters.set('titulo', <any>titulo);\n        }\n        if (url !== undefined && url !== null) {\n            queryParameters = queryParameters.set('url', <any>url);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemApartados>>(`${this.basePath}/idem_apartados`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idapartado \n     * @param nombre \n     * @param classe \n     * @param titulo \n     * @param url \n     * @param fecharegistro \n     * @param idemApartados idem_apartados\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemApartadosPatch(idapartado?: string, nombre?: string, classe?: string, titulo?: string, url?: string, fecharegistro?: string, idemApartados?: IdemApartados, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemApartadosPatch(idapartado?: string, nombre?: string, classe?: string, titulo?: string, url?: string, fecharegistro?: string, idemApartados?: IdemApartados, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemApartadosPatch(idapartado?: string, nombre?: string, classe?: string, titulo?: string, url?: string, fecharegistro?: string, idemApartados?: IdemApartados, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemApartadosPatch(idapartado?: string, nombre?: string, classe?: string, titulo?: string, url?: string, fecharegistro?: string, idemApartados?: IdemApartados, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idapartado !== undefined && idapartado !== null) {\n            queryParameters = queryParameters.set('idapartado', <any>idapartado);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (classe !== undefined && classe !== null) {\n            queryParameters = queryParameters.set('classe', <any>classe);\n        }\n        if (titulo !== undefined && titulo !== null) {\n            queryParameters = queryParameters.set('titulo', <any>titulo);\n        }\n        if (url !== undefined && url !== null) {\n            queryParameters = queryParameters.set('url', <any>url);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_apartados`,\n            idemApartados,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idemApartados idem_apartados\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemApartadosPost(idemApartados?: IdemApartados, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemApartadosPost(idemApartados?: IdemApartados, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemApartadosPost(idemApartados?: IdemApartados, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemApartadosPost(idemApartados?: IdemApartados, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_apartados`,\n            idemApartados,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemCargos } from '../model/idemCargos';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemCargosService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param idcargo \n     * @param nombre \n     * @param fecharegistro \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemCargosDelete(idcargo?: string, nombre?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemCargosDelete(idcargo?: string, nombre?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemCargosDelete(idcargo?: string, nombre?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemCargosDelete(idcargo?: string, nombre?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcargo !== undefined && idcargo !== null) {\n            queryParameters = queryParameters.set('idcargo', <any>idcargo);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_cargos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idcargo \n     * @param nombre \n     * @param fecharegistro \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemCargosGet(idcargo?: string, nombre?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemCargos>>;\n    public idemCargosGet(idcargo?: string, nombre?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemCargos>>>;\n    public idemCargosGet(idcargo?: string, nombre?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemCargos>>>;\n    public idemCargosGet(idcargo?: string, nombre?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcargo !== undefined && idcargo !== null) {\n            queryParameters = queryParameters.set('idcargo', <any>idcargo);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemCargos>>(`${this.basePath}/idem_cargos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idcargo \n     * @param nombre \n     * @param fecharegistro \n     * @param idemCargos idem_cargos\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemCargosPatch(idcargo?: string, nombre?: string, fecharegistro?: string, idemCargos?: IdemCargos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemCargosPatch(idcargo?: string, nombre?: string, fecharegistro?: string, idemCargos?: IdemCargos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemCargosPatch(idcargo?: string, nombre?: string, fecharegistro?: string, idemCargos?: IdemCargos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemCargosPatch(idcargo?: string, nombre?: string, fecharegistro?: string, idemCargos?: IdemCargos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcargo !== undefined && idcargo !== null) {\n            queryParameters = queryParameters.set('idcargo', <any>idcargo);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_cargos`,\n            idemCargos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idemCargos idem_cargos\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemCargosPost(idemCargos?: IdemCargos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemCargosPost(idemCargos?: IdemCargos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemCargosPost(idemCargos?: IdemCargos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemCargosPost(idemCargos?: IdemCargos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_cargos`,\n            idemCargos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemCategorias } from '../model/idemCategorias';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemCategoriasService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param idcategoria \n     * @param nombre cursod e negocios, de tecnologia etc\n     * @param idestado \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemCategoriasDelete(idcategoria?: string, nombre?: string, idestado?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemCategoriasDelete(idcategoria?: string, nombre?: string, idestado?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemCategoriasDelete(idcategoria?: string, nombre?: string, idestado?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemCategoriasDelete(idcategoria?: string, nombre?: string, idestado?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcategoria !== undefined && idcategoria !== null) {\n            queryParameters = queryParameters.set('idcategoria', <any>idcategoria);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_categorias`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idcategoria \n     * @param nombre cursod e negocios, de tecnologia etc\n     * @param idestado \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemCategoriasGet(idcategoria?: string, nombre?: string, idestado?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemCategorias>>;\n    public idemCategoriasGet(idcategoria?: string, nombre?: string, idestado?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemCategorias>>>;\n    public idemCategoriasGet(idcategoria?: string, nombre?: string, idestado?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemCategorias>>>;\n    public idemCategoriasGet(idcategoria?: string, nombre?: string, idestado?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcategoria !== undefined && idcategoria !== null) {\n            queryParameters = queryParameters.set('idcategoria', <any>idcategoria);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemCategorias>>(`${this.basePath}/idem_categorias`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idcategoria \n     * @param nombre cursod e negocios, de tecnologia etc\n     * @param idestado \n     * @param idemCategorias idem_categorias\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemCategoriasPatch(idcategoria?: string, nombre?: string, idestado?: string, idemCategorias?: IdemCategorias, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemCategoriasPatch(idcategoria?: string, nombre?: string, idestado?: string, idemCategorias?: IdemCategorias, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemCategoriasPatch(idcategoria?: string, nombre?: string, idestado?: string, idemCategorias?: IdemCategorias, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemCategoriasPatch(idcategoria?: string, nombre?: string, idestado?: string, idemCategorias?: IdemCategorias, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcategoria !== undefined && idcategoria !== null) {\n            queryParameters = queryParameters.set('idcategoria', <any>idcategoria);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_categorias`,\n            idemCategorias,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idemCategorias idem_categorias\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemCategoriasPost(idemCategorias?: IdemCategorias, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemCategoriasPost(idemCategorias?: IdemCategorias, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemCategoriasPost(idemCategorias?: IdemCategorias, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemCategoriasPost(idemCategorias?: IdemCategorias, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_categorias`,\n            idemCategorias,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemCursos } from '../model/idemCursos';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemCursosService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param idcurso \n     * @param nombre \n     * @param descripcion \n     * @param descripcion2 \n     * @param imagen \n     * @param costo \n     * @param moneda \n     * @param idtipocurso \n     * @param fechahoraInicio \n     * @param fechahoraFin \n     * @param lugar \n     * @param fecharegistro \n     * @param idcategoria \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemCursosDelete(idcurso?: string, nombre?: string, descripcion?: string, descripcion2?: string, imagen?: string, costo?: string, moneda?: string, idtipocurso?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idcategoria?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemCursosDelete(idcurso?: string, nombre?: string, descripcion?: string, descripcion2?: string, imagen?: string, costo?: string, moneda?: string, idtipocurso?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idcategoria?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemCursosDelete(idcurso?: string, nombre?: string, descripcion?: string, descripcion2?: string, imagen?: string, costo?: string, moneda?: string, idtipocurso?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idcategoria?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemCursosDelete(idcurso?: string, nombre?: string, descripcion?: string, descripcion2?: string, imagen?: string, costo?: string, moneda?: string, idtipocurso?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idcategoria?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (descripcion !== undefined && descripcion !== null) {\n            queryParameters = queryParameters.set('descripcion', <any>descripcion);\n        }\n        if (descripcion2 !== undefined && descripcion2 !== null) {\n            queryParameters = queryParameters.set('descripcion2', <any>descripcion2);\n        }\n        if (imagen !== undefined && imagen !== null) {\n            queryParameters = queryParameters.set('imagen', <any>imagen);\n        }\n        if (costo !== undefined && costo !== null) {\n            queryParameters = queryParameters.set('costo', <any>costo);\n        }\n        if (moneda !== undefined && moneda !== null) {\n            queryParameters = queryParameters.set('moneda', <any>moneda);\n        }\n        if (idtipocurso !== undefined && idtipocurso !== null) {\n            queryParameters = queryParameters.set('idtipocurso', <any>idtipocurso);\n        }\n        if (fechahoraInicio !== undefined && fechahoraInicio !== null) {\n            queryParameters = queryParameters.set('fechahora_inicio', <any>fechahoraInicio);\n        }\n        if (fechahoraFin !== undefined && fechahoraFin !== null) {\n            queryParameters = queryParameters.set('fechahora_fin', <any>fechahoraFin);\n        }\n        if (lugar !== undefined && lugar !== null) {\n            queryParameters = queryParameters.set('lugar', <any>lugar);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (idcategoria !== undefined && idcategoria !== null) {\n            queryParameters = queryParameters.set('idcategoria', <any>idcategoria);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_cursos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idcurso \n     * @param nombre \n     * @param descripcion \n     * @param descripcion2 \n     * @param imagen \n     * @param costo \n     * @param moneda \n     * @param idtipocurso \n     * @param fechahoraInicio \n     * @param fechahoraFin \n     * @param lugar \n     * @param fecharegistro \n     * @param idcategoria \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemCursosGet(idcurso?: string, nombre?: string, descripcion?: string, descripcion2?: string, imagen?: string, costo?: string, moneda?: string, idtipocurso?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idcategoria?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemCursos>>;\n    public idemCursosGet(idcurso?: string, nombre?: string, descripcion?: string, descripcion2?: string, imagen?: string, costo?: string, moneda?: string, idtipocurso?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idcategoria?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemCursos>>>;\n    public idemCursosGet(idcurso?: string, nombre?: string, descripcion?: string, descripcion2?: string, imagen?: string, costo?: string, moneda?: string, idtipocurso?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idcategoria?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemCursos>>>;\n    public idemCursosGet(idcurso?: string, nombre?: string, descripcion?: string, descripcion2?: string, imagen?: string, costo?: string, moneda?: string, idtipocurso?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idcategoria?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (descripcion !== undefined && descripcion !== null) {\n            queryParameters = queryParameters.set('descripcion', <any>descripcion);\n        }\n        if (descripcion2 !== undefined && descripcion2 !== null) {\n            queryParameters = queryParameters.set('descripcion2', <any>descripcion2);\n        }\n        if (imagen !== undefined && imagen !== null) {\n            queryParameters = queryParameters.set('imagen', <any>imagen);\n        }\n        if (costo !== undefined && costo !== null) {\n            queryParameters = queryParameters.set('costo', <any>costo);\n        }\n        if (moneda !== undefined && moneda !== null) {\n            queryParameters = queryParameters.set('moneda', <any>moneda);\n        }\n        if (idtipocurso !== undefined && idtipocurso !== null) {\n            queryParameters = queryParameters.set('idtipocurso', <any>idtipocurso);\n        }\n        if (fechahoraInicio !== undefined && fechahoraInicio !== null) {\n            queryParameters = queryParameters.set('fechahora_inicio', <any>fechahoraInicio);\n        }\n        if (fechahoraFin !== undefined && fechahoraFin !== null) {\n            queryParameters = queryParameters.set('fechahora_fin', <any>fechahoraFin);\n        }\n        if (lugar !== undefined && lugar !== null) {\n            queryParameters = queryParameters.set('lugar', <any>lugar);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (idcategoria !== undefined && idcategoria !== null) {\n            queryParameters = queryParameters.set('idcategoria', <any>idcategoria);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemCursos>>(`${this.basePath}/idem_cursos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idcurso \n     * @param nombre \n     * @param descripcion \n     * @param descripcion2 \n     * @param imagen \n     * @param costo \n     * @param moneda \n     * @param idtipocurso \n     * @param fechahoraInicio \n     * @param fechahoraFin \n     * @param lugar \n     * @param fecharegistro \n     * @param idcategoria \n     * @param idemCursos idem_cursos\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemCursosPatch(idcurso?: string, nombre?: string, descripcion?: string, descripcion2?: string, imagen?: string, costo?: string, moneda?: string, idtipocurso?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idcategoria?: string, idemCursos?: IdemCursos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemCursosPatch(idcurso?: string, nombre?: string, descripcion?: string, descripcion2?: string, imagen?: string, costo?: string, moneda?: string, idtipocurso?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idcategoria?: string, idemCursos?: IdemCursos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemCursosPatch(idcurso?: string, nombre?: string, descripcion?: string, descripcion2?: string, imagen?: string, costo?: string, moneda?: string, idtipocurso?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idcategoria?: string, idemCursos?: IdemCursos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemCursosPatch(idcurso?: string, nombre?: string, descripcion?: string, descripcion2?: string, imagen?: string, costo?: string, moneda?: string, idtipocurso?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idcategoria?: string, idemCursos?: IdemCursos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (descripcion !== undefined && descripcion !== null) {\n            queryParameters = queryParameters.set('descripcion', <any>descripcion);\n        }\n        if (descripcion2 !== undefined && descripcion2 !== null) {\n            queryParameters = queryParameters.set('descripcion2', <any>descripcion2);\n        }\n        if (imagen !== undefined && imagen !== null) {\n            queryParameters = queryParameters.set('imagen', <any>imagen);\n        }\n        if (costo !== undefined && costo !== null) {\n            queryParameters = queryParameters.set('costo', <any>costo);\n        }\n        if (moneda !== undefined && moneda !== null) {\n            queryParameters = queryParameters.set('moneda', <any>moneda);\n        }\n        if (idtipocurso !== undefined && idtipocurso !== null) {\n            queryParameters = queryParameters.set('idtipocurso', <any>idtipocurso);\n        }\n        if (fechahoraInicio !== undefined && fechahoraInicio !== null) {\n            queryParameters = queryParameters.set('fechahora_inicio', <any>fechahoraInicio);\n        }\n        if (fechahoraFin !== undefined && fechahoraFin !== null) {\n            queryParameters = queryParameters.set('fechahora_fin', <any>fechahoraFin);\n        }\n        if (lugar !== undefined && lugar !== null) {\n            queryParameters = queryParameters.set('lugar', <any>lugar);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (idcategoria !== undefined && idcategoria !== null) {\n            queryParameters = queryParameters.set('idcategoria', <any>idcategoria);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_cursos`,\n            idemCursos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idemCursos idem_cursos\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemCursosPost(idemCursos?: IdemCursos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemCursosPost(idemCursos?: IdemCursos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemCursosPost(idemCursos?: IdemCursos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemCursosPost(idemCursos?: IdemCursos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_cursos`,\n            idemCursos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemDocentes } from '../model/idemDocentes';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemDocentesService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param dni \n     * @param tituloProfesional \n     * @param descripcion \n     * @param email \n     * @param idestado \n     * @param fecharegistro \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemDocentesDelete(dni?: string, tituloProfesional?: string, descripcion?: string, email?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemDocentesDelete(dni?: string, tituloProfesional?: string, descripcion?: string, email?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemDocentesDelete(dni?: string, tituloProfesional?: string, descripcion?: string, email?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemDocentesDelete(dni?: string, tituloProfesional?: string, descripcion?: string, email?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (tituloProfesional !== undefined && tituloProfesional !== null) {\n            queryParameters = queryParameters.set('titulo_profesional', <any>tituloProfesional);\n        }\n        if (descripcion !== undefined && descripcion !== null) {\n            queryParameters = queryParameters.set('descripcion', <any>descripcion);\n        }\n        if (email !== undefined && email !== null) {\n            queryParameters = queryParameters.set('email', <any>email);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_docentes`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param dni \n     * @param tituloProfesional \n     * @param descripcion \n     * @param email \n     * @param idestado \n     * @param fecharegistro \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemDocentesGet(dni?: string, tituloProfesional?: string, descripcion?: string, email?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemDocentes>>;\n    public idemDocentesGet(dni?: string, tituloProfesional?: string, descripcion?: string, email?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemDocentes>>>;\n    public idemDocentesGet(dni?: string, tituloProfesional?: string, descripcion?: string, email?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemDocentes>>>;\n    public idemDocentesGet(dni?: string, tituloProfesional?: string, descripcion?: string, email?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (tituloProfesional !== undefined && tituloProfesional !== null) {\n            queryParameters = queryParameters.set('titulo_profesional', <any>tituloProfesional);\n        }\n        if (descripcion !== undefined && descripcion !== null) {\n            queryParameters = queryParameters.set('descripcion', <any>descripcion);\n        }\n        if (email !== undefined && email !== null) {\n            queryParameters = queryParameters.set('email', <any>email);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemDocentes>>(`${this.basePath}/idem_docentes`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param dni \n     * @param tituloProfesional \n     * @param descripcion \n     * @param email \n     * @param idestado \n     * @param fecharegistro \n     * @param idemDocentes idem_docentes\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemDocentesPatch(dni?: string, tituloProfesional?: string, descripcion?: string, email?: string, idestado?: string, fecharegistro?: string, idemDocentes?: IdemDocentes, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemDocentesPatch(dni?: string, tituloProfesional?: string, descripcion?: string, email?: string, idestado?: string, fecharegistro?: string, idemDocentes?: IdemDocentes, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemDocentesPatch(dni?: string, tituloProfesional?: string, descripcion?: string, email?: string, idestado?: string, fecharegistro?: string, idemDocentes?: IdemDocentes, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemDocentesPatch(dni?: string, tituloProfesional?: string, descripcion?: string, email?: string, idestado?: string, fecharegistro?: string, idemDocentes?: IdemDocentes, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (tituloProfesional !== undefined && tituloProfesional !== null) {\n            queryParameters = queryParameters.set('titulo_profesional', <any>tituloProfesional);\n        }\n        if (descripcion !== undefined && descripcion !== null) {\n            queryParameters = queryParameters.set('descripcion', <any>descripcion);\n        }\n        if (email !== undefined && email !== null) {\n            queryParameters = queryParameters.set('email', <any>email);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_docentes`,\n            idemDocentes,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idemDocentes idem_docentes\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemDocentesPost(idemDocentes?: IdemDocentes, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemDocentesPost(idemDocentes?: IdemDocentes, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemDocentesPost(idemDocentes?: IdemDocentes, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemDocentesPost(idemDocentes?: IdemDocentes, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_docentes`,\n            idemDocentes,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemEstados } from '../model/idemEstados';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemEstadosService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param ideestado \n     * @param nombre \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemEstadosDelete(ideestado?: string, nombre?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemEstadosDelete(ideestado?: string, nombre?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemEstadosDelete(ideestado?: string, nombre?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemEstadosDelete(ideestado?: string, nombre?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (ideestado !== undefined && ideestado !== null) {\n            queryParameters = queryParameters.set('ideestado', <any>ideestado);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_estados`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param ideestado \n     * @param nombre \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemEstadosGet(ideestado?: string, nombre?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemEstados>>;\n    public idemEstadosGet(ideestado?: string, nombre?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemEstados>>>;\n    public idemEstadosGet(ideestado?: string, nombre?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemEstados>>>;\n    public idemEstadosGet(ideestado?: string, nombre?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (ideestado !== undefined && ideestado !== null) {\n            queryParameters = queryParameters.set('ideestado', <any>ideestado);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemEstados>>(`${this.basePath}/idem_estados`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param ideestado \n     * @param nombre \n     * @param idemEstados idem_estados\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemEstadosPatch(ideestado?: string, nombre?: string, idemEstados?: IdemEstados, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemEstadosPatch(ideestado?: string, nombre?: string, idemEstados?: IdemEstados, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemEstadosPatch(ideestado?: string, nombre?: string, idemEstados?: IdemEstados, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemEstadosPatch(ideestado?: string, nombre?: string, idemEstados?: IdemEstados, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (ideestado !== undefined && ideestado !== null) {\n            queryParameters = queryParameters.set('ideestado', <any>ideestado);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_estados`,\n            idemEstados,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idemEstados idem_estados\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemEstadosPost(idemEstados?: IdemEstados, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemEstadosPost(idemEstados?: IdemEstados, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemEstadosPost(idemEstados?: IdemEstados, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemEstadosPost(idemEstados?: IdemEstados, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_estados`,\n            idemEstados,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemMatriculas } from '../model/idemMatriculas';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemMatriculasService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * idem_rel_cursos_alumnos\n     * \n     * @param idmatricula \n     * @param dni \n     * @param idcurso \n     * @param fecharegistro \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemMatriculasDelete(idmatricula?: string, dni?: string, idcurso?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemMatriculasDelete(idmatricula?: string, dni?: string, idcurso?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemMatriculasDelete(idmatricula?: string, dni?: string, idcurso?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemMatriculasDelete(idmatricula?: string, dni?: string, idcurso?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idmatricula !== undefined && idmatricula !== null) {\n            queryParameters = queryParameters.set('idmatricula', <any>idmatricula);\n        }\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_matriculas`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * idem_rel_cursos_alumnos\n     * \n     * @param idmatricula \n     * @param dni \n     * @param idcurso \n     * @param fecharegistro \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemMatriculasGet(idmatricula?: string, dni?: string, idcurso?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemMatriculas>>;\n    public idemMatriculasGet(idmatricula?: string, dni?: string, idcurso?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemMatriculas>>>;\n    public idemMatriculasGet(idmatricula?: string, dni?: string, idcurso?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemMatriculas>>>;\n    public idemMatriculasGet(idmatricula?: string, dni?: string, idcurso?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idmatricula !== undefined && idmatricula !== null) {\n            queryParameters = queryParameters.set('idmatricula', <any>idmatricula);\n        }\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemMatriculas>>(`${this.basePath}/idem_matriculas`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * idem_rel_cursos_alumnos\n     * \n     * @param idmatricula \n     * @param dni \n     * @param idcurso \n     * @param fecharegistro \n     * @param idemMatriculas idem_matriculas\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemMatriculasPatch(idmatricula?: string, dni?: string, idcurso?: string, fecharegistro?: string, idemMatriculas?: IdemMatriculas, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemMatriculasPatch(idmatricula?: string, dni?: string, idcurso?: string, fecharegistro?: string, idemMatriculas?: IdemMatriculas, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemMatriculasPatch(idmatricula?: string, dni?: string, idcurso?: string, fecharegistro?: string, idemMatriculas?: IdemMatriculas, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemMatriculasPatch(idmatricula?: string, dni?: string, idcurso?: string, fecharegistro?: string, idemMatriculas?: IdemMatriculas, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idmatricula !== undefined && idmatricula !== null) {\n            queryParameters = queryParameters.set('idmatricula', <any>idmatricula);\n        }\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_matriculas`,\n            idemMatriculas,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * idem_rel_cursos_alumnos\n     * \n     * @param idemMatriculas idem_matriculas\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemMatriculasPost(idemMatriculas?: IdemMatriculas, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemMatriculasPost(idemMatriculas?: IdemMatriculas, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemMatriculasPost(idemMatriculas?: IdemMatriculas, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemMatriculasPost(idemMatriculas?: IdemMatriculas, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_matriculas`,\n            idemMatriculas,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemModulos } from '../model/idemModulos';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemModulosService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param idmodulo \n     * @param nombre \n     * @param dniProfesor \n     * @param imagen \n     * @param video \n     * @param descripcion \n     * @param idestado \n     * @param fecharegistro \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemModulosDelete(idmodulo?: string, nombre?: string, dniProfesor?: string, imagen?: string, video?: string, descripcion?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemModulosDelete(idmodulo?: string, nombre?: string, dniProfesor?: string, imagen?: string, video?: string, descripcion?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemModulosDelete(idmodulo?: string, nombre?: string, dniProfesor?: string, imagen?: string, video?: string, descripcion?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemModulosDelete(idmodulo?: string, nombre?: string, dniProfesor?: string, imagen?: string, video?: string, descripcion?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idmodulo !== undefined && idmodulo !== null) {\n            queryParameters = queryParameters.set('idmodulo', <any>idmodulo);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (dniProfesor !== undefined && dniProfesor !== null) {\n            queryParameters = queryParameters.set('dni_profesor', <any>dniProfesor);\n        }\n        if (imagen !== undefined && imagen !== null) {\n            queryParameters = queryParameters.set('imagen', <any>imagen);\n        }\n        if (video !== undefined && video !== null) {\n            queryParameters = queryParameters.set('video', <any>video);\n        }\n        if (descripcion !== undefined && descripcion !== null) {\n            queryParameters = queryParameters.set('descripcion', <any>descripcion);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_modulos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idmodulo \n     * @param nombre \n     * @param dniProfesor \n     * @param imagen \n     * @param video \n     * @param descripcion \n     * @param idestado \n     * @param fecharegistro \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemModulosGet(idmodulo?: string, nombre?: string, dniProfesor?: string, imagen?: string, video?: string, descripcion?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemModulos>>;\n    public idemModulosGet(idmodulo?: string, nombre?: string, dniProfesor?: string, imagen?: string, video?: string, descripcion?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemModulos>>>;\n    public idemModulosGet(idmodulo?: string, nombre?: string, dniProfesor?: string, imagen?: string, video?: string, descripcion?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemModulos>>>;\n    public idemModulosGet(idmodulo?: string, nombre?: string, dniProfesor?: string, imagen?: string, video?: string, descripcion?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idmodulo !== undefined && idmodulo !== null) {\n            queryParameters = queryParameters.set('idmodulo', <any>idmodulo);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (dniProfesor !== undefined && dniProfesor !== null) {\n            queryParameters = queryParameters.set('dni_profesor', <any>dniProfesor);\n        }\n        if (imagen !== undefined && imagen !== null) {\n            queryParameters = queryParameters.set('imagen', <any>imagen);\n        }\n        if (video !== undefined && video !== null) {\n            queryParameters = queryParameters.set('video', <any>video);\n        }\n        if (descripcion !== undefined && descripcion !== null) {\n            queryParameters = queryParameters.set('descripcion', <any>descripcion);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemModulos>>(`${this.basePath}/idem_modulos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idmodulo \n     * @param nombre \n     * @param dniProfesor \n     * @param imagen \n     * @param video \n     * @param descripcion \n     * @param idestado \n     * @param fecharegistro \n     * @param idemModulos idem_modulos\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemModulosPatch(idmodulo?: string, nombre?: string, dniProfesor?: string, imagen?: string, video?: string, descripcion?: string, idestado?: string, fecharegistro?: string, idemModulos?: IdemModulos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemModulosPatch(idmodulo?: string, nombre?: string, dniProfesor?: string, imagen?: string, video?: string, descripcion?: string, idestado?: string, fecharegistro?: string, idemModulos?: IdemModulos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemModulosPatch(idmodulo?: string, nombre?: string, dniProfesor?: string, imagen?: string, video?: string, descripcion?: string, idestado?: string, fecharegistro?: string, idemModulos?: IdemModulos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemModulosPatch(idmodulo?: string, nombre?: string, dniProfesor?: string, imagen?: string, video?: string, descripcion?: string, idestado?: string, fecharegistro?: string, idemModulos?: IdemModulos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idmodulo !== undefined && idmodulo !== null) {\n            queryParameters = queryParameters.set('idmodulo', <any>idmodulo);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (dniProfesor !== undefined && dniProfesor !== null) {\n            queryParameters = queryParameters.set('dni_profesor', <any>dniProfesor);\n        }\n        if (imagen !== undefined && imagen !== null) {\n            queryParameters = queryParameters.set('imagen', <any>imagen);\n        }\n        if (video !== undefined && video !== null) {\n            queryParameters = queryParameters.set('video', <any>video);\n        }\n        if (descripcion !== undefined && descripcion !== null) {\n            queryParameters = queryParameters.set('descripcion', <any>descripcion);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_modulos`,\n            idemModulos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idemModulos idem_modulos\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemModulosPost(idemModulos?: IdemModulos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemModulosPost(idemModulos?: IdemModulos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemModulosPost(idemModulos?: IdemModulos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemModulosPost(idemModulos?: IdemModulos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_modulos`,\n            idemModulos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemModulosComentarios } from '../model/idemModulosComentarios';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemModulosComentariosService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param idcomentario \n     * @param idmodulo \n     * @param idcurso \n     * @param dni \n     * @param titulo \n     * @param comentario \n     * @param idestado \n     * @param fecharegistro \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemModulosComentariosDelete(idcomentario?: string, idmodulo?: string, idcurso?: string, dni?: string, titulo?: string, comentario?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemModulosComentariosDelete(idcomentario?: string, idmodulo?: string, idcurso?: string, dni?: string, titulo?: string, comentario?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemModulosComentariosDelete(idcomentario?: string, idmodulo?: string, idcurso?: string, dni?: string, titulo?: string, comentario?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemModulosComentariosDelete(idcomentario?: string, idmodulo?: string, idcurso?: string, dni?: string, titulo?: string, comentario?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcomentario !== undefined && idcomentario !== null) {\n            queryParameters = queryParameters.set('idcomentario', <any>idcomentario);\n        }\n        if (idmodulo !== undefined && idmodulo !== null) {\n            queryParameters = queryParameters.set('idmodulo', <any>idmodulo);\n        }\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (titulo !== undefined && titulo !== null) {\n            queryParameters = queryParameters.set('titulo', <any>titulo);\n        }\n        if (comentario !== undefined && comentario !== null) {\n            queryParameters = queryParameters.set('comentario', <any>comentario);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_modulos_comentarios`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idcomentario \n     * @param idmodulo \n     * @param idcurso \n     * @param dni \n     * @param titulo \n     * @param comentario \n     * @param idestado \n     * @param fecharegistro \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemModulosComentariosGet(idcomentario?: string, idmodulo?: string, idcurso?: string, dni?: string, titulo?: string, comentario?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemModulosComentarios>>;\n    public idemModulosComentariosGet(idcomentario?: string, idmodulo?: string, idcurso?: string, dni?: string, titulo?: string, comentario?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemModulosComentarios>>>;\n    public idemModulosComentariosGet(idcomentario?: string, idmodulo?: string, idcurso?: string, dni?: string, titulo?: string, comentario?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemModulosComentarios>>>;\n    public idemModulosComentariosGet(idcomentario?: string, idmodulo?: string, idcurso?: string, dni?: string, titulo?: string, comentario?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcomentario !== undefined && idcomentario !== null) {\n            queryParameters = queryParameters.set('idcomentario', <any>idcomentario);\n        }\n        if (idmodulo !== undefined && idmodulo !== null) {\n            queryParameters = queryParameters.set('idmodulo', <any>idmodulo);\n        }\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (titulo !== undefined && titulo !== null) {\n            queryParameters = queryParameters.set('titulo', <any>titulo);\n        }\n        if (comentario !== undefined && comentario !== null) {\n            queryParameters = queryParameters.set('comentario', <any>comentario);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemModulosComentarios>>(`${this.basePath}/idem_modulos_comentarios`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idcomentario \n     * @param idmodulo \n     * @param idcurso \n     * @param dni \n     * @param titulo \n     * @param comentario \n     * @param idestado \n     * @param fecharegistro \n     * @param idemModulosComentarios idem_modulos_comentarios\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemModulosComentariosPatch(idcomentario?: string, idmodulo?: string, idcurso?: string, dni?: string, titulo?: string, comentario?: string, idestado?: string, fecharegistro?: string, idemModulosComentarios?: IdemModulosComentarios, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemModulosComentariosPatch(idcomentario?: string, idmodulo?: string, idcurso?: string, dni?: string, titulo?: string, comentario?: string, idestado?: string, fecharegistro?: string, idemModulosComentarios?: IdemModulosComentarios, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemModulosComentariosPatch(idcomentario?: string, idmodulo?: string, idcurso?: string, dni?: string, titulo?: string, comentario?: string, idestado?: string, fecharegistro?: string, idemModulosComentarios?: IdemModulosComentarios, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemModulosComentariosPatch(idcomentario?: string, idmodulo?: string, idcurso?: string, dni?: string, titulo?: string, comentario?: string, idestado?: string, fecharegistro?: string, idemModulosComentarios?: IdemModulosComentarios, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcomentario !== undefined && idcomentario !== null) {\n            queryParameters = queryParameters.set('idcomentario', <any>idcomentario);\n        }\n        if (idmodulo !== undefined && idmodulo !== null) {\n            queryParameters = queryParameters.set('idmodulo', <any>idmodulo);\n        }\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (titulo !== undefined && titulo !== null) {\n            queryParameters = queryParameters.set('titulo', <any>titulo);\n        }\n        if (comentario !== undefined && comentario !== null) {\n            queryParameters = queryParameters.set('comentario', <any>comentario);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_modulos_comentarios`,\n            idemModulosComentarios,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idemModulosComentarios idem_modulos_comentarios\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemModulosComentariosPost(idemModulosComentarios?: IdemModulosComentarios, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemModulosComentariosPost(idemModulosComentarios?: IdemModulosComentarios, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemModulosComentariosPost(idemModulosComentarios?: IdemModulosComentarios, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemModulosComentariosPost(idemModulosComentarios?: IdemModulosComentarios, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_modulos_comentarios`,\n            idemModulosComentarios,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemPagos } from '../model/idemPagos';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemPagosService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param idpago \n     * @param idmatricula \n     * @param idcurso \n     * @param fechaProgramada \n     * @param monto \n     * @param comentario \n     * @param idestado \n     * @param fecharegistro \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemPagosDelete(idpago?: string, idmatricula?: string, idcurso?: string, fechaProgramada?: string, monto?: string, comentario?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemPagosDelete(idpago?: string, idmatricula?: string, idcurso?: string, fechaProgramada?: string, monto?: string, comentario?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemPagosDelete(idpago?: string, idmatricula?: string, idcurso?: string, fechaProgramada?: string, monto?: string, comentario?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemPagosDelete(idpago?: string, idmatricula?: string, idcurso?: string, fechaProgramada?: string, monto?: string, comentario?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idpago !== undefined && idpago !== null) {\n            queryParameters = queryParameters.set('idpago', <any>idpago);\n        }\n        if (idmatricula !== undefined && idmatricula !== null) {\n            queryParameters = queryParameters.set('idmatricula', <any>idmatricula);\n        }\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (fechaProgramada !== undefined && fechaProgramada !== null) {\n            queryParameters = queryParameters.set('fecha_programada', <any>fechaProgramada);\n        }\n        if (monto !== undefined && monto !== null) {\n            queryParameters = queryParameters.set('monto', <any>monto);\n        }\n        if (comentario !== undefined && comentario !== null) {\n            queryParameters = queryParameters.set('comentario', <any>comentario);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_pagos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idpago \n     * @param idmatricula \n     * @param idcurso \n     * @param fechaProgramada \n     * @param monto \n     * @param comentario \n     * @param idestado \n     * @param fecharegistro \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemPagosGet(idpago?: string, idmatricula?: string, idcurso?: string, fechaProgramada?: string, monto?: string, comentario?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemPagos>>;\n    public idemPagosGet(idpago?: string, idmatricula?: string, idcurso?: string, fechaProgramada?: string, monto?: string, comentario?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemPagos>>>;\n    public idemPagosGet(idpago?: string, idmatricula?: string, idcurso?: string, fechaProgramada?: string, monto?: string, comentario?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemPagos>>>;\n    public idemPagosGet(idpago?: string, idmatricula?: string, idcurso?: string, fechaProgramada?: string, monto?: string, comentario?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idpago !== undefined && idpago !== null) {\n            queryParameters = queryParameters.set('idpago', <any>idpago);\n        }\n        if (idmatricula !== undefined && idmatricula !== null) {\n            queryParameters = queryParameters.set('idmatricula', <any>idmatricula);\n        }\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (fechaProgramada !== undefined && fechaProgramada !== null) {\n            queryParameters = queryParameters.set('fecha_programada', <any>fechaProgramada);\n        }\n        if (monto !== undefined && monto !== null) {\n            queryParameters = queryParameters.set('monto', <any>monto);\n        }\n        if (comentario !== undefined && comentario !== null) {\n            queryParameters = queryParameters.set('comentario', <any>comentario);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemPagos>>(`${this.basePath}/idem_pagos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idpago \n     * @param idmatricula \n     * @param idcurso \n     * @param fechaProgramada \n     * @param monto \n     * @param comentario \n     * @param idestado \n     * @param fecharegistro \n     * @param idemPagos idem_pagos\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemPagosPatch(idpago?: string, idmatricula?: string, idcurso?: string, fechaProgramada?: string, monto?: string, comentario?: string, idestado?: string, fecharegistro?: string, idemPagos?: IdemPagos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemPagosPatch(idpago?: string, idmatricula?: string, idcurso?: string, fechaProgramada?: string, monto?: string, comentario?: string, idestado?: string, fecharegistro?: string, idemPagos?: IdemPagos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemPagosPatch(idpago?: string, idmatricula?: string, idcurso?: string, fechaProgramada?: string, monto?: string, comentario?: string, idestado?: string, fecharegistro?: string, idemPagos?: IdemPagos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemPagosPatch(idpago?: string, idmatricula?: string, idcurso?: string, fechaProgramada?: string, monto?: string, comentario?: string, idestado?: string, fecharegistro?: string, idemPagos?: IdemPagos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idpago !== undefined && idpago !== null) {\n            queryParameters = queryParameters.set('idpago', <any>idpago);\n        }\n        if (idmatricula !== undefined && idmatricula !== null) {\n            queryParameters = queryParameters.set('idmatricula', <any>idmatricula);\n        }\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (fechaProgramada !== undefined && fechaProgramada !== null) {\n            queryParameters = queryParameters.set('fecha_programada', <any>fechaProgramada);\n        }\n        if (monto !== undefined && monto !== null) {\n            queryParameters = queryParameters.set('monto', <any>monto);\n        }\n        if (comentario !== undefined && comentario !== null) {\n            queryParameters = queryParameters.set('comentario', <any>comentario);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_pagos`,\n            idemPagos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idemPagos idem_pagos\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemPagosPost(idemPagos?: IdemPagos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemPagosPost(idemPagos?: IdemPagos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemPagosPost(idemPagos?: IdemPagos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemPagosPost(idemPagos?: IdemPagos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_pagos`,\n            idemPagos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemPermisos } from '../model/idemPermisos';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemPermisosService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * el campo permiso:\n     * 0 - Solo ver  (R) 1- Ver y modificar  (RU) 2- ver,modificar y crear  (CRU) 3- ver,modificar crear y eliminar (CRUD)  \n     * @param idapartado \n     * @param idcargo \n     * @param permiso \n     * @param fecharegistro \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemPermisosDelete(idapartado?: string, idcargo?: string, permiso?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemPermisosDelete(idapartado?: string, idcargo?: string, permiso?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemPermisosDelete(idapartado?: string, idcargo?: string, permiso?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemPermisosDelete(idapartado?: string, idcargo?: string, permiso?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idapartado !== undefined && idapartado !== null) {\n            queryParameters = queryParameters.set('idapartado', <any>idapartado);\n        }\n        if (idcargo !== undefined && idcargo !== null) {\n            queryParameters = queryParameters.set('idcargo', <any>idcargo);\n        }\n        if (permiso !== undefined && permiso !== null) {\n            queryParameters = queryParameters.set('permiso', <any>permiso);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_permisos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * el campo permiso:\n     * 0 - Solo ver  (R) 1- Ver y modificar  (RU) 2- ver,modificar y crear  (CRU) 3- ver,modificar crear y eliminar (CRUD)  \n     * @param idapartado \n     * @param idcargo \n     * @param permiso \n     * @param fecharegistro \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemPermisosGet(idapartado?: string, idcargo?: string, permiso?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemPermisos>>;\n    public idemPermisosGet(idapartado?: string, idcargo?: string, permiso?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemPermisos>>>;\n    public idemPermisosGet(idapartado?: string, idcargo?: string, permiso?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemPermisos>>>;\n    public idemPermisosGet(idapartado?: string, idcargo?: string, permiso?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idapartado !== undefined && idapartado !== null) {\n            queryParameters = queryParameters.set('idapartado', <any>idapartado);\n        }\n        if (idcargo !== undefined && idcargo !== null) {\n            queryParameters = queryParameters.set('idcargo', <any>idcargo);\n        }\n        if (permiso !== undefined && permiso !== null) {\n            queryParameters = queryParameters.set('permiso', <any>permiso);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemPermisos>>(`${this.basePath}/idem_permisos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * el campo permiso:\n     * 0 - Solo ver  (R) 1- Ver y modificar  (RU) 2- ver,modificar y crear  (CRU) 3- ver,modificar crear y eliminar (CRUD)  \n     * @param idapartado \n     * @param idcargo \n     * @param permiso \n     * @param fecharegistro \n     * @param idemPermisos idem_permisos\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemPermisosPatch(idapartado?: string, idcargo?: string, permiso?: string, fecharegistro?: string, idemPermisos?: IdemPermisos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemPermisosPatch(idapartado?: string, idcargo?: string, permiso?: string, fecharegistro?: string, idemPermisos?: IdemPermisos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemPermisosPatch(idapartado?: string, idcargo?: string, permiso?: string, fecharegistro?: string, idemPermisos?: IdemPermisos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemPermisosPatch(idapartado?: string, idcargo?: string, permiso?: string, fecharegistro?: string, idemPermisos?: IdemPermisos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idapartado !== undefined && idapartado !== null) {\n            queryParameters = queryParameters.set('idapartado', <any>idapartado);\n        }\n        if (idcargo !== undefined && idcargo !== null) {\n            queryParameters = queryParameters.set('idcargo', <any>idcargo);\n        }\n        if (permiso !== undefined && permiso !== null) {\n            queryParameters = queryParameters.set('permiso', <any>permiso);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_permisos`,\n            idemPermisos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * el campo permiso:\n     * 0 - Solo ver  (R) 1- Ver y modificar  (RU) 2- ver,modificar y crear  (CRU) 3- ver,modificar crear y eliminar (CRUD)  \n     * @param idemPermisos idem_permisos\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemPermisosPost(idemPermisos?: IdemPermisos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemPermisosPost(idemPermisos?: IdemPermisos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemPermisosPost(idemPermisos?: IdemPermisos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemPermisosPost(idemPermisos?: IdemPermisos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_permisos`,\n            idemPermisos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemPersonas } from '../model/idemPersonas';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemPersonasService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param dni \n     * @param nombres \n     * @param apellidoPa \n     * @param apellidoMa \n     * @param foto \n     * @param fechaNacimiento \n     * @param fecharegistro \n     * @param estado \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemPersonasDelete(dni?: string, nombres?: string, apellidoPa?: string, apellidoMa?: string, foto?: string, fechaNacimiento?: string, fecharegistro?: string, estado?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemPersonasDelete(dni?: string, nombres?: string, apellidoPa?: string, apellidoMa?: string, foto?: string, fechaNacimiento?: string, fecharegistro?: string, estado?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemPersonasDelete(dni?: string, nombres?: string, apellidoPa?: string, apellidoMa?: string, foto?: string, fechaNacimiento?: string, fecharegistro?: string, estado?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemPersonasDelete(dni?: string, nombres?: string, apellidoPa?: string, apellidoMa?: string, foto?: string, fechaNacimiento?: string, fecharegistro?: string, estado?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (nombres !== undefined && nombres !== null) {\n            queryParameters = queryParameters.set('nombres', <any>nombres);\n        }\n        if (apellidoPa !== undefined && apellidoPa !== null) {\n            queryParameters = queryParameters.set('apellido_pa', <any>apellidoPa);\n        }\n        if (apellidoMa !== undefined && apellidoMa !== null) {\n            queryParameters = queryParameters.set('apellido_ma', <any>apellidoMa);\n        }\n        if (foto !== undefined && foto !== null) {\n            queryParameters = queryParameters.set('foto', <any>foto);\n        }\n        if (fechaNacimiento !== undefined && fechaNacimiento !== null) {\n            queryParameters = queryParameters.set('fecha_nacimiento', <any>fechaNacimiento);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (estado !== undefined && estado !== null) {\n            queryParameters = queryParameters.set('estado', <any>estado);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_personas`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param dni \n     * @param nombres \n     * @param apellidoPa \n     * @param apellidoMa \n     * @param foto \n     * @param fechaNacimiento \n     * @param fecharegistro \n     * @param estado \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemPersonasGet(dni?: string, nombres?: string, apellidoPa?: string, apellidoMa?: string, foto?: string, fechaNacimiento?: string, fecharegistro?: string, estado?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemPersonas>>;\n    public idemPersonasGet(dni?: string, nombres?: string, apellidoPa?: string, apellidoMa?: string, foto?: string, fechaNacimiento?: string, fecharegistro?: string, estado?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemPersonas>>>;\n    public idemPersonasGet(dni?: string, nombres?: string, apellidoPa?: string, apellidoMa?: string, foto?: string, fechaNacimiento?: string, fecharegistro?: string, estado?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemPersonas>>>;\n    public idemPersonasGet(dni?: string, nombres?: string, apellidoPa?: string, apellidoMa?: string, foto?: string, fechaNacimiento?: string, fecharegistro?: string, estado?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (nombres !== undefined && nombres !== null) {\n            queryParameters = queryParameters.set('nombres', <any>nombres);\n        }\n        if (apellidoPa !== undefined && apellidoPa !== null) {\n            queryParameters = queryParameters.set('apellido_pa', <any>apellidoPa);\n        }\n        if (apellidoMa !== undefined && apellidoMa !== null) {\n            queryParameters = queryParameters.set('apellido_ma', <any>apellidoMa);\n        }\n        if (foto !== undefined && foto !== null) {\n            queryParameters = queryParameters.set('foto', <any>foto);\n        }\n        if (fechaNacimiento !== undefined && fechaNacimiento !== null) {\n            queryParameters = queryParameters.set('fecha_nacimiento', <any>fechaNacimiento);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (estado !== undefined && estado !== null) {\n            queryParameters = queryParameters.set('estado', <any>estado);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemPersonas>>(`${this.basePath}/idem_personas`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param dni \n     * @param nombres \n     * @param apellidoPa \n     * @param apellidoMa \n     * @param foto \n     * @param fechaNacimiento \n     * @param fecharegistro \n     * @param estado \n     * @param idemPersonas idem_personas\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemPersonasPatch(dni?: string, nombres?: string, apellidoPa?: string, apellidoMa?: string, foto?: string, fechaNacimiento?: string, fecharegistro?: string, estado?: string, idemPersonas?: IdemPersonas, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemPersonasPatch(dni?: string, nombres?: string, apellidoPa?: string, apellidoMa?: string, foto?: string, fechaNacimiento?: string, fecharegistro?: string, estado?: string, idemPersonas?: IdemPersonas, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemPersonasPatch(dni?: string, nombres?: string, apellidoPa?: string, apellidoMa?: string, foto?: string, fechaNacimiento?: string, fecharegistro?: string, estado?: string, idemPersonas?: IdemPersonas, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemPersonasPatch(dni?: string, nombres?: string, apellidoPa?: string, apellidoMa?: string, foto?: string, fechaNacimiento?: string, fecharegistro?: string, estado?: string, idemPersonas?: IdemPersonas, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (nombres !== undefined && nombres !== null) {\n            queryParameters = queryParameters.set('nombres', <any>nombres);\n        }\n        if (apellidoPa !== undefined && apellidoPa !== null) {\n            queryParameters = queryParameters.set('apellido_pa', <any>apellidoPa);\n        }\n        if (apellidoMa !== undefined && apellidoMa !== null) {\n            queryParameters = queryParameters.set('apellido_ma', <any>apellidoMa);\n        }\n        if (foto !== undefined && foto !== null) {\n            queryParameters = queryParameters.set('foto', <any>foto);\n        }\n        if (fechaNacimiento !== undefined && fechaNacimiento !== null) {\n            queryParameters = queryParameters.set('fecha_nacimiento', <any>fechaNacimiento);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (estado !== undefined && estado !== null) {\n            queryParameters = queryParameters.set('estado', <any>estado);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_personas`,\n            idemPersonas,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idemPersonas idem_personas\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemPersonasPost(idemPersonas?: IdemPersonas, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemPersonasPost(idemPersonas?: IdemPersonas, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemPersonasPost(idemPersonas?: IdemPersonas, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemPersonasPost(idemPersonas?: IdemPersonas, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_personas`,\n            idemPersonas,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemRelCursosModulos } from '../model/idemRelCursosModulos';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemRelCursosModulosService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param idcurso \n     * @param idmodulo \n     * @param fechahoraInicio \n     * @param fechahoraFin \n     * @param lugar \n     * @param fecharegistro \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemRelCursosModulosDelete(idcurso?: string, idmodulo?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemRelCursosModulosDelete(idcurso?: string, idmodulo?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemRelCursosModulosDelete(idcurso?: string, idmodulo?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemRelCursosModulosDelete(idcurso?: string, idmodulo?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (idmodulo !== undefined && idmodulo !== null) {\n            queryParameters = queryParameters.set('idmodulo', <any>idmodulo);\n        }\n        if (fechahoraInicio !== undefined && fechahoraInicio !== null) {\n            queryParameters = queryParameters.set('fechahora_inicio', <any>fechahoraInicio);\n        }\n        if (fechahoraFin !== undefined && fechahoraFin !== null) {\n            queryParameters = queryParameters.set('fechahora_fin', <any>fechahoraFin);\n        }\n        if (lugar !== undefined && lugar !== null) {\n            queryParameters = queryParameters.set('lugar', <any>lugar);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_rel_cursos_modulos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idcurso \n     * @param idmodulo \n     * @param fechahoraInicio \n     * @param fechahoraFin \n     * @param lugar \n     * @param fecharegistro \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemRelCursosModulosGet(idcurso?: string, idmodulo?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemRelCursosModulos>>;\n    public idemRelCursosModulosGet(idcurso?: string, idmodulo?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemRelCursosModulos>>>;\n    public idemRelCursosModulosGet(idcurso?: string, idmodulo?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemRelCursosModulos>>>;\n    public idemRelCursosModulosGet(idcurso?: string, idmodulo?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (idmodulo !== undefined && idmodulo !== null) {\n            queryParameters = queryParameters.set('idmodulo', <any>idmodulo);\n        }\n        if (fechahoraInicio !== undefined && fechahoraInicio !== null) {\n            queryParameters = queryParameters.set('fechahora_inicio', <any>fechahoraInicio);\n        }\n        if (fechahoraFin !== undefined && fechahoraFin !== null) {\n            queryParameters = queryParameters.set('fechahora_fin', <any>fechahoraFin);\n        }\n        if (lugar !== undefined && lugar !== null) {\n            queryParameters = queryParameters.set('lugar', <any>lugar);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemRelCursosModulos>>(`${this.basePath}/idem_rel_cursos_modulos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idcurso \n     * @param idmodulo \n     * @param fechahoraInicio \n     * @param fechahoraFin \n     * @param lugar \n     * @param fecharegistro \n     * @param idemRelCursosModulos idem_rel_cursos_modulos\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemRelCursosModulosPatch(idcurso?: string, idmodulo?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idemRelCursosModulos?: IdemRelCursosModulos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemRelCursosModulosPatch(idcurso?: string, idmodulo?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idemRelCursosModulos?: IdemRelCursosModulos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemRelCursosModulosPatch(idcurso?: string, idmodulo?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idemRelCursosModulos?: IdemRelCursosModulos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemRelCursosModulosPatch(idcurso?: string, idmodulo?: string, fechahoraInicio?: string, fechahoraFin?: string, lugar?: string, fecharegistro?: string, idemRelCursosModulos?: IdemRelCursosModulos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idcurso !== undefined && idcurso !== null) {\n            queryParameters = queryParameters.set('idcurso', <any>idcurso);\n        }\n        if (idmodulo !== undefined && idmodulo !== null) {\n            queryParameters = queryParameters.set('idmodulo', <any>idmodulo);\n        }\n        if (fechahoraInicio !== undefined && fechahoraInicio !== null) {\n            queryParameters = queryParameters.set('fechahora_inicio', <any>fechahoraInicio);\n        }\n        if (fechahoraFin !== undefined && fechahoraFin !== null) {\n            queryParameters = queryParameters.set('fechahora_fin', <any>fechahoraFin);\n        }\n        if (lugar !== undefined && lugar !== null) {\n            queryParameters = queryParameters.set('lugar', <any>lugar);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_rel_cursos_modulos`,\n            idemRelCursosModulos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idemRelCursosModulos idem_rel_cursos_modulos\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemRelCursosModulosPost(idemRelCursosModulos?: IdemRelCursosModulos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemRelCursosModulosPost(idemRelCursosModulos?: IdemRelCursosModulos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemRelCursosModulosPost(idemRelCursosModulos?: IdemRelCursosModulos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemRelCursosModulosPost(idemRelCursosModulos?: IdemRelCursosModulos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_rel_cursos_modulos`,\n            idemRelCursosModulos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { IdemUsuarios } from '../model/idemUsuarios';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IdemUsuariosService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param dni \n     * @param idcargo \n     * @param email \n     * @param password \n     * @param idestado \n     * @param fecharegistro \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemUsuariosDelete(dni?: string, idcargo?: string, email?: string, password?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemUsuariosDelete(dni?: string, idcargo?: string, email?: string, password?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemUsuariosDelete(dni?: string, idcargo?: string, email?: string, password?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemUsuariosDelete(dni?: string, idcargo?: string, email?: string, password?: string, idestado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (idcargo !== undefined && idcargo !== null) {\n            queryParameters = queryParameters.set('idcargo', <any>idcargo);\n        }\n        if (email !== undefined && email !== null) {\n            queryParameters = queryParameters.set('email', <any>email);\n        }\n        if (password !== undefined && password !== null) {\n            queryParameters = queryParameters.set('password', <any>password);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/idem_usuarios`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param dni \n     * @param idcargo \n     * @param email \n     * @param password \n     * @param idestado \n     * @param fecharegistro \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemUsuariosGet(dni?: string, idcargo?: string, email?: string, password?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<IdemUsuarios>>;\n    public idemUsuariosGet(dni?: string, idcargo?: string, email?: string, password?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<IdemUsuarios>>>;\n    public idemUsuariosGet(dni?: string, idcargo?: string, email?: string, password?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<IdemUsuarios>>>;\n    public idemUsuariosGet(dni?: string, idcargo?: string, email?: string, password?: string, idestado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (idcargo !== undefined && idcargo !== null) {\n            queryParameters = queryParameters.set('idcargo', <any>idcargo);\n        }\n        if (email !== undefined && email !== null) {\n            queryParameters = queryParameters.set('email', <any>email);\n        }\n        if (password !== undefined && password !== null) {\n            queryParameters = queryParameters.set('password', <any>password);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<IdemUsuarios>>(`${this.basePath}/idem_usuarios`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param dni \n     * @param idcargo \n     * @param email \n     * @param password \n     * @param idestado \n     * @param fecharegistro \n     * @param idemUsuarios idem_usuarios\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemUsuariosPatch(dni?: string, idcargo?: string, email?: string, password?: string, idestado?: string, fecharegistro?: string, idemUsuarios?: IdemUsuarios, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemUsuariosPatch(dni?: string, idcargo?: string, email?: string, password?: string, idestado?: string, fecharegistro?: string, idemUsuarios?: IdemUsuarios, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemUsuariosPatch(dni?: string, idcargo?: string, email?: string, password?: string, idestado?: string, fecharegistro?: string, idemUsuarios?: IdemUsuarios, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemUsuariosPatch(dni?: string, idcargo?: string, email?: string, password?: string, idestado?: string, fecharegistro?: string, idemUsuarios?: IdemUsuarios, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (dni !== undefined && dni !== null) {\n            queryParameters = queryParameters.set('dni', <any>dni);\n        }\n        if (idcargo !== undefined && idcargo !== null) {\n            queryParameters = queryParameters.set('idcargo', <any>idcargo);\n        }\n        if (email !== undefined && email !== null) {\n            queryParameters = queryParameters.set('email', <any>email);\n        }\n        if (password !== undefined && password !== null) {\n            queryParameters = queryParameters.set('password', <any>password);\n        }\n        if (idestado !== undefined && idestado !== null) {\n            queryParameters = queryParameters.set('idestado', <any>idestado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/idem_usuarios`,\n            idemUsuarios,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idemUsuarios idem_usuarios\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public idemUsuariosPost(idemUsuarios?: IdemUsuarios, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public idemUsuariosPost(idemUsuarios?: IdemUsuarios, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public idemUsuariosPost(idemUsuarios?: IdemUsuarios, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public idemUsuariosPost(idemUsuarios?: IdemUsuarios, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/idem_usuarios`,\n            idemUsuarios,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class IntrospectionService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * OpenAPI description (this document)\n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public rootGet(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public rootGet(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public rootGet(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public rootGet(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/openapi+json',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PostgREST API\n * standard public schema\n *\n * OpenAPI spec version: 7.0.0 (2b61a63)\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { ItemTipocursos } from '../model/itemTipocursos';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class ItemTipocursosService {\n\n    protected basePath = 'http://168.138.150.197:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param idtipocurso \n     * @param nombre \n     * @param estado \n     * @param fecharegistro \n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public itemTipocursosDelete(idtipocurso?: string, nombre?: string, estado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public itemTipocursosDelete(idtipocurso?: string, nombre?: string, estado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public itemTipocursosDelete(idtipocurso?: string, nombre?: string, estado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public itemTipocursosDelete(idtipocurso?: string, nombre?: string, estado?: string, fecharegistro?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idtipocurso !== undefined && idtipocurso !== null) {\n            queryParameters = queryParameters.set('idtipocurso', <any>idtipocurso);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (estado !== undefined && estado !== null) {\n            queryParameters = queryParameters.set('estado', <any>estado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/item_tipocursos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idtipocurso \n     * @param nombre \n     * @param estado \n     * @param fecharegistro \n     * @param select Filtering Columns\n     * @param order Ordering\n     * @param range Limiting and Pagination\n     * @param rangeUnit Limiting and Pagination\n     * @param offset Limiting and Pagination\n     * @param limit Limiting and Pagination\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public itemTipocursosGet(idtipocurso?: string, nombre?: string, estado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'body', reportProgress?: boolean): Observable<Array<ItemTipocursos>>;\n    public itemTipocursosGet(idtipocurso?: string, nombre?: string, estado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<ItemTipocursos>>>;\n    public itemTipocursosGet(idtipocurso?: string, nombre?: string, estado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<ItemTipocursos>>>;\n    public itemTipocursosGet(idtipocurso?: string, nombre?: string, estado?: string, fecharegistro?: string, select?: string, order?: string, range?: string, rangeUnit?: string, offset?: string, limit?: string, prefer?: 'count=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idtipocurso !== undefined && idtipocurso !== null) {\n            queryParameters = queryParameters.set('idtipocurso', <any>idtipocurso);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (estado !== undefined && estado !== null) {\n            queryParameters = queryParameters.set('estado', <any>estado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n        if (order !== undefined && order !== null) {\n            queryParameters = queryParameters.set('order', <any>order);\n        }\n        if (offset !== undefined && offset !== null) {\n            queryParameters = queryParameters.set('offset', <any>offset);\n        }\n        if (limit !== undefined && limit !== null) {\n            queryParameters = queryParameters.set('limit', <any>limit);\n        }\n\n        let headers = this.defaultHeaders;\n        if (range !== undefined && range !== null) {\n            headers = headers.set('Range', String(range));\n        }\n        if (rangeUnit !== undefined && rangeUnit !== null) {\n            headers = headers.set('Range-Unit', String(rangeUnit));\n        }\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n\n        return this.httpClient.get<Array<ItemTipocursos>>(`${this.basePath}/item_tipocursos`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param idtipocurso \n     * @param nombre \n     * @param estado \n     * @param fecharegistro \n     * @param itemTipocursos item_tipocursos\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public itemTipocursosPatch(idtipocurso?: string, nombre?: string, estado?: string, fecharegistro?: string, itemTipocursos?: ItemTipocursos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public itemTipocursosPatch(idtipocurso?: string, nombre?: string, estado?: string, fecharegistro?: string, itemTipocursos?: ItemTipocursos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public itemTipocursosPatch(idtipocurso?: string, nombre?: string, estado?: string, fecharegistro?: string, itemTipocursos?: ItemTipocursos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public itemTipocursosPatch(idtipocurso?: string, nombre?: string, estado?: string, fecharegistro?: string, itemTipocursos?: ItemTipocursos, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (idtipocurso !== undefined && idtipocurso !== null) {\n            queryParameters = queryParameters.set('idtipocurso', <any>idtipocurso);\n        }\n        if (nombre !== undefined && nombre !== null) {\n            queryParameters = queryParameters.set('nombre', <any>nombre);\n        }\n        if (estado !== undefined && estado !== null) {\n            queryParameters = queryParameters.set('estado', <any>estado);\n        }\n        if (fecharegistro !== undefined && fecharegistro !== null) {\n            queryParameters = queryParameters.set('fecharegistro', <any>fecharegistro);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.basePath}/item_tipocursos`,\n            itemTipocursos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param itemTipocursos item_tipocursos\n     * @param select Filtering Columns\n     * @param prefer Preference\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public itemTipocursosPost(itemTipocursos?: ItemTipocursos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public itemTipocursosPost(itemTipocursos?: ItemTipocursos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public itemTipocursosPost(itemTipocursos?: ItemTipocursos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public itemTipocursosPost(itemTipocursos?: ItemTipocursos, select?: string, prefer?: 'return=representation' | 'return=minimal' | 'return=none', observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (select !== undefined && select !== null) {\n            queryParameters = queryParameters.set('select', <any>select);\n        }\n\n        let headers = this.defaultHeaders;\n        if (prefer !== undefined && prefer !== null) {\n            headers = headers.set('Prefer', String(prefer));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/vnd.pgrst.object+json',\n            'text/csv'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/item_tipocursos`,\n            itemTipocursos,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","    import { HttpUrlEncodingCodec } from '@angular/common/http';\n\n/**\n* CustomHttpUrlEncodingCodec\n* Fix plus sign (+) not encoding, so sent as blank space\n* See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n*/\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n    encodeKey(k: string): string {\n        k = super.encodeKey(k);\n        return k.replace(/\\+/gi, '%2B');\n    }\n    encodeValue(v: string): string {\n        v = super.encodeValue(v);\n        return v.replace(/\\+/gi, '%2B');\n    }\n}\n\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n"]}